/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'A..Mazing.exe_'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

union _LARGE_INTEGER;
struct _EXCEPTION_RECORD;
struct IStream;
struct _GUID;
union _ULARGE_INTEGER;
struct tagSTATSTG;

/* 1 */
struct RUNTIME_FUNCTION
{
  void *__ptr32 FunctionStart;
  void *__ptr32 FunctionEnd;
  void *__ptr32 UnwindInfo;
};

/* 2 */
struct UNWIND_INFO_HDR
{
  char Ver3_Flags;
  char PrologSize;
  char CntUnwindCodes;
  char FrReg_FrRegOff;
};

/* 3 */
struct UNWIND_CODE
{
  char PrologOff;
  char OpCode_OpInfo;
};

/* 5 */
typedef unsigned int DWORD;

/* 7 */
struct _FILETIME
{
  DWORD dwLowDateTime;
  DWORD dwHighDateTime;
};

/* 6 */
typedef _FILETIME FILETIME;

/* 8 */
typedef char CHAR;

/* 4 */
struct _WIN32_FIND_DATAA
{
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD dwReserved0;
  DWORD dwReserved1;
  CHAR cFileName[260];
  CHAR cAlternateFileName[14];
};

/* 10 */
typedef void (__cdecl *_PVFV)();

/* 9 */
#pragma pack(push, 8)
struct _onexit_table_t
{
  _PVFV *_first;
  _PVFV *_last;
  _PVFV *_end;
};
#pragma pack(pop)

/* 11 */
typedef _LARGE_INTEGER LARGE_INTEGER;

/* 14 */
typedef int LONG;

/* 13 */
struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E
{
  DWORD LowPart;
  LONG HighPart;
};

/* 15 */
typedef __int64 LONGLONG;

/* 12 */
union _LARGE_INTEGER
{
  struct
  {
    DWORD LowPart;
    LONG HighPart;
  };
  _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E u;
  LONGLONG QuadPart;
};

/* 17 */
typedef unsigned __int64 DWORD64;

/* 18 */
typedef unsigned __int16 WORD;

/* 23 */
typedef unsigned __int8 BYTE;

/* 26 */
typedef unsigned __int64 ULONGLONG;

/* 25 */
struct __declspec(align(16)) _M128A
{
  ULONGLONG Low;
  LONGLONG High;
};

/* 24 */
typedef _M128A M128A;

/* 22 */
struct __declspec(align(16)) _XSAVE_FORMAT
{
  WORD ControlWord;
  WORD StatusWord;
  BYTE TagWord;
  BYTE Reserved1;
  WORD ErrorOpcode;
  DWORD ErrorOffset;
  WORD ErrorSelector;
  WORD Reserved2;
  DWORD DataOffset;
  WORD DataSelector;
  WORD Reserved3;
  DWORD MxCsr;
  DWORD MxCsr_Mask;
  M128A FloatRegisters[8];
  M128A XmmRegisters[16];
  BYTE Reserved4[96];
};

/* 21 */
typedef _XSAVE_FORMAT XSAVE_FORMAT;

/* 20 */
typedef XSAVE_FORMAT XMM_SAVE_AREA32;

/* 27 */
struct _CONTEXT::$D2ECA93702C646ACAFACD524BE9E8FEB::$897D11C01F73F7E79A06B0B9ED9B9414
{
  M128A Header[2];
  M128A Legacy[8];
  M128A Xmm0;
  M128A Xmm1;
  M128A Xmm2;
  M128A Xmm3;
  M128A Xmm4;
  M128A Xmm5;
  M128A Xmm6;
  M128A Xmm7;
  M128A Xmm8;
  M128A Xmm9;
  M128A Xmm10;
  M128A Xmm11;
  M128A Xmm12;
  M128A Xmm13;
  M128A Xmm14;
  M128A Xmm15;
};

/* 19 */
union _CONTEXT::$D2ECA93702C646ACAFACD524BE9E8FEB
{
  XMM_SAVE_AREA32 FltSave;
  struct
  {
    M128A Header[2];
    M128A Legacy[8];
    M128A Xmm0;
    M128A Xmm1;
    M128A Xmm2;
    M128A Xmm3;
    M128A Xmm4;
    M128A Xmm5;
    M128A Xmm6;
    M128A Xmm7;
    M128A Xmm8;
    M128A Xmm9;
    M128A Xmm10;
    M128A Xmm11;
    M128A Xmm12;
    M128A Xmm13;
    M128A Xmm14;
    M128A Xmm15;
  };
};

/* 16 */
struct __declspec(align(16)) _CONTEXT
{
  DWORD64 P1Home;
  DWORD64 P2Home;
  DWORD64 P3Home;
  DWORD64 P4Home;
  DWORD64 P5Home;
  DWORD64 P6Home;
  DWORD ContextFlags;
  DWORD MxCsr;
  WORD SegCs;
  WORD SegDs;
  WORD SegEs;
  WORD SegFs;
  WORD SegGs;
  WORD SegSs;
  DWORD EFlags;
  DWORD64 Dr0;
  DWORD64 Dr1;
  DWORD64 Dr2;
  DWORD64 Dr3;
  DWORD64 Dr6;
  DWORD64 Dr7;
  DWORD64 Rax;
  DWORD64 Rcx;
  DWORD64 Rdx;
  DWORD64 Rbx;
  DWORD64 Rsp;
  DWORD64 Rbp;
  DWORD64 Rsi;
  DWORD64 Rdi;
  DWORD64 R8;
  DWORD64 R9;
  DWORD64 R10;
  DWORD64 R11;
  DWORD64 R12;
  DWORD64 R13;
  DWORD64 R14;
  DWORD64 R15;
  DWORD64 Rip;
  union
  {
    XMM_SAVE_AREA32 FltSave;
    struct
    {
      M128A Header[2];
      M128A Legacy[8];
      M128A Xmm0;
      M128A Xmm1;
      M128A Xmm2;
      M128A Xmm3;
      M128A Xmm4;
      M128A Xmm5;
      M128A Xmm6;
      M128A Xmm7;
      M128A Xmm8;
      M128A Xmm9;
      M128A Xmm10;
      M128A Xmm11;
      M128A Xmm12;
      M128A Xmm13;
      M128A Xmm14;
      M128A Xmm15;
    };
  };
  M128A VectorRegister[26];
  DWORD64 VectorControl;
  DWORD64 DebugControl;
  DWORD64 LastBranchToRip;
  DWORD64 LastBranchFromRip;
  DWORD64 LastExceptionToRip;
  DWORD64 LastExceptionFromRip;
};

/* 30 */
typedef _EXCEPTION_RECORD EXCEPTION_RECORD;

/* 29 */
typedef EXCEPTION_RECORD *PEXCEPTION_RECORD;

/* 34 */
typedef _CONTEXT *PCONTEXT;

/* 28 */
struct _EXCEPTION_POINTERS
{
  PEXCEPTION_RECORD ExceptionRecord;
  PCONTEXT ContextRecord;
};

/* 32 */
typedef void *PVOID;

/* 33 */
typedef unsigned __int64 ULONG_PTR;

/* 31 */
struct _EXCEPTION_RECORD
{
  DWORD ExceptionCode;
  DWORD ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  PVOID ExceptionAddress;
  DWORD NumberParameters;
  ULONG_PTR ExceptionInformation[15];
};

/* 35 */
struct C_SCOPE_TABLE
{
  void *__ptr32 Begin;
  void *__ptr32 End;
  void *__ptr32 Handler;
  void *__ptr32 Target;
};

/* 36 */
struct charNode;

/* 37 */
struct __unaligned __declspec(align(2)) user
{
  __int64 score;
  unsigned __int8 x;
  unsigned __int8 y;
  char name[128];
};

/* 39 */
enum maze_type : unsigned __int8
{
  MAZE_CLASSIC = 0x1,
  MAZE_MULTIPASS = 0x2,
  MAZE_MULTIPASS_TRAPS = 0x3,
};

/* 40 */
struct maze_classic
{
  char *maze;
};

/* 43 */
struct __unaligned __declspec(align(1)) trap
{
  __int64 score;
  unsigned __int16 position;
  char character;
  int is_hit;
};

/* 41 */
struct __unaligned __declspec(align(1)) maze_multipass
{
  unsigned __int8 num_traps;
  trap traps[256];
  char *maze;
  char wall_percent_to_remove;
};

/* 42 */
union __unaligned __declspec(align(1)) maze_data
{
  __unaligned __declspec(align(1)) struct maze_classic classic;
  __unaligned __declspec(align(1)) struct maze_multipass multipass;
};

/* 61 */
struct rank
{
  uint64_t score;
  char name[128];
};

/* 62 */
struct __unaligned __declspec(align(1)) rank_data
{
  unsigned __int8 nr_ranks;
  rank ranks[128];
};

/* 38 */
struct maze
{
  unsigned __int8 width;
  unsigned __int8 height;
  maze_type maze_type;
  _BYTE maze_name[128];
  char creator_name[128];
  maze_data maze_data;
  rank_data rank_data;
};

/* 49 */
typedef int HRESULT;

/* 47 */
typedef _GUID GUID;

/* 46 */
typedef GUID IID;

/* 50 */
typedef unsigned int ULONG;

/* 51 */
typedef _ULARGE_INTEGER ULARGE_INTEGER;

/* 53 */
struct _ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC
{
  DWORD LowPart;
  DWORD HighPart;
};

/* 52 */
union _ULARGE_INTEGER
{
  struct
  {
    DWORD LowPart;
    DWORD HighPart;
  };
  _ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC u;
  ULONGLONG QuadPart;
};

/* 54 */
typedef tagSTATSTG STATSTG;

/* 44 */
#pragma pack(push, 8)
struct IStreamVtbl
{
  HRESULT (__stdcall *QueryInterface)(IStream *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IStream *This);
  ULONG (__stdcall *Release)(IStream *This);
  HRESULT (__stdcall *Read)(IStream *This, void *pv, ULONG cb, ULONG *pcbRead);
  HRESULT (__stdcall *Write)(IStream *This, const void *pv, ULONG cb, ULONG *pcbWritten);
  HRESULT (__stdcall *Seek)(IStream *This, LARGE_INTEGER dlibMove, DWORD dwOrigin, ULARGE_INTEGER *plibNewPosition);
  HRESULT (__stdcall *SetSize)(IStream *This, ULARGE_INTEGER libNewSize);
  HRESULT (__stdcall *CopyTo)(IStream *This, IStream *pstm, ULARGE_INTEGER cb, ULARGE_INTEGER *pcbRead, ULARGE_INTEGER *pcbWritten);
  HRESULT (__stdcall *Commit)(IStream *This, DWORD grfCommitFlags);
  HRESULT (__stdcall *Revert)(IStream *This);
  HRESULT (__stdcall *LockRegion)(IStream *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);
  HRESULT (__stdcall *UnlockRegion)(IStream *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);
  HRESULT (__stdcall *Stat)(IStream *This, STATSTG *pstatstg, DWORD grfStatFlag);
  HRESULT (__stdcall *Clone)(IStream *This, IStream **ppstm);
};
#pragma pack(pop)

/* 45 */
#pragma pack(push, 8)
struct IStream
{
  IStreamVtbl *lpVtbl;
};
#pragma pack(pop)

/* 48 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 59 */
typedef unsigned __int16 wchar_t;

/* 58 */
typedef wchar_t WCHAR;

/* 57 */
typedef WCHAR OLECHAR;

/* 56 */
typedef OLECHAR *LPOLESTR;

/* 60 */
typedef GUID CLSID;

/* 55 */
#pragma pack(push, 8)
struct tagSTATSTG
{
  LPOLESTR pwcsName;
  DWORD type;
  ULARGE_INTEGER cbSize;
  FILETIME mtime;
  FILETIME ctime;
  FILETIME atime;
  DWORD grfMode;
  DWORD grfLocksSupported;
  CLSID clsid;
  DWORD grfStateBits;
  DWORD reserved;
};
#pragma pack(pop)

/* 63 */
struct maze_path
{
  char path[256];
};

/* 64 */
struct maze_paths
{
  struct maze_path paths[32];
};

/* 65 */
struct __declspec(align(8)) int_stack
{
  int count;
  unsigned int capacity;
  int *data;
};

/* 67 */
struct _SLIST_HEADER::$2AAD3A9E0F86A5BF9BE50654CA710F62
{
  ULONGLONG Alignment;
  ULONGLONG Region;
};

/* 68 */
struct _SLIST_HEADER::$F9F9EB832D628D73E611400623F67F2B
{
  unsigned __int64 Depth : 16;
  unsigned __int64 Sequence : 48;
  unsigned __int64 Reserved : 4;
  unsigned __int64 NextEntry : 60;
};

/* 66 */
union __declspec(align(16)) _SLIST_HEADER
{
  struct
  {
    ULONGLONG Alignment;
    ULONGLONG Region;
  };
  _SLIST_HEADER::$F9F9EB832D628D73E611400623F67F2B HeaderX64;
};

