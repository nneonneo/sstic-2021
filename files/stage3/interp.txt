"     0:";  # jmp 0x91ccf
" 91ccf:";  r[0] = input[0]
" 91cd2:";  r[1] = 0
" 91cd5:";  # jne r0, r1, 0x91ce1
" 91cdc:";  # jmp 0x37d98d
"37d98d:";  r[0] = 255
"37d990:";  r[1] = input[9]
"37d993:";  # jne r0, r1, 0xd3bbe
"37d99a:";  r[0] = 255
"37d99d:";  r[1] = input[10]
"37d9a0:";  # jne r0, r1, 0xd3bbe
"37d9a7:";  r[0] = 255
"37d9aa:";  r[1] = input[11]
"37d9ad:";  # jne r0, r1, 0xd3bbe
"37d9b4:";  r[0] = 255
"37d9b7:";  r[1] = input[12]
"37d9ba:";  # jne r0, r1, 0xd3bbe
"37d9c1:";  r[0] = 255
"37d9c4:";  r[1] = input[13]
"37d9c7:";  # jne r0, r1, 0xd3bbe
"37d9ce:";  r[0] = 255
"37d9d1:";  r[1] = input[14]
"37d9d4:";  # jne r0, r1, 0xd3bbe
"37d9db:";  r[0] = 255
"37d9de:";  r[1] = input[15]
"37d9e1:";  # jne r0, r1, 0xd3bbe
"37d9e8:";  r[0] = 255
"37d9eb:";  r[1] = input[16]
"37d9ee:";  # jne r0, r1, 0xd3bbe
"37d9f5:";  # jmp 0x267d35
"267d35:";  r[0] = input[1]
"267d38:";  r[1] = input[2]
"267d3b:";  r[2] = input[3]
"267d3e:";  r[3] = input[4]
"267d41:";  r[4] = input[5]
"267d44:";  r[5] = input[6]
"267d47:";  r[6] = input[7]
"267d4a:";  r[7] = input[8]
"267d4d:";  r[16] = prog[r[0] + 0x134b40]
"267d54:";  r[17] = prog[r[1] + 0x33b92c]
"267d5b:";  r[18] = prog[r[2] + 0x175554]
"267d62:";  r[19] = prog[r[3] + 0x710c8]
"267d69:";  r[20] = prog[r[4] + 0xc359b]
"267d70:";  r[21] = prog[r[5] + 0x816ff]
"267d77:";  r[22] = prog[r[6] + 0x1b5e1f]
"267d7e:";  r[23] = prog[r[7] + 0x2e9c33]
"267d85:";  r[16] = r[16] ^ r[21]
"267d89:";  r[17] = r[17] ^ r[22]
"267d8d:";  r[18] = r[18] ^ r[23]
"267d91:";  r[19] = r[19] ^ r[20]
"267d95:";  r[20] = r[20] ^ r[18]
"267d99:";  r[21] = r[21] ^ r[19]
"267d9d:";  r[22] = r[22] ^ r[16]
"267da1:";  r[23] = r[23] ^ r[17]
"267da5:";  r[16] = r[16] ^ r[23]
"267da9:";  r[17] = r[17] ^ r[20]
"267dad:";  r[18] = r[18] ^ r[21]
"267db1:";  r[19] = r[19] ^ r[22]
"267db5:";  r[20] = r[20] ^ r[19]
"267db9:";  r[21] = r[21] ^ r[16]
"267dbd:";  r[22] = r[22] ^ r[17]
"267dc1:";  r[23] = r[23] ^ r[18]
"267dc5:";  r[8] = prog[r[20] + 0xa278f]
"267dcc:";  r[9] = prog[r[21] + 0x70e0f]
"267dd3:";  r[10] = prog[r[22] + 0x34c54b]
"267dda:";  r[11] = prog[r[23] + 0x30a1eb]
"267de1:";  r[12] = prog[r[16] + 0x278225]
"267de8:";  r[13] = prog[r[17] + 0x257a61]
"267def:";  r[14] = prog[r[18] + 0x34c21f]
"267df6:";  r[15] = prog[r[19] + 0x33affa]
for i in range(16):
    r[i] ^= manip[i]
"267dfd:";  r[16] = prog[r[8] + 0x34c11f]
"267e04:";  r[17] = prog[r[9] + 0x31acfa]
"267e0b:";  r[18] = prog[r[10] + 0x34becf]
"267e12:";  r[19] = prog[r[11] + 0x27863a]
"267e19:";  # jmp 0x105
"   105:";  r[20] = prog[r[12] + 0x2d9391]
"   10c:";  r[21] = prog[r[13] + 0x124449]
"   113:";  r[22] = prog[r[14] + 0x185877]
"   11a:";  r[23] = prog[r[15] + 0x20462]
"   121:";  r[16] = r[16] ^ r[21]
"   125:";  r[17] = r[17] ^ r[22]
"   129:";  r[18] = r[18] ^ r[23]
"   12d:";  r[19] = r[19] ^ r[20]
"   131:";  r[20] = r[20] ^ r[18]
"   135:";  r[21] = r[21] ^ r[19]
"   139:";  r[22] = r[22] ^ r[16]
"   13d:";  r[23] = r[23] ^ r[17]
"   141:";  r[16] = r[16] ^ r[23]
"   145:";  r[17] = r[17] ^ r[20]
"   149:";  r[18] = r[18] ^ r[21]
"   14d:";  r[19] = r[19] ^ r[22]
"   151:";  r[20] = r[20] ^ r[19]
"   155:";  r[21] = r[21] ^ r[16]
"   159:";  r[22] = r[22] ^ r[17]
"   15d:";  r[23] = r[23] ^ r[18]
"   161:";  r[0] = prog[256*r[0] + r[20] + 0x37da47]
"   169:";  r[1] = prog[256*r[1] + r[21] + 0x37da47]
"   171:";  r[2] = prog[256*r[2] + r[22] + 0x37da47]
"   179:";  r[3] = prog[256*r[3] + r[23] + 0x37da47]
"   181:";  r[4] = prog[256*r[4] + r[16] + 0x37da47]
"   189:";  r[5] = prog[256*r[5] + r[17] + 0x37da47]
"   191:";  r[6] = prog[256*r[6] + r[18] + 0x37da47]
"   199:";  r[7] = prog[256*r[7] + r[19] + 0x37da47]
"   1a1:";  r[16] = prog[r[0] + 0x185654]
"   1a8:";  r[17] = prog[r[1] + 0x2e9b33]
"   1af:";  r[18] = prog[r[2] + 0xb28e2]
"   1b6:";  r[19] = prog[r[3] + 0x1b60cc]
"   1bd:";  # jmp 0xf3f16
" f3f16:";  r[20] = prog[r[4] + 0x31a9aa]
" f3f1d:";  r[21] = prog[r[5] + 0x37d6e8]
" f3f24:";  r[22] = prog[r[6] + 0x91bcf]
" f3f2b:";  r[23] = prog[r[7] + 0x91e89]
" f3f32:";  r[16] = r[16] ^ r[21]
" f3f36:";  r[17] = r[17] ^ r[22]
" f3f3a:";  r[18] = r[18] ^ r[23]
" f3f3e:";  r[19] = r[19] ^ r[20]
" f3f42:";  r[20] = r[20] ^ r[18]
" f3f46:";  r[21] = r[21] ^ r[19]
" f3f4a:";  r[22] = r[22] ^ r[16]
" f3f4e:";  r[23] = r[23] ^ r[17]
" f3f52:";  r[16] = r[16] ^ r[23]
" f3f56:";  # jmp 0x81928
" 81928:";  r[17] = r[17] ^ r[20]
" 8192c:";  r[18] = r[18] ^ r[21]
" 81930:";  r[19] = r[19] ^ r[22]
" 81934:";  r[20] = r[20] ^ r[19]
" 81938:";  r[21] = r[21] ^ r[16]
" 8193c:";  r[22] = r[22] ^ r[17]
" 81940:";  r[23] = r[23] ^ r[18]
" 81944:";  r[8] = prog[256*r[8] + r[20] + 0x1f6c70]
" 8194c:";  r[9] = prog[256*r[9] + r[21] + 0x1f6c70]
" 81954:";  r[10] = prog[256*r[10] + r[22] + 0x1f6c70]
" 8195c:";  r[11] = prog[256*r[11] + r[23] + 0x1f6c70]
" 81964:";  r[12] = prog[256*r[12] + r[16] + 0x1f6c70]
" 8196c:";  r[13] = prog[256*r[13] + r[17] + 0x1f6c70]
" 81974:";  r[14] = prog[256*r[14] + r[18] + 0x1f6c70]
" 8197c:";  r[15] = prog[256*r[15] + r[19] + 0x1f6c70]
" 81984:";  r[16] = prog[r[8] + 0x37d7e8]
" 8198b:";  r[17] = prog[r[9] + 0x5]
" 81992:";  r[18] = prog[r[10] + 0x2889a7]
" 81999:";  r[19] = prog[r[11] + 0x1b625c]
" 819a0:";  r[20] = prog[r[12] + 0x2475ce]
" 819a7:";  r[21] = prog[r[13] + 0x2a8f2f]
" 819ae:";  r[22] = prog[r[14] + 0x91f89]
" 819b5:";  r[23] = prog[r[15] + 0x91acf]
" 819bc:";  # jmp 0x33b5e4
"33b5e4:";  r[16] = r[16] ^ r[21]
"33b5e8:";  r[17] = r[17] ^ r[22]
"33b5ec:";  r[18] = r[18] ^ r[23]
"33b5f0:";  r[19] = r[19] ^ r[20]
"33b5f4:";  r[20] = r[20] ^ r[18]
"33b5f8:";  r[21] = r[21] ^ r[19]
"33b5fc:";  r[22] = r[22] ^ r[16]
"33b600:";  r[23] = r[23] ^ r[17]
"33b604:";  r[16] = r[16] ^ r[23]
"33b608:";  r[17] = r[17] ^ r[20]
"33b60c:";  r[18] = r[18] ^ r[21]
"33b610:";  r[19] = r[19] ^ r[22]
"33b614:";  r[20] = r[20] ^ r[19]
"33b618:";  r[21] = r[21] ^ r[16]
"33b61c:";  r[22] = r[22] ^ r[17]
"33b620:";  r[23] = r[23] ^ r[18]
"33b624:";  r[0] = prog[256*r[0] + r[20] + 0x247803]
"33b62c:";  r[1] = prog[256*r[1] + r[21] + 0x247803]
"33b634:";  r[2] = prog[256*r[2] + r[22] + 0x247803]
"33b63c:";  r[3] = prog[256*r[3] + r[23] + 0x247803]
"33b644:";  r[4] = prog[256*r[4] + r[16] + 0x247803]
"33b64c:";  r[5] = prog[256*r[5] + r[17] + 0x247803]
"33b654:";  r[6] = prog[256*r[6] + r[18] + 0x247803]
"33b65c:";  r[7] = prog[256*r[7] + r[19] + 0x247803]
"33b664:";  r[16] = prog[r[0] + 0x37d1d8]
"33b66b:";  r[17] = prog[r[1] + 0x81828]
"33b672:";  r[18] = prog[r[2] + 0x36caeb]
"33b679:";  r[19] = prog[r[3] + 0x124913]
"33b680:";  r[20] = prog[r[4] + 0xb29e2]
"33b687:";  r[21] = prog[r[5] + 0xb2eb3]
"33b68e:";  r[22] = prog[r[6] + 0x39e155]
"33b695:";  r[23] = prog[r[7] + 0xb2d81]
"33b69c:";  r[16] = r[16] ^ r[21]
"33b6a0:";  r[17] = r[17] ^ r[22]
"33b6a4:";  r[18] = r[18] ^ r[23]
"33b6a8:";  r[19] = r[19] ^ r[20]
"33b6ac:";  r[20] = r[20] ^ r[18]
"33b6b0:";  # jmp 0x1b5dbe
"1b5dbe:";  r[21] = r[21] ^ r[19]
"1b5dc2:";  r[22] = r[22] ^ r[16]
"1b5dc6:";  r[23] = r[23] ^ r[17]
"1b5dca:";  r[16] = r[16] ^ r[23]
"1b5dce:";  r[17] = r[17] ^ r[20]
"1b5dd2:";  r[18] = r[18] ^ r[21]
"1b5dd6:";  r[19] = r[19] ^ r[22]
"1b5dda:";  r[20] = r[20] ^ r[19]
"1b5dde:";  r[21] = r[21] ^ r[16]
"1b5de2:";  r[22] = r[22] ^ r[17]
"1b5de6:";  r[23] = r[23] ^ r[18]
"1b5dea:";  r[8] = prog[256*r[8] + r[20] + 0x1f6c70]
"1b5df2:";  r[9] = prog[256*r[9] + r[21] + 0x1f6c70]
"1b5dfa:";  r[10] = prog[256*r[10] + r[22] + 0x1f6c70]
"1b5e02:";  r[11] = prog[256*r[11] + r[23] + 0x1f6c70]
"1b5e0a:";  r[12] = prog[256*r[12] + r[16] + 0x1f6c70]
"1b5e12:";  r[13] = prog[256*r[13] + r[17] + 0x1f6c70]
"1b5e1a:";  # jmp 0x1b61fb
"1b61fb:";  r[14] = prog[256*r[14] + r[18] + 0x1f6c70]
"1b6203:";  r[15] = prog[256*r[15] + r[19] + 0x1f6c70]
"1b620b:";  r[16] = prog[r[8] + 0xc37c8]
"1b6212:";  r[17] = prog[r[9] + 0x30a36d]
"1b6219:";  r[18] = prog[r[10] + 0x38dadd]
"1b6220:";  r[19] = prog[r[11] + 0x1b5cbe]
"1b6227:";  r[20] = prog[r[12] + 0x34c44b]
"1b622e:";  r[21] = prog[r[13] + 0x38dd48]
"1b6235:";  r[22] = prog[r[14] + 0x2c9160]
"1b623c:";  r[23] = prog[r[15] + 0x1d6692]
"1b6243:";  r[16] = r[16] ^ r[21]
"1b6247:";  r[17] = r[17] ^ r[22]
"1b624b:";  r[18] = r[18] ^ r[23]
"1b624f:";  r[19] = r[19] ^ r[20]
"1b6253:";  r[20] = r[20] ^ r[18]
"1b6257:";  # jmp 0x36c7e7
"36c7e7:";  r[21] = r[21] ^ r[19]
"36c7eb:";  r[22] = r[22] ^ r[16]
"36c7ef:";  r[23] = r[23] ^ r[17]
"36c7f3:";  r[16] = r[16] ^ r[23]
"36c7f7:";  r[17] = r[17] ^ r[20]
"36c7fb:";  r[18] = r[18] ^ r[21]
"36c7ff:";  r[19] = r[19] ^ r[22]
"36c803:";  r[20] = r[20] ^ r[19]
"36c807:";  r[21] = r[21] ^ r[16]
"36c80b:";  r[22] = r[22] ^ r[17]
"36c80f:";  r[23] = r[23] ^ r[18]
"36c813:";  r[0] = prog[256*r[0] + r[20] + 0x247803]
"36c81b:";  r[1] = prog[256*r[1] + r[21] + 0x247803]
"36c823:";  r[2] = prog[256*r[2] + r[22] + 0x247803]
"36c82b:";  r[3] = prog[256*r[3] + r[23] + 0x247803]
"36c833:";  r[4] = prog[256*r[4] + r[16] + 0x247803]
"36c83b:";  r[5] = prog[256*r[5] + r[17] + 0x247803]
"36c843:";  r[6] = prog[256*r[6] + r[18] + 0x247803]
"36c84b:";  r[7] = prog[256*r[7] + r[19] + 0x247803]
"36c853:";  r[16] = prog[256*r[0] + r[1] + 0x2c9291]
"36c85b:";  r[17] = prog[256*r[1] + r[2] + 0x134d43]
"36c863:";  r[18] = prog[256*r[2] + r[3] + 0x2372d1]
"36c86b:";  r[19] = prog[256*r[3] + r[0] + 0xd3da2]
"36c873:";  r[4] = prog[256*r[4] + r[16] + 0xf3f5b]
"36c87b:";  r[5] = prog[256*r[5] + r[17] + 0xa28e2]
"36c883:";  r[6] = prog[256*r[6] + r[18] + 0x124a40]
"36c88b:";  r[7] = prog[256*r[7] + r[19] + 0x1040bf]
"36c893:";  r[0] = prog[256*r[0] + r[4] + 0x206df2]
"36c89b:";  r[1] = prog[256*r[1] + r[5] + 0x2a902f]
"36c8a3:";  r[2] = prog[256*r[2] + r[6] + 0x288c91]
"36c8ab:";  r[3] = prog[256*r[3] + r[7] + 0x257b61]
"36c8b3:";  # jmp 0x1b635c
"1b635c:";  r[8] = prog[256*r[8] + r[12] + 0x1b6492]
"1b6364:";  r[9] = prog[256*r[9] + r[13] + 0x2fa0eb]
"1b636c:";  r[10] = prog[256*r[10] + r[14] + 0x35c6e7]
"1b6374:";  r[11] = prog[256*r[11] + r[15] + 0x1141bf]
"1b637c:";  r[16] = prog[256*r[8] + r[9] + 0x144d43]
"1b6384:";  r[17] = prog[256*r[9] + r[10] + 0x40c0f]
"1b638c:";  r[18] = prog[256*r[10] + r[11] + 0x50d0f]
"1b6394:";  r[19] = prog[256*r[11] + r[8] + 0x26801e]
"1b639c:";  r[12] = prog[256*r[12] + r[16] + 0x1e6a13]
"1b63a4:";  r[13] = prog[256*r[13] + r[17] + 0x33bc61]
"1b63ac:";  r[14] = prog[256*r[14] + r[18] + 0x714c5]
"1b63b4:";  r[15] = prog[256*r[15] + r[19] + 0x1c6592]
"1b63bc:";  r[16] = prog[r[0] + 0x1c2]
"1b63c3:";  r[17] = prog[r[1] + 0x1247cc]
"1b63ca:";  r[18] = prog[r[2] + 0x33b82c]
"1b63d1:";  r[19] = prog[r[3] + 0x124249]
"1b63d8:";  r[20] = prog[r[4] + 0x309e9]
"1b63df:";  r[21] = prog[r[5] + 0x2b902f]
"1b63e6:";  r[22] = prog[r[6] + 0x92119]
"1b63ed:";  r[23] = prog[r[7] + 0x70d0f]
"1b63f4:";  r[16] = r[16] ^ r[21]
"1b63f8:";  r[17] = r[17] ^ r[22]
"1b63fc:";  r[18] = r[18] ^ r[23]
"1b6400:";  r[19] = r[19] ^ r[20]
"1b6404:";  r[20] = r[20] ^ r[18]
"1b6408:";  r[21] = r[21] ^ r[19]
"1b640c:";  r[22] = r[22] ^ r[16]
"1b6410:";  r[23] = r[23] ^ r[17]
"1b6414:";  r[16] = r[16] ^ r[23]
"1b6418:";  r[17] = r[17] ^ r[20]
"1b641c:";  r[18] = r[18] ^ r[21]
"1b6420:";  r[19] = r[19] ^ r[22]
"1b6424:";  r[20] = r[20] ^ r[19]
"1b6428:";  r[21] = r[21] ^ r[16]
"1b642c:";  r[22] = r[22] ^ r[17]
"1b6430:";  r[23] = r[23] ^ r[18]
"1b6434:";  # jmp 0xd3aac
" d3aac:";  r[8] = prog[256*r[8] + r[20] + 0x30a4ce]
" d3ab4:";  r[9] = prog[256*r[9] + r[21] + 0x30a4ce]
" d3abc:";  r[10] = prog[256*r[10] + r[22] + 0x30a4ce]
" d3ac4:";  r[11] = prog[256*r[11] + r[23] + 0x30a4ce]
" d3acc:";  r[12] = prog[256*r[12] + r[16] + 0x30a4ce]
" d3ad4:";  r[13] = prog[256*r[13] + r[17] + 0x30a4ce]
" d3adc:";  r[14] = prog[256*r[14] + r[18] + 0x30a4ce]
" d3ae4:";  r[15] = prog[256*r[15] + r[19] + 0x30a4ce]
" d3aec:";  r[16] = prog[r[8] + 0x1650af]
" d3af3:";  r[17] = prog[r[9] + 0x34bfcf]
" d3afa:";  r[18] = prog[r[10] + 0x2d9491]
" d3b01:";  r[19] = prog[r[11] + 0x38df55]
" d3b08:";  r[20] = prog[r[12] + 0x267f1e]
" d3b0f:";  r[21] = prog[r[13] + 0x2f9e33]
" d3b16:";  r[22] = prog[r[14] + 0x31abfa]
" d3b1d:";  r[23] = prog[r[15] + 0x36c9eb]
" d3b24:";  r[16] = r[16] ^ r[21]
" d3b28:";  r[17] = r[17] ^ r[22]
" d3b2c:";  r[18] = r[18] ^ r[23]
" d3b30:";  r[19] = r[19] ^ r[20]
" d3b34:";  r[20] = r[20] ^ r[18]
" d3b38:";  r[21] = r[21] ^ r[19]
" d3b3c:";  r[22] = r[22] ^ r[16]
" d3b40:";  r[23] = r[23] ^ r[17]
" d3b44:";  r[16] = r[16] ^ r[23]
" d3b48:";  r[17] = r[17] ^ r[20]
" d3b4c:";  r[18] = r[18] ^ r[21]
" d3b50:";  r[19] = r[19] ^ r[22]
" d3b54:";  r[20] = r[20] ^ r[19]
" d3b58:";  r[21] = r[21] ^ r[16]
" d3b5c:";  r[22] = r[22] ^ r[17]
" d3b60:";  r[23] = r[23] ^ r[18]
" d3b64:";  r[0] = prog[256*r[0] + r[20] + 0x195cbe]
" d3b6c:";  r[1] = prog[256*r[1] + r[21] + 0x195cbe]
" d3b74:";  r[2] = prog[256*r[2] + r[22] + 0x195cbe]
" d3b7c:";  r[3] = prog[256*r[3] + r[23] + 0x195cbe]
" d3b84:";  r[4] = prog[256*r[4] + r[16] + 0x195cbe]
" d3b8c:";  r[5] = prog[256*r[5] + r[17] + 0x195cbe]
" d3b94:";  r[6] = prog[256*r[6] + r[18] + 0x195cbe]
" d3b9c:";  r[7] = prog[256*r[7] + r[19] + 0x195cbe]
" d3ba4:";  r[16] = prog[r[0] + 0x1f6a70]
" d3bab:";  r[17] = prog[r[1] + 0xb2b9c]
" d3bb2:";  r[18] = prog[r[2] + 0x2787a7]
" d3bb9:";  # jmp 0x31a65b
"31a65b:";  r[19] = prog[r[3] + 0x1e6913]
"31a662:";  r[20] = prog[r[4] + 0x711c8]
"31a669:";  r[21] = prog[r[5] + 0x31a8aa]
"31a670:";  r[22] = prog[r[6] + 0x30a0eb]
"31a677:";  r[23] = prog[r[7] + 0x50c0f]
"31a67e:";  r[16] = r[16] ^ r[21]
"31a682:";  r[17] = r[17] ^ r[22]
"31a686:";  r[18] = r[18] ^ r[23]
"31a68a:";  r[19] = r[19] ^ r[20]
"31a68e:";  r[20] = r[20] ^ r[18]
"31a692:";  r[21] = r[21] ^ r[19]
"31a696:";  r[22] = r[22] ^ r[16]
"31a69a:";  r[23] = r[23] ^ r[17]
"31a69e:";  r[16] = r[16] ^ r[23]
"31a6a2:";  r[17] = r[17] ^ r[20]
"31a6a6:";  r[18] = r[18] ^ r[21]
"31a6aa:";  r[19] = r[19] ^ r[22]
"31a6ae:";  r[20] = r[20] ^ r[19]
"31a6b2:";  r[21] = r[21] ^ r[16]
"31a6b6:";  r[22] = r[22] ^ r[17]
"31a6ba:";  r[23] = r[23] ^ r[18]
"31a6be:";  r[8] = prog[256*r[8] + r[20] + 0x30a4ce]
"31a6c6:";  r[9] = prog[256*r[9] + r[21] + 0x30a4ce]
"31a6ce:";  r[10] = prog[256*r[10] + r[22] + 0x30a4ce]
"31a6d6:";  r[11] = prog[256*r[11] + r[23] + 0x30a4ce]
"31a6de:";  r[12] = prog[256*r[12] + r[16] + 0x30a4ce]
"31a6e6:";  r[13] = prog[256*r[13] + r[17] + 0x30a4ce]
"31a6ee:";  r[14] = prog[256*r[14] + r[18] + 0x30a4ce]
"31a6f6:";  r[15] = prog[256*r[15] + r[19] + 0x30a4ce]
"31a6fe:";  r[16] = prog[r[8] + 0x37d5e8]
"31a705:";  r[17] = prog[r[9] + 0x92219]
"31a70c:";  r[18] = prog[r[10] + 0x27853a]
"31a713:";  r[19] = prog[r[11] + 0x1651af]
"31a71a:";  r[20] = prog[r[12] + 0xc32f2]
"31a721:";  r[21] = prog[r[13] + 0xc31f2]
"31a728:";  r[22] = prog[r[14] + 0x2d9933]
"31a72f:";  r[23] = prog[r[15] + 0x712c8]
"31a736:";  r[16] = r[16] ^ r[21]
"31a73a:";  r[17] = r[17] ^ r[22]
"31a73e:";  r[18] = r[18] ^ r[23]
"31a742:";  r[19] = r[19] ^ r[20]
"31a746:";  r[20] = r[20] ^ r[18]
"31a74a:";  r[21] = r[21] ^ r[19]
"31a74e:";  r[22] = r[22] ^ r[16]
"31a752:";  r[23] = r[23] ^ r[17]
"31a756:";  r[16] = r[16] ^ r[23]
"31a75a:";  r[17] = r[17] ^ r[20]
"31a75e:";  r[18] = r[18] ^ r[21]
"31a762:";  # jmp 0x33b1fa
"33b1fa:";  r[19] = r[19] ^ r[22]
"33b1fe:";  r[20] = r[20] ^ r[19]
"33b202:";  r[21] = r[21] ^ r[16]
"33b206:";  r[22] = r[22] ^ r[17]
"33b20a:";  r[23] = r[23] ^ r[18]
"33b20e:";  r[0] = prog[256*r[0] + r[20] + 0x195cbe]
"33b216:";  r[1] = prog[256*r[1] + r[21] + 0x195cbe]
"33b21e:";  r[2] = prog[256*r[2] + r[22] + 0x195cbe]
"33b226:";  r[3] = prog[256*r[3] + r[23] + 0x195cbe]
"33b22e:";  r[4] = prog[256*r[4] + r[16] + 0x195cbe]
"33b236:";  r[5] = prog[256*r[5] + r[17] + 0x195cbe]
"33b23e:";  r[6] = prog[256*r[6] + r[18] + 0x195cbe]
"33b246:";  r[7] = prog[256*r[7] + r[19] + 0x195cbe]
"33b24e:";  r[16] = prog[r[0] + 0x216df2]
"33b255:";  r[17] = prog[r[1] + 0x278125]
"33b25c:";  r[18] = prog[r[2] + 0x1f6b70]
"33b263:";  r[19] = prog[r[3] + 0x17540b]
"33b26a:";  r[20] = prog[r[4] + 0xc349b]
"33b271:";  r[21] = prog[r[5] + 0x185754]
"33b278:";  r[22] = prog[r[6] + 0x134a40]
"33b27f:";  r[23] = prog[r[7] + 0x1e6813]
"33b286:";  r[16] = r[16] ^ r[21]
"33b28a:";  r[17] = r[17] ^ r[22]
"33b28e:";  r[18] = r[18] ^ r[23]
"33b292:";  r[19] = r[19] ^ r[20]
"33b296:";  r[20] = r[20] ^ r[18]
"33b29a:";  r[21] = r[21] ^ r[19]
"33b29e:";  r[22] = r[22] ^ r[16]
"33b2a2:";  r[23] = r[23] ^ r[17]
"33b2a6:";  r[16] = r[16] ^ r[23]
"33b2aa:";  r[17] = r[17] ^ r[20]
"33b2ae:";  r[18] = r[18] ^ r[21]
"33b2b2:";  r[19] = r[19] ^ r[22]
"33b2b6:";  r[20] = r[20] ^ r[19]
"33b2ba:";  r[21] = r[21] ^ r[16]
"33b2be:";  r[22] = r[22] ^ r[17]
"33b2c2:";  r[23] = r[23] ^ r[18]
"33b2c6:";  r[8] = prog[256*r[8] + r[20] + 0x30a4ce]
"33b2ce:";  r[9] = prog[256*r[9] + r[21] + 0x30a4ce]
"33b2d6:";  r[10] = prog[256*r[10] + r[22] + 0x30a4ce]
"33b2de:";  r[11] = prog[256*r[11] + r[23] + 0x30a4ce]
"33b2e6:";  r[12] = prog[256*r[12] + r[16] + 0x30a4ce]
"33b2ee:";  r[13] = prog[256*r[13] + r[17] + 0x30a4ce]
"33b2f6:";  r[14] = prog[256*r[14] + r[18] + 0x30a4ce]
"33b2fe:";  # jmp 0x81535
" 81535:";  r[15] = prog[256*r[15] + r[19] + 0x30a4ce]
" 8153d:";  r[16] = prog[r[8] + 0x267e1e]
" 81544:";  r[17] = prog[r[9] + 0x33babb]
" 8154b:";  r[18] = prog[r[10] + 0x195977]
" 81552:";  r[19] = prog[r[11] + 0x31aefa]
" 81559:";  r[20] = prog[r[12] + 0x37d411]
" 81560:";  r[21] = prog[r[13] + 0x1d6592]
" 81567:";  r[22] = prog[r[14] + 0x2e9a33]
" 8156e:";  r[23] = prog[r[15] + 0x257803]
" 81575:";  r[16] = r[16] ^ r[21]
" 81579:";  r[17] = r[17] ^ r[22]
" 8157d:";  r[18] = r[18] ^ r[23]
" 81581:";  r[19] = r[19] ^ r[20]
" 81585:";  r[20] = r[20] ^ r[18]
" 81589:";  r[21] = r[21] ^ r[19]
" 8158d:";  r[22] = r[22] ^ r[16]
" 81591:";  r[23] = r[23] ^ r[17]
" 81595:";  r[16] = r[16] ^ r[23]
" 81599:";  r[17] = r[17] ^ r[20]
" 8159d:";  r[18] = r[18] ^ r[21]
" 815a1:";  r[19] = r[19] ^ r[22]
" 815a5:";  r[20] = r[20] ^ r[19]
" 815a9:";  r[21] = r[21] ^ r[16]
" 815ad:";  r[22] = r[22] ^ r[17]
" 815b1:";  r[23] = r[23] ^ r[18]
" 815b5:";  r[0] = prog[256*r[0] + r[20] + 0x195cbe]
" 815bd:";  r[1] = prog[256*r[1] + r[21] + 0x195cbe]
" 815c5:";  r[2] = prog[256*r[2] + r[22] + 0x195cbe]
" 815cd:";  r[3] = prog[256*r[3] + r[23] + 0x195cbe]
" 815d5:";  r[4] = prog[256*r[4] + r[16] + 0x195cbe]
" 815dd:";  r[5] = prog[256*r[5] + r[17] + 0x195cbe]
" 815e5:";  r[6] = prog[256*r[6] + r[18] + 0x195cbe]
" 815ed:";  r[7] = prog[256*r[7] + r[19] + 0x195cbe]
" 815f5:";  r[16] = prog[256*r[0] + r[1] + 0x2788a7]
" 815fd:";  r[17] = prog[256*r[1] + r[2] + 0x30c0f]
" 81605:";  r[18] = prog[256*r[2] + r[3] + 0x165311]
" 8160d:";  r[19] = prog[256*r[3] + r[0] + 0xe3e07]
" 81615:";  r[4] = prog[256*r[4] + r[16] + 0x9278f]
" 8161d:";  r[5] = prog[256*r[5] + r[17] + 0x1a5cbe]
" 81625:";  r[6] = prog[256*r[6] + r[18] + 0x175654]
" 8162d:";  r[7] = prog[256*r[7] + r[19] + 0x206c3]
" 81635:";  r[0] = prog[256*r[0] + r[4] + 0x227036]
" 8163d:";  r[1] = prog[256*r[1] + r[5] + 0x2d9a33]
" 81645:";  r[2] = prog[256*r[2] + r[6] + 0x38e055]
" 8164d:";  r[3] = prog[256*r[3] + r[7] + 0x2b9160]
" 81655:";  r[8] = prog[256*r[8] + r[12] + 0x81a7e]
" 8165d:";  # jmp 0x2473d1
"2473d1:";  r[9] = prog[256*r[9] + r[13] + 0x60d0f]
"2473d9:";  r[10] = prog[256*r[10] + r[14] + 0x32affa]
"2473e1:";  r[11] = prog[256*r[11] + r[15] + 0x1034e]
"2473e9:";  r[16] = prog[256*r[8] + r[9] + 0xb31f2]
"2473f1:";  r[17] = prog[256*r[9] + r[10] + 0x31affa]
"2473f9:";  r[18] = prog[256*r[10] + r[11] + 0x185977]
"247401:";  r[19] = prog[256*r[11] + r[8] + 0x298f2f]
"247409:";  r[12] = prog[256*r[12] + r[16] + 0x2e9e33]
"247411:";  r[13] = prog[256*r[13] + r[17] + 0x34c6e7]
"247419:";  r[14] = prog[256*r[14] + r[18] + 0xc3a7f]
"247421:";  r[15] = prog[256*r[15] + r[19] + 0x154eec]
"247429:";  r[16] = prog[r[0] + 0xc36c8]
"247430:";  r[17] = prog[r[1] + 0x2f9f33]
"247437:";  r[18] = prog[r[2] + 0x195bbe]
"24743e:";  r[19] = prog[r[3] + 0x36c6e7]
"247445:";  r[20] = prog[r[4] + 0x103fbf]
"24744c:";  r[21] = prog[r[5] + 0x37d0d8]
"247453:";  r[22] = prog[r[6] + 0x31a4ce]
"24745a:";  r[23] = prog[r[7] + 0x924ce]
"247461:";  r[16] = r[16] ^ r[21]
"247465:";  r[17] = r[17] ^ r[22]
"247469:";  r[18] = r[18] ^ r[23]
"24746d:";  r[19] = r[19] ^ r[20]
"247471:";  r[20] = r[20] ^ r[18]
"247475:";  r[21] = r[21] ^ r[19]
"247479:";  r[22] = r[22] ^ r[16]
"24747d:";  r[23] = r[23] ^ r[17]
"247481:";  r[16] = r[16] ^ r[23]
"247485:";  r[17] = r[17] ^ r[20]
"247489:";  r[18] = r[18] ^ r[21]
"24748d:";  r[19] = r[19] ^ r[22]
"247491:";  r[20] = r[20] ^ r[19]
"247495:";  r[21] = r[21] ^ r[16]
"247499:";  r[22] = r[22] ^ r[17]
"24749d:";  r[23] = r[23] ^ r[18]
"2474a1:";  r[8] = prog[256*r[8] + r[20] + 0x2c2]
"2474a9:";  r[9] = prog[256*r[9] + r[21] + 0x2c2]
"2474b1:";  r[10] = prog[256*r[10] + r[22] + 0x2c2]
"2474b9:";  r[11] = prog[256*r[11] + r[23] + 0x2c2]
"2474c1:";  r[12] = prog[256*r[12] + r[16] + 0x2c2]
"2474c9:";  # jmp 0x278425
"278425:";  r[13] = prog[256*r[13] + r[17] + 0x2c2]
"27842d:";  r[14] = prog[256*r[14] + r[18] + 0x2c2]
"278435:";  r[15] = prog[256*r[15] + r[19] + 0x2c2]
"27843d:";  r[16] = prog[r[8] + 0x154dec]
"278444:";  r[17] = prog[r[9] + 0x257903]
"27844b:";  r[18] = prog[r[10] + 0x298e2f]
"278452:";  r[19] = prog[r[11] + 0x38dc48]
"278459:";  r[20] = prog[r[12] + 0x205c3]
"278460:";  r[21] = prog[r[13] + 0x37d311]
"278467:";  r[22] = prog[r[14] + 0x1140bf]
"27846e:";  r[23] = prog[r[15] + 0x2472d1]
"278475:";  r[16] = r[16] ^ r[21]
"278479:";  r[17] = r[17] ^ r[22]
"27847d:";  r[18] = r[18] ^ r[23]
"278481:";  r[19] = r[19] ^ r[20]
"278485:";  r[20] = r[20] ^ r[18]
"278489:";  r[21] = r[21] ^ r[19]
"27848d:";  r[22] = r[22] ^ r[16]
"278491:";  r[23] = r[23] ^ r[17]
"278495:";  r[16] = r[16] ^ r[23]
"278499:";  r[17] = r[17] ^ r[20]
"27849d:";  r[18] = r[18] ^ r[21]
"2784a1:";  r[19] = r[19] ^ r[22]
"2784a5:";  r[20] = r[20] ^ r[19]
"2784a9:";  r[21] = r[21] ^ r[16]
"2784ad:";  r[22] = r[22] ^ r[17]
"2784b1:";  r[23] = r[23] ^ r[18]
"2784b5:";  r[0] = prog[256*r[0] + r[20] + 0x1d6792]
"2784bd:";  r[1] = prog[256*r[1] + r[21] + 0x1d6792]
"2784c5:";  r[2] = prog[256*r[2] + r[22] + 0x1d6792]
"2784cd:";  r[3] = prog[256*r[3] + r[23] + 0x1d6792]
"2784d5:";  r[4] = prog[256*r[4] + r[16] + 0x1d6792]
"2784dd:";  r[5] = prog[256*r[5] + r[17] + 0x1d6792]
"2784e5:";  r[6] = prog[256*r[6] + r[18] + 0x1d6792]
"2784ed:";  r[7] = prog[256*r[7] + r[19] + 0x1d6792]
"2784f5:";  r[16] = prog[r[0] + 0x37cd58]
"2784fc:";  r[17] = prog[r[1] + 0x91d2c]
"278503:";  r[18] = prog[r[2] + 0x2d9698]
"27850a:";  r[19] = prog[r[3] + 0x30768]
"278511:";  r[20] = prog[r[4] + 0x33b0fa]
"278518:";  r[21] = prog[r[5] + 0x124349]
"27851f:";  r[22] = prog[r[6] + 0x267bd0]
"278526:";  r[23] = prog[r[7] + 0x195a77]
"27852d:";  r[16] = r[16] ^ r[21]
"278531:";  r[17] = r[17] ^ r[22]
"278535:";  # jmp 0x38de48
"38de48:";  r[18] = r[18] ^ r[23]
"38de4c:";  r[19] = r[19] ^ r[20]
"38de50:";  r[20] = r[20] ^ r[18]
"38de54:";  r[21] = r[21] ^ r[19]
"38de58:";  r[22] = r[22] ^ r[16]
"38de5c:";  r[23] = r[23] ^ r[17]
"38de60:";  r[16] = r[16] ^ r[23]
"38de64:";  r[17] = r[17] ^ r[20]
"38de68:";  r[18] = r[18] ^ r[21]
"38de6c:";  r[19] = r[19] ^ r[22]
"38de70:";  r[20] = r[20] ^ r[19]
"38de74:";  r[21] = r[21] ^ r[16]
"38de78:";  r[22] = r[22] ^ r[17]
"38de7c:";  r[23] = r[23] ^ r[18]
"38de80:";  r[8] = prog[256*r[8] + r[20] + 0x2c2]
"38de88:";  r[9] = prog[256*r[9] + r[21] + 0x2c2]
"38de90:";  r[10] = prog[256*r[10] + r[22] + 0x2c2]
"38de98:";  r[11] = prog[256*r[11] + r[23] + 0x2c2]
"38dea0:";  r[12] = prog[256*r[12] + r[16] + 0x2c2]
"38dea8:";  r[13] = prog[256*r[13] + r[17] + 0x2c2]
"38deb0:";  r[14] = prog[256*r[14] + r[18] + 0x2c2]
"38deb8:";  r[15] = prog[256*r[15] + r[19] + 0x2c2]
"38dec0:";  r[16] = prog[r[8] + 0x36c8eb]
"38dec7:";  r[17] = prog[r[9] + 0x1b5f89]
"38dece:";  r[18] = prog[r[10] + 0xd3bc0]
"38ded5:";  r[19] = prog[r[11] + 0x2474ce]
"38dedc:";  r[20] = prog[r[12] + 0x1c6492]
"38dee3:";  r[21] = prog[r[13] + 0x37ce58]
"38deea:";  r[22] = prog[r[14] + 0x37cf58]
"38def1:";  r[23] = prog[r[15] + 0x124549]
"38def8:";  r[16] = r[16] ^ r[21]
"38defc:";  r[17] = r[17] ^ r[22]
"38df00:";  r[18] = r[18] ^ r[23]
"38df04:";  r[19] = r[19] ^ r[20]
"38df08:";  r[20] = r[20] ^ r[18]
"38df0c:";  r[21] = r[21] ^ r[19]
"38df10:";  r[22] = r[22] ^ r[16]
"38df14:";  r[23] = r[23] ^ r[17]
"38df18:";  r[16] = r[16] ^ r[23]
"38df1c:";  r[17] = r[17] ^ r[20]
"38df20:";  r[18] = r[18] ^ r[21]
"38df24:";  r[19] = r[19] ^ r[22]
"38df28:";  r[20] = r[20] ^ r[19]
"38df2c:";  r[21] = r[21] ^ r[16]
"38df30:";  r[22] = r[22] ^ r[17]
"38df34:";  r[23] = r[23] ^ r[18]
"38df38:";  r[0] = prog[256*r[0] + r[20] + 0x1d6792]
"38df40:";  r[1] = prog[256*r[1] + r[21] + 0x1d6792]
"38df48:";  r[2] = prog[256*r[2] + r[22] + 0x1d6792]
"38df50:";  # jmp 0x33b403
"33b403:";  r[3] = prog[256*r[3] + r[23] + 0x1d6792]
"33b40b:";  r[4] = prog[256*r[4] + r[16] + 0x1d6792]
"33b413:";  r[5] = prog[256*r[5] + r[17] + 0x1d6792]
"33b41b:";  r[6] = prog[256*r[6] + r[18] + 0x1d6792]
"33b423:";  r[7] = prog[256*r[7] + r[19] + 0x1d6792]
"33b42b:";  r[16] = prog[r[0] + 0x2d9798]
"33b432:";  r[17] = prog[r[1] + 0x2e9d33]
"33b439:";  r[18] = prog[r[2] + 0x34bdcf]
"33b440:";  r[19] = prog[r[3] + 0x2d9291]
"33b447:";  r[20] = prog[r[4] + 0x2888a7]
"33b44e:";  r[21] = prog[r[5] + 0x34bccf]
"33b455:";  r[22] = prog[r[6] + 0x164faf]
"33b45c:";  r[23] = prog[r[7] + 0x30868]
"33b463:";  r[16] = r[16] ^ r[21]
"33b467:";  r[17] = r[17] ^ r[22]
"33b46b:";  r[18] = r[18] ^ r[23]
"33b46f:";  r[19] = r[19] ^ r[20]
"33b473:";  r[20] = r[20] ^ r[18]
"33b477:";  r[21] = r[21] ^ r[19]
"33b47b:";  r[22] = r[22] ^ r[16]
"33b47f:";  r[23] = r[23] ^ r[17]
"33b483:";  r[16] = r[16] ^ r[23]
"33b487:";  r[17] = r[17] ^ r[20]
"33b48b:";  r[18] = r[18] ^ r[21]
"33b48f:";  r[19] = r[19] ^ r[22]
"33b493:";  r[20] = r[20] ^ r[19]
"33b497:";  r[21] = r[21] ^ r[16]
"33b49b:";  r[22] = r[22] ^ r[17]
"33b49f:";  r[23] = r[23] ^ r[18]
"33b4a3:";  r[8] = prog[256*r[8] + r[20] + 0x216ef2]
"33b4ab:";  r[9] = prog[256*r[9] + r[21] + 0x216ef2]
"33b4b3:";  r[10] = prog[256*r[10] + r[22] + 0x216ef2]
"33b4bb:";  r[11] = prog[256*r[11] + r[23] + 0x216ef2]
"33b4c3:";  r[12] = prog[256*r[12] + r[16] + 0x216ef2]
"33b4cb:";  r[13] = prog[256*r[13] + r[17] + 0x216ef2]
"33b4d3:";  r[14] = prog[256*r[14] + r[18] + 0x216ef2]
"33b4db:";  r[15] = prog[256*r[15] + r[19] + 0x216ef2]
"33b4e3:";  r[16] = prog[r[8] + 0x33b303]
"33b4ea:";  r[17] = prog[r[9] + 0x31aaaa]
"33b4f1:";  r[18] = prog[r[10] + 0x31adfa]
"33b4f8:";  r[19] = prog[r[11] + 0x39e055]
"33b4ff:";  r[20] = prog[r[12] + 0x70fc8]
"33b506:";  r[21] = prog[r[13] + 0x92319]
"33b50d:";  r[22] = prog[r[14] + 0xc38c8]
"33b514:";  r[23] = prog[r[15] + 0x278325]
"33b51b:";  r[16] = r[16] ^ r[21]
"33b51f:";  r[17] = r[17] ^ r[22]
"33b523:";  r[18] = r[18] ^ r[23]
"33b527:";  # jmp 0x288aa7
"288aa7:";  r[19] = r[19] ^ r[20]
"288aab:";  r[20] = r[20] ^ r[18]
"288aaf:";  r[21] = r[21] ^ r[19]
"288ab3:";  r[22] = r[22] ^ r[16]
"288ab7:";  r[23] = r[23] ^ r[17]
"288abb:";  r[16] = r[16] ^ r[23]
"288abf:";  r[17] = r[17] ^ r[20]
"288ac3:";  r[18] = r[18] ^ r[21]
"288ac7:";  r[19] = r[19] ^ r[22]
"288acb:";  r[20] = r[20] ^ r[19]
"288acf:";  r[21] = r[21] ^ r[16]
"288ad3:";  r[22] = r[22] ^ r[17]
"288ad7:";  r[23] = r[23] ^ r[18]
"288adb:";  r[0] = prog[256*r[0] + r[20] + 0x36ccb2]
"288ae3:";  r[1] = prog[256*r[1] + r[21] + 0x36ccb2]
"288aeb:";  r[2] = prog[256*r[2] + r[22] + 0x36ccb2]
"288af3:";  r[3] = prog[256*r[3] + r[23] + 0x36ccb2]
"288afb:";  r[4] = prog[256*r[4] + r[16] + 0x36ccb2]
"288b03:";  r[5] = prog[256*r[5] + r[17] + 0x36ccb2]
"288b0b:";  r[6] = prog[256*r[6] + r[18] + 0x36ccb2]
"288b13:";  r[7] = prog[256*r[7] + r[19] + 0x36ccb2]
"288b1b:";  output[0] = r[8]
"288b1e:";  output[1] = r[9]
"288b21:";  output[2] = r[10]
"288b24:";  output[3] = r[11]
"288b27:";  output[4] = r[12]
"288b2a:";  output[5] = r[13]
"288b2d:";  output[6] = r[14]
"288b30:";  output[7] = r[15]
"288b33:";  output[8] = r[0]
"288b36:";  output[9] = r[1]
"288b39:";  output[10] = r[2]
"288b3c:";  output[11] = r[3]
"288b3f:";  output[12] = r[4]
"288b42:";  output[13] = r[5]
"288b45:";  output[14] = r[6]
"288b48:";  output[15] = r[7]
"288b4b:";  ret(0)
" 91ce1:";  r[1] = 1
" 91ce4:";  # jne r0, r1, 0x91cf0
" 91ceb:";  # jmp 0xb2e81
" b2e81:";  r[0] = 255
" b2e84:";  output[0] = r[0]
" b2e87:";  r[0] = 255
" b2e8a:";  output[1] = r[0]
" b2e8d:";  r[0] = 255
" b2e90:";  output[2] = r[0]
" b2e93:";  r[0] = 255
" b2e96:";  output[3] = r[0]
" b2e99:";  r[0] = 255
" b2e9c:";  output[4] = r[0]
" b2e9f:";  r[0] = 255
" b2ea2:";  output[5] = r[0]
" b2ea5:";  r[0] = 255
" b2ea8:";  output[6] = r[0]
" b2eab:";  r[0] = 255
" b2eae:";  output[7] = r[0]
" b2eb1:";  ret(0)
" d3bbe:";  ret(1)
" 91cf0:";  r[1] = 2
" 91cf3:";  # jne r0, r1, 0x91cff
" 91cfa:";  # jmp 0x38dac3
"38dac3:";  r[0] = 137
"38dac6:";  output[0] = r[0]
"38dac9:";  r[0] = 122
"38dacc:";  output[1] = r[0]
"38dacf:";  r[0] = 105
"38dad2:";  output[2] = r[0]
"38dad5:";  r[0] = 96
"38dad8:";  output[3] = r[0]
"38dadb:";  ret(0)
" 91cff:";  r[1] = 3
" 91d02:";  # jne r0, r1, 0x91d0e
" 91d09:";  # jmp 0x713c8
" 713c8:";  r[0] = input[1]
" 713cb:";  r[16] = r[0]
" 713ce:";  r[1] = input[2]
" 713d1:";  r[17] = r[1]
" 713d4:";  r[2] = input[3]
" 713d7:";  r[18] = r[2]
" 713da:";  r[3] = input[4]
" 713dd:";  r[19] = r[3]
" 713e0:";  r[4] = input[5]
" 713e3:";  r[20] = r[4]
" 713e6:";  r[5] = input[6]
" 713e9:";  r[21] = r[5]
" 713ec:";  r[6] = input[7]
" 713ef:";  r[22] = r[6]
" 713f2:";  r[7] = input[8]
" 713f5:";  r[23] = r[7]
" 713f8:";  r[8] = input[9]
" 713fb:";  r[24] = r[8]
" 713fe:";  r[9] = input[10]
" 71401:";  r[25] = r[9]
" 71404:";  r[10] = input[11]
" 71407:";  r[26] = r[10]
" 7140a:";  r[11] = input[12]
" 7140d:";  r[27] = r[11]
" 71410:";  r[12] = input[13]
" 71413:";  r[28] = r[12]
" 71416:";  r[13] = input[14]
" 71419:";  r[29] = r[13]
" 7141c:";  r[14] = input[15]
" 7141f:";  r[30] = r[14]
" 71422:";  r[15] = input[16]
" 71425:";  r[31] = r[15]
" 71428:";  r[32] = 160
" 7142b:";  r[32] = r[16] ^ r[32]
" 7142f:";  r[33] = 158
" 71432:";  r[33] = r[17] ^ r[33]
" 71436:";  r[34] = 102
" 71439:";  r[34] = r[18] ^ r[34]
" 7143d:";  r[35] = 127
" 71440:";  r[35] = r[19] ^ r[35]
" 71444:";  r[36] = 59
" 71447:";  # jmp 0xb2b2a
" b2b2a:";  r[36] = r[20] ^ r[36]
" b2b2e:";  r[37] = 204
" b2b31:";  r[37] = r[21] ^ r[37]
" b2b35:";  r[38] = 144
" b2b38:";  r[38] = r[22] ^ r[38]
" b2b3c:";  r[39] = 139
" b2b3f:";  r[39] = r[23] ^ r[39]
" b2b43:";  r[32] = prog[r[32] + 0x206c70]
" b2b4a:";  r[33] = prog[r[33] + 0x206c70]
" b2b51:";  r[33] = rol(r[33], 1)
" b2b55:";  r[34] = prog[r[34] + 0x206c70]
" b2b5c:";  r[34] = rol(r[34], 7)
" b2b60:";  r[35] = rol(r[35], 1)
" b2b64:";  r[35] = prog[r[35] + 0x206c70]
" b2b6b:";  r[36] = prog[r[36] + 0x206c70]
" b2b72:";  r[36] = rol(r[36], 1)
" b2b76:";  r[37] = prog[r[37] + 0x206c70]
" b2b7d:";  r[37] = rol(r[37], 7)
" b2b81:";  r[38] = rol(r[38], 1)
" b2b85:";  r[38] = prog[r[38] + 0x206c70]
" b2b8c:";  r[39] = prog[r[39] + 0x206c70]
" b2b93:";  r[32] = r[32] ^ r[37]
" b2b97:";  # jmp 0x267b61
"267b61:";  r[33] = r[33] ^ r[38]
"267b65:";  r[34] = r[34] ^ r[39]
"267b69:";  r[35] = r[35] ^ r[36]
"267b6d:";  r[36] = r[36] ^ r[34]
"267b71:";  r[37] = r[37] ^ r[35]
"267b75:";  r[38] = r[38] ^ r[32]
"267b79:";  r[39] = r[39] ^ r[33]
"267b7d:";  r[32] = r[32] ^ r[39]
"267b81:";  r[33] = r[33] ^ r[36]
"267b85:";  r[34] = r[34] ^ r[37]
"267b89:";  r[35] = r[35] ^ r[38]
"267b8d:";  r[36] = r[36] ^ r[35]
"267b91:";  r[37] = r[37] ^ r[32]
"267b95:";  r[38] = r[38] ^ r[33]
"267b99:";  r[39] = r[39] ^ r[34]
"267b9d:";  r[24] = r[36] ^ r[24]
"267ba1:";  r[25] = r[37] ^ r[25]
"267ba5:";  r[26] = r[38] ^ r[26]
"267ba9:";  r[27] = r[39] ^ r[27]
"267bad:";  r[28] = r[32] ^ r[28]
"267bb1:";  r[29] = r[33] ^ r[29]
"267bb5:";  r[30] = r[34] ^ r[30]
"267bb9:";  r[31] = r[35] ^ r[31]
"267bbd:";  r[32] = 182
"267bc0:";  r[32] = r[24] ^ r[32]
"267bc4:";  r[33] = 122
"267bc7:";  r[33] = r[25] ^ r[33]
"267bcb:";  # jmp 0xb2ff8
" b2ff8:";  r[34] = 232
" b2ffb:";  r[34] = r[26] ^ r[34]
" b2fff:";  r[35] = 88
" b3002:";  r[35] = r[27] ^ r[35]
" b3006:";  r[36] = 76
" b3009:";  r[36] = r[28] ^ r[36]
" b300d:";  r[37] = 170
" b3010:";  r[37] = r[29] ^ r[37]
" b3014:";  r[38] = 115
" b3017:";  r[38] = r[30] ^ r[38]
" b301b:";  r[39] = 178
" b301e:";  r[39] = r[31] ^ r[39]
" b3022:";  r[32] = prog[r[32] + 0x206c70]
" b3029:";  r[33] = prog[r[33] + 0x206c70]
" b3030:";  r[33] = rol(r[33], 1)
" b3034:";  r[34] = prog[r[34] + 0x206c70]
" b303b:";  r[34] = rol(r[34], 7)
" b303f:";  r[35] = rol(r[35], 1)
" b3043:";  r[35] = prog[r[35] + 0x206c70]
" b304a:";  r[36] = prog[r[36] + 0x206c70]
" b3051:";  r[36] = rol(r[36], 1)
" b3055:";  r[37] = prog[r[37] + 0x206c70]
" b305c:";  r[37] = rol(r[37], 7)
" b3060:";  # jmp 0xa288f
" a288f:";  r[38] = rol(r[38], 1)
" a2893:";  r[38] = prog[r[38] + 0x206c70]
" a289a:";  r[39] = prog[r[39] + 0x206c70]
" a28a1:";  r[32] = r[32] ^ r[37]
" a28a5:";  r[33] = r[33] ^ r[38]
" a28a9:";  r[34] = r[34] ^ r[39]
" a28ad:";  r[35] = r[35] ^ r[36]
" a28b1:";  r[36] = r[36] ^ r[34]
" a28b5:";  r[37] = r[37] ^ r[35]
" a28b9:";  r[38] = r[38] ^ r[32]
" a28bd:";  r[39] = r[39] ^ r[33]
" a28c1:";  r[32] = r[32] ^ r[39]
" a28c5:";  r[33] = r[33] ^ r[36]
" a28c9:";  r[34] = r[34] ^ r[37]
" a28cd:";  r[35] = r[35] ^ r[38]
" a28d1:";  r[36] = r[36] ^ r[35]
" a28d5:";  r[37] = r[37] ^ r[32]
" a28d9:";  r[38] = r[38] ^ r[33]
" a28dd:";  # jmp 0x124649
"124649:";  r[39] = r[39] ^ r[34]
"12464d:";  r[16] = r[36] ^ r[16]
"124651:";  r[17] = r[37] ^ r[17]
"124655:";  r[18] = r[38] ^ r[18]
"124659:";  r[19] = r[39] ^ r[19]
"12465d:";  r[20] = r[32] ^ r[20]
"124661:";  r[21] = r[33] ^ r[21]
"124665:";  r[22] = r[34] ^ r[22]
"124669:";  r[23] = r[35] ^ r[23]
"12466d:";  r[16] = r[0] ^ r[16]
"124671:";  r[17] = r[1] ^ r[17]
"124675:";  r[18] = r[2] ^ r[18]
"124679:";  r[19] = r[3] ^ r[19]
"12467d:";  # jmp 0x91a7e
" 91a7e:";  r[20] = r[4] ^ r[20]
" 91a82:";  r[21] = r[5] ^ r[21]
" 91a86:";  r[22] = r[6] ^ r[22]
" 91a8a:";  r[23] = r[7] ^ r[23]
" 91a8e:";  r[24] = r[8] ^ r[24]
" 91a92:";  r[25] = r[9] ^ r[25]
" 91a96:";  r[26] = r[10] ^ r[26]
" 91a9a:";  r[27] = r[11] ^ r[27]
" 91a9e:";  r[28] = r[12] ^ r[28]
" 91aa2:";  r[29] = r[13] ^ r[29]
" 91aa6:";  r[30] = r[14] ^ r[30]
" 91aaa:";  r[31] = r[15] ^ r[31]
" 91aae:";  r[32] = 198
" 91ab1:";  r[32] = r[16] ^ r[32]
" 91ab5:";  r[33] = 239
" 91ab8:";  r[33] = r[17] ^ r[33]
" 91abc:";  r[34] = 55
" 91abf:";  r[34] = r[18] ^ r[34]
" 91ac3:";  r[35] = 47
" 91ac6:";  r[35] = r[19] ^ r[35]
" 91aca:";  # jmp 0x33ba67
"33ba67:";  r[36] = 233
"33ba6a:";  r[36] = r[20] ^ r[36]
"33ba6e:";  r[37] = 79
"33ba71:";  r[37] = r[21] ^ r[37]
"33ba75:";  r[38] = 130
"33ba78:";  r[38] = r[22] ^ r[38]
"33ba7c:";  r[39] = 190
"33ba7f:";  r[39] = r[23] ^ r[39]
"33ba83:";  r[32] = prog[r[32] + 0x206c70]
"33ba8a:";  r[33] = prog[r[33] + 0x206c70]
"33ba91:";  r[33] = rol(r[33], 1)
"33ba95:";  r[34] = prog[r[34] + 0x206c70]
"33ba9c:";  r[34] = rol(r[34], 7)
"33baa0:";  r[35] = rol(r[35], 1)
"33baa4:";  r[35] = prog[r[35] + 0x206c70]
"33baab:";  r[36] = prog[r[36] + 0x206c70]
"33bab2:";  r[36] = rol(r[36], 1)
"33bab6:";  # jmp 0x2d9622
"2d9622:";  r[37] = prog[r[37] + 0x206c70]
"2d9629:";  r[37] = rol(r[37], 7)
"2d962d:";  r[38] = rol(r[38], 1)
"2d9631:";  r[38] = prog[r[38] + 0x206c70]
"2d9638:";  r[39] = prog[r[39] + 0x206c70]
"2d963f:";  r[32] = r[32] ^ r[37]
"2d9643:";  r[33] = r[33] ^ r[38]
"2d9647:";  r[34] = r[34] ^ r[39]
"2d964b:";  r[35] = r[35] ^ r[36]
"2d964f:";  r[36] = r[36] ^ r[34]
"2d9653:";  r[37] = r[37] ^ r[35]
"2d9657:";  r[38] = r[38] ^ r[32]
"2d965b:";  r[39] = r[39] ^ r[33]
"2d965f:";  r[32] = r[32] ^ r[39]
"2d9663:";  r[33] = r[33] ^ r[36]
"2d9667:";  r[34] = r[34] ^ r[37]
"2d966b:";  r[35] = r[35] ^ r[38]
"2d966f:";  r[36] = r[36] ^ r[35]
"2d9673:";  r[37] = r[37] ^ r[32]
"2d9677:";  r[38] = r[38] ^ r[33]
"2d967b:";  r[39] = r[39] ^ r[34]
"2d967f:";  r[24] = r[36] ^ r[24]
"2d9683:";  r[25] = r[37] ^ r[25]
"2d9687:";  r[26] = r[38] ^ r[26]
"2d968b:";  r[27] = r[39] ^ r[27]
"2d968f:";  r[28] = r[32] ^ r[28]
"2d9693:";  # jmp 0x70f0f
" 70f0f:";  r[29] = r[33] ^ r[29]
" 70f13:";  r[30] = r[34] ^ r[30]
" 70f17:";  r[31] = r[35] ^ r[31]
" 70f1b:";  r[32] = 84
" 70f1e:";  r[32] = r[24] ^ r[32]
" 70f22:";  r[33] = 255
" 70f25:";  r[33] = r[25] ^ r[33]
" 70f29:";  r[34] = 83
" 70f2c:";  r[34] = r[26] ^ r[34]
" 70f30:";  r[35] = 165
" 70f33:";  r[35] = r[27] ^ r[35]
" 70f37:";  r[36] = 241
" 70f3a:";  r[36] = r[28] ^ r[36]
" 70f3e:";  r[37] = 211
" 70f41:";  r[37] = r[29] ^ r[37]
" 70f45:";  r[38] = 111
" 70f48:";  r[38] = r[30] ^ r[38]
" 70f4c:";  r[39] = 28
" 70f4f:";  r[39] = r[31] ^ r[39]
" 70f53:";  r[32] = prog[r[32] + 0x206c70]
" 70f5a:";  r[33] = prog[r[33] + 0x206c70]
" 70f61:";  r[33] = rol(r[33], 1)
" 70f65:";  r[34] = prog[r[34] + 0x206c70]
" 70f6c:";  r[34] = rol(r[34], 7)
" 70f70:";  r[35] = rol(r[35], 1)
" 70f74:";  r[35] = prog[r[35] + 0x206c70]
" 70f7b:";  r[36] = prog[r[36] + 0x206c70]
" 70f82:";  r[36] = rol(r[36], 1)
" 70f86:";  r[37] = prog[r[37] + 0x206c70]
" 70f8d:";  r[37] = rol(r[37], 7)
" 70f91:";  r[38] = rol(r[38], 1)
" 70f95:";  r[38] = prog[r[38] + 0x206c70]
" 70f9c:";  r[39] = prog[r[39] + 0x206c70]
" 70fa3:";  r[32] = r[32] ^ r[37]
" 70fa7:";  r[33] = r[33] ^ r[38]
" 70fab:";  r[34] = r[34] ^ r[39]
" 70faf:";  r[35] = r[35] ^ r[36]
" 70fb3:";  r[36] = r[36] ^ r[34]
" 70fb7:";  r[37] = r[37] ^ r[35]
" 70fbb:";  r[38] = r[38] ^ r[32]
" 70fbf:";  r[39] = r[39] ^ r[33]
" 70fc3:";  # jmp 0xb2ae2
" b2ae2:";  r[32] = r[32] ^ r[39]
" b2ae6:";  r[33] = r[33] ^ r[36]
" b2aea:";  r[34] = r[34] ^ r[37]
" b2aee:";  r[35] = r[35] ^ r[38]
" b2af2:";  r[36] = r[36] ^ r[35]
" b2af6:";  r[37] = r[37] ^ r[32]
" b2afa:";  r[38] = r[38] ^ r[33]
" b2afe:";  r[39] = r[39] ^ r[34]
" b2b02:";  r[16] = r[36] ^ r[16]
" b2b06:";  r[17] = r[37] ^ r[17]
" b2b0a:";  r[18] = r[38] ^ r[18]
" b2b0e:";  r[19] = r[39] ^ r[19]
" b2b12:";  r[20] = r[32] ^ r[20]
" b2b16:";  r[21] = r[33] ^ r[21]
" b2b1a:";  r[22] = r[34] ^ r[22]
" b2b1e:";  r[23] = r[35] ^ r[23]
" b2b22:";  r[32] = r[0]
" b2b25:";  # jmp 0x37d9fa
"37d9fa:";  r[33] = r[1]
"37d9fd:";  r[34] = r[2]
"37da00:";  r[35] = r[3]
"37da03:";  r[36] = r[4]
"37da06:";  r[37] = r[5]
"37da09:";  r[38] = r[6]
"37da0c:";  r[39] = r[7]
"37da0f:";  output[0] = r[32]
"37da12:";  output[1] = r[33]
"37da15:";  output[2] = r[34]
"37da18:";  output[3] = r[35]
"37da1b:";  output[4] = r[36]
"37da1e:";  output[5] = r[37]
"37da21:";  output[6] = r[38]
"37da24:";  output[7] = r[39]
"37da27:";  r[32] = r[8]
"37da2a:";  r[33] = r[9]
"37da2d:";  r[34] = r[10]
"37da30:";  r[35] = r[11]
"37da33:";  r[36] = r[12]
"37da36:";  r[37] = r[13]
"37da39:";  r[38] = r[14]
"37da3c:";  r[39] = r[15]
"37da3f:";  output[8] = r[32]
"37da42:";  # jmp 0x33bbea
"33bbea:";  output[9] = r[33]
"33bbed:";  output[10] = r[34]
"33bbf0:";  output[11] = r[35]
"33bbf3:";  output[12] = r[36]
"33bbf6:";  output[13] = r[37]
"33bbf9:";  output[14] = r[38]
"33bbfc:";  output[15] = r[39]
"33bbff:";  r[32] = r[16]
"33bc02:";  r[33] = r[17]
"33bc05:";  r[34] = r[18]
"33bc08:";  r[35] = r[19]
"33bc0b:";  r[36] = r[20]
"33bc0e:";  r[37] = r[21]
"33bc11:";  r[38] = r[22]
"33bc14:";  r[39] = r[23]
"33bc17:";  output[16] = r[32]
"33bc1a:";  output[17] = r[33]
"33bc1d:";  output[18] = r[34]
"33bc20:";  output[19] = r[35]
"33bc23:";  output[20] = r[36]
"33bc26:";  output[21] = r[37]
"33bc29:";  output[22] = r[38]
"33bc2c:";  output[23] = r[39]
"33bc2f:";  r[32] = r[24]
"33bc32:";  r[33] = r[25]
"33bc35:";  r[34] = r[26]
"33bc38:";  r[35] = r[27]
"33bc3b:";  r[36] = r[28]
"33bc3e:";  r[37] = r[29]
"33bc41:";  r[38] = r[30]
"33bc44:";  r[39] = r[31]
"33bc47:";  output[24] = r[32]
"33bc4a:";  output[25] = r[33]
"33bc4d:";  output[26] = r[34]
"33bc50:";  output[27] = r[35]
"33bc53:";  output[28] = r[36]
"33bc56:";  output[29] = r[37]
"33bc59:";  output[30] = r[38]
"33bc5c:";  # jmp 0x38dbdd
"38dbdd:";  output[31] = r[39]
"38dbe0:";  r[32] = r[1] << 7
"38dbe4:";  r[40] = r[2] >> 1
"38dbe8:";  r[32] = r[40] | r[32]
"38dbec:";  r[33] = r[2] << 7
"38dbf0:";  r[40] = r[3] >> 1
"38dbf4:";  r[33] = r[40] | r[33]
"38dbf8:";  r[34] = r[3] << 7
"38dbfc:";  r[40] = r[4] >> 1
"38dc00:";  r[34] = r[40] | r[34]
"38dc04:";  r[35] = r[4] << 7
"38dc08:";  r[40] = r[5] >> 1
"38dc0c:";  r[35] = r[40] | r[35]
"38dc10:";  r[36] = r[5] << 7
"38dc14:";  r[40] = r[6] >> 1
"38dc18:";  r[36] = r[40] | r[36]
"38dc1c:";  r[37] = r[6] << 7
"38dc20:";  r[40] = r[7] >> 1
"38dc24:";  r[37] = r[40] | r[37]
"38dc28:";  r[38] = r[7] << 7
"38dc2c:";  r[40] = r[8] >> 1
"38dc30:";  r[38] = r[40] | r[38]
"38dc34:";  r[39] = r[8] << 7
"38dc38:";  r[40] = r[9] >> 1
"38dc3c:";  r[39] = r[40] | r[39]
"38dc40:";  output[32] = r[32]
"38dc43:";  # jmp 0x2fa0a1
"2fa0a1:";  output[33] = r[33]
"2fa0a4:";  output[34] = r[34]
"2fa0a7:";  output[35] = r[35]
"2fa0aa:";  output[36] = r[36]
"2fa0ad:";  output[37] = r[37]
"2fa0b0:";  output[38] = r[38]
"2fa0b3:";  output[39] = r[39]
"2fa0b6:";  r[32] = r[9] << 7
"2fa0ba:";  r[40] = r[10] >> 1
"2fa0be:";  r[32] = r[40] | r[32]
"2fa0c2:";  r[33] = r[10] << 7
"2fa0c6:";  r[40] = r[11] >> 1
"2fa0ca:";  r[33] = r[40] | r[33]
"2fa0ce:";  r[34] = r[11] << 7
"2fa0d2:";  r[40] = r[12] >> 1
"2fa0d6:";  r[34] = r[40] | r[34]
"2fa0da:";  r[35] = r[12] << 7
"2fa0de:";  r[40] = r[13] >> 1
"2fa0e2:";  r[35] = r[40] | r[35]
"2fa0e6:";  # jmp 0x195b77
"195b77:";  r[36] = r[13] << 7
"195b7b:";  r[40] = r[14] >> 1
"195b7f:";  r[36] = r[40] | r[36]
"195b83:";  r[37] = r[14] << 7
"195b87:";  r[40] = r[15] >> 1
"195b8b:";  r[37] = r[40] | r[37]
"195b8f:";  r[38] = r[15] << 7
"195b93:";  r[40] = r[0] >> 1
"195b97:";  r[38] = r[40] | r[38]
"195b9b:";  r[39] = r[0] << 7
"195b9f:";  r[40] = r[1] >> 1
"195ba3:";  r[39] = r[40] | r[39]
"195ba7:";  output[40] = r[32]
"195baa:";  output[41] = r[33]
"195bad:";  output[42] = r[34]
"195bb0:";  output[43] = r[35]
"195bb3:";  output[44] = r[36]
"195bb6:";  output[45] = r[37]
"195bb9:";  # jmp 0x33b6e4
"33b6e4:";  output[46] = r[38]
"33b6e7:";  output[47] = r[39]
"33b6ea:";  r[32] = r[17] << 7
"33b6ee:";  r[40] = r[18] >> 1
"33b6f2:";  r[32] = r[40] | r[32]
"33b6f6:";  r[33] = r[18] << 7
"33b6fa:";  r[40] = r[19] >> 1
"33b6fe:";  r[33] = r[40] | r[33]
"33b702:";  r[34] = r[19] << 7
"33b706:";  r[40] = r[20] >> 1
"33b70a:";  r[34] = r[40] | r[34]
"33b70e:";  r[35] = r[20] << 7
"33b712:";  r[40] = r[21] >> 1
"33b716:";  r[35] = r[40] | r[35]
"33b71a:";  r[36] = r[21] << 7
"33b71e:";  r[40] = r[22] >> 1
"33b722:";  r[36] = r[40] | r[36]
"33b726:";  r[37] = r[22] << 7
"33b72a:";  r[40] = r[23] >> 1
"33b72e:";  r[37] = r[40] | r[37]
"33b732:";  r[38] = r[23] << 7
"33b736:";  r[40] = r[24] >> 1
"33b73a:";  r[38] = r[40] | r[38]
"33b73e:";  r[39] = r[24] << 7
"33b742:";  r[40] = r[25] >> 1
"33b746:";  r[39] = r[40] | r[39]
"33b74a:";  output[48] = r[32]
"33b74d:";  output[49] = r[33]
"33b750:";  output[50] = r[34]
"33b753:";  output[51] = r[35]
"33b756:";  output[52] = r[36]
"33b759:";  output[53] = r[37]
"33b75c:";  output[54] = r[38]
"33b75f:";  output[55] = r[39]
"33b762:";  r[32] = r[25] << 7
"33b766:";  r[40] = r[26] >> 1
"33b76a:";  r[32] = r[40] | r[32]
"33b76e:";  r[33] = r[26] << 7
"33b772:";  r[40] = r[27] >> 1
"33b776:";  # jmp 0x91e2c
" 91e2c:";  r[33] = r[40] | r[33]
" 91e30:";  r[34] = r[27] << 7
" 91e34:";  r[40] = r[28] >> 1
" 91e38:";  r[34] = r[40] | r[34]
" 91e3c:";  r[35] = r[28] << 7
" 91e40:";  r[40] = r[29] >> 1
" 91e44:";  r[35] = r[40] | r[35]
" 91e48:";  r[36] = r[29] << 7
" 91e4c:";  r[40] = r[30] >> 1
" 91e50:";  r[36] = r[40] | r[36]
" 91e54:";  r[37] = r[30] << 7
" 91e58:";  r[40] = r[31] >> 1
" 91e5c:";  r[37] = r[40] | r[37]
" 91e60:";  r[38] = r[31] << 7
" 91e64:";  r[40] = r[16] >> 1
" 91e68:";  r[38] = r[40] | r[38]
" 91e6c:";  r[39] = r[16] << 7
" 91e70:";  r[40] = r[17] >> 1
" 91e74:";  r[39] = r[40] | r[39]
" 91e78:";  output[56] = r[32]
" 91e7b:";  output[57] = r[33]
" 91e7e:";  output[58] = r[34]
" 91e81:";  output[59] = r[35]
" 91e84:";  # jmp 0x1f6a13
"1f6a13:";  output[60] = r[36]
"1f6a16:";  output[61] = r[37]
"1f6a19:";  output[62] = r[38]
"1f6a1c:";  output[63] = r[39]
"1f6a1f:";  r[32] = r[19] << 6
"1f6a23:";  r[40] = r[20] >> 2
"1f6a27:";  r[32] = r[40] | r[32]
"1f6a2b:";  r[33] = r[20] << 6
"1f6a2f:";  r[40] = r[21] >> 2
"1f6a33:";  r[33] = r[40] | r[33]
"1f6a37:";  r[34] = r[21] << 6
"1f6a3b:";  r[40] = r[22] >> 2
"1f6a3f:";  r[34] = r[40] | r[34]
"1f6a43:";  r[35] = r[22] << 6
"1f6a47:";  r[40] = r[23] >> 2
"1f6a4b:";  r[35] = r[40] | r[35]
"1f6a4f:";  r[36] = r[23] << 6
"1f6a53:";  r[40] = r[24] >> 2
"1f6a57:";  r[36] = r[40] | r[36]
"1f6a5b:";  r[37] = r[24] << 6
"1f6a5f:";  r[40] = r[25] >> 2
"1f6a63:";  r[37] = r[40] | r[37]
"1f6a67:";  r[38] = r[25] << 6
"1f6a6b:";  # jmp 0x298dba
"298dba:";  r[40] = r[26] >> 2
"298dbe:";  r[38] = r[40] | r[38]
"298dc2:";  r[39] = r[26] << 6
"298dc6:";  r[40] = r[27] >> 2
"298dca:";  r[39] = r[40] | r[39]
"298dce:";  output[64] = r[32]
"298dd1:";  output[65] = r[33]
"298dd4:";  output[66] = r[34]
"298dd7:";  output[67] = r[35]
"298dda:";  output[68] = r[36]
"298ddd:";  output[69] = r[37]
"298de0:";  output[70] = r[38]
"298de3:";  output[71] = r[39]
"298de6:";  r[32] = r[27] << 6
"298dea:";  r[40] = r[28] >> 2
"298dee:";  r[32] = r[40] | r[32]
"298df2:";  r[33] = r[28] << 6
"298df6:";  r[40] = r[29] >> 2
"298dfa:";  r[33] = r[40] | r[33]
"298dfe:";  r[34] = r[29] << 6
"298e02:";  r[40] = r[30] >> 2
"298e06:";  r[34] = r[40] | r[34]
"298e0a:";  r[35] = r[30] << 6
"298e0e:";  r[40] = r[31] >> 2
"298e12:";  r[35] = r[40] | r[35]
"298e16:";  r[36] = r[31] << 6
"298e1a:";  r[40] = r[16] >> 2
"298e1e:";  r[36] = r[40] | r[36]
"298e22:";  r[37] = r[16] << 6
"298e26:";  r[40] = r[17] >> 2
"298e2a:";  # jmp 0x27873a
"27873a:";  r[37] = r[40] | r[37]
"27873e:";  r[38] = r[17] << 6
"278742:";  r[40] = r[18] >> 2
"278746:";  r[38] = r[40] | r[38]
"27874a:";  r[39] = r[18] << 6
"27874e:";  r[40] = r[19] >> 2
"278752:";  r[39] = r[40] | r[39]
"278756:";  output[72] = r[32]
"278759:";  output[73] = r[33]
"27875c:";  output[74] = r[34]
"27875f:";  output[75] = r[35]
"278762:";  output[76] = r[36]
"278765:";  output[77] = r[37]
"278768:";  output[78] = r[38]
"27876b:";  output[79] = r[39]
"27876e:";  r[32] = r[5] << 5
"278772:";  r[40] = r[6] >> 3
"278776:";  r[32] = r[40] | r[32]
"27877a:";  r[33] = r[6] << 5
"27877e:";  r[40] = r[7] >> 3
"278782:";  r[33] = r[40] | r[33]
"278786:";  r[34] = r[7] << 5
"27878a:";  r[40] = r[8] >> 3
"27878e:";  r[34] = r[40] | r[34]
"278792:";  r[35] = r[8] << 5
"278796:";  r[40] = r[9] >> 3
"27879a:";  r[35] = r[40] | r[35]
"27879e:";  r[36] = r[9] << 5
"2787a2:";  # jmp 0x306c3
" 306c3:";  r[40] = r[10] >> 3
" 306c7:";  r[36] = r[40] | r[36]
" 306cb:";  r[37] = r[10] << 5
" 306cf:";  r[40] = r[11] >> 3
" 306d3:";  r[37] = r[40] | r[37]
" 306d7:";  r[38] = r[11] << 5
" 306db:";  r[40] = r[12] >> 3
" 306df:";  r[38] = r[40] | r[38]
" 306e3:";  r[39] = r[12] << 5
" 306e7:";  r[40] = r[13] >> 3
" 306eb:";  r[39] = r[40] | r[39]
" 306ef:";  output[80] = r[32]
" 306f2:";  output[81] = r[33]
" 306f5:";  output[82] = r[34]
" 306f8:";  output[83] = r[35]
" 306fb:";  output[84] = r[36]
" 306fe:";  output[85] = r[37]
" 30701:";  output[86] = r[38]
" 30704:";  output[87] = r[39]
" 30707:";  r[32] = r[13] << 5
" 3070b:";  r[40] = r[14] >> 3
" 3070f:";  r[32] = r[40] | r[32]
" 30713:";  r[33] = r[14] << 5
" 30717:";  r[40] = r[15] >> 3
" 3071b:";  r[33] = r[40] | r[33]
" 3071f:";  r[34] = r[15] << 5
" 30723:";  r[40] = r[0] >> 3
" 30727:";  r[34] = r[40] | r[34]
" 3072b:";  r[35] = r[0] << 5
" 3072f:";  r[40] = r[1] >> 3
" 30733:";  r[35] = r[40] | r[35]
" 30737:";  r[36] = r[1] << 5
" 3073b:";  r[40] = r[2] >> 3
" 3073f:";  r[36] = r[40] | r[36]
" 30743:";  r[37] = r[2] << 5
" 30747:";  r[40] = r[3] >> 3
" 3074b:";  r[37] = r[40] | r[37]
" 3074f:";  r[38] = r[3] << 5
" 30753:";  r[40] = r[4] >> 3
" 30757:";  r[38] = r[40] | r[38]
" 3075b:";  r[39] = r[4] << 5
" 3075f:";  r[40] = r[5] >> 3
" 30763:";  # jmp 0x81662
" 81662:";  r[39] = r[40] | r[39]
" 81666:";  output[88] = r[32]
" 81669:";  output[89] = r[33]
" 8166c:";  output[90] = r[34]
" 8166f:";  output[91] = r[35]
" 81672:";  output[92] = r[36]
" 81675:";  output[93] = r[37]
" 81678:";  output[94] = r[38]
" 8167b:";  output[95] = r[39]
" 8167e:";  r[32] = r[21] << 5
" 81682:";  r[40] = r[22] >> 3
" 81686:";  r[32] = r[40] | r[32]
" 8168a:";  r[33] = r[22] << 5
" 8168e:";  r[40] = r[23] >> 3
" 81692:";  r[33] = r[40] | r[33]
" 81696:";  r[34] = r[23] << 5
" 8169a:";  r[40] = r[24] >> 3
" 8169e:";  r[34] = r[40] | r[34]
" 816a2:";  r[35] = r[24] << 5
" 816a6:";  r[40] = r[25] >> 3
" 816aa:";  r[35] = r[40] | r[35]
" 816ae:";  r[36] = r[25] << 5
" 816b2:";  r[40] = r[26] >> 3
" 816b6:";  r[36] = r[40] | r[36]
" 816ba:";  r[37] = r[26] << 5
" 816be:";  r[40] = r[27] >> 3
" 816c2:";  r[37] = r[40] | r[37]
" 816c6:";  r[38] = r[27] << 5
" 816ca:";  r[40] = r[28] >> 3
" 816ce:";  r[38] = r[40] | r[38]
" 816d2:";  r[39] = r[28] << 5
" 816d6:";  r[40] = r[29] >> 3
" 816da:";  r[39] = r[40] | r[39]
" 816de:";  output[96] = r[32]
" 816e1:";  output[97] = r[33]
" 816e4:";  output[98] = r[34]
" 816e7:";  output[99] = r[35]
" 816ea:";  output[100] = r[36]
" 816ed:";  output[101] = r[37]
" 816f0:";  output[102] = r[38]
" 816f3:";  output[103] = r[39]
" 816f6:";  r[32] = r[15] << 4
" 816fa:";  # jmp 0x1b5f1f
"1b5f1f:";  r[40] = r[0] >> 4
"1b5f23:";  r[32] = r[40] | r[32]
"1b5f27:";  r[33] = r[0] << 4
"1b5f2b:";  r[40] = r[1] >> 4
"1b5f2f:";  r[33] = r[40] | r[33]
"1b5f33:";  r[34] = r[1] << 4
"1b5f37:";  r[40] = r[2] >> 4
"1b5f3b:";  r[34] = r[40] | r[34]
"1b5f3f:";  r[35] = r[2] << 4
"1b5f43:";  r[40] = r[3] >> 4
"1b5f47:";  r[35] = r[40] | r[35]
"1b5f4b:";  r[36] = r[3] << 4
"1b5f4f:";  r[40] = r[4] >> 4
"1b5f53:";  r[36] = r[40] | r[36]
"1b5f57:";  r[37] = r[4] << 4
"1b5f5b:";  r[40] = r[5] >> 4
"1b5f5f:";  r[37] = r[40] | r[37]
"1b5f63:";  r[38] = r[5] << 4
"1b5f67:";  r[40] = r[6] >> 4
"1b5f6b:";  r[38] = r[40] | r[38]
"1b5f6f:";  r[39] = r[6] << 4
"1b5f73:";  r[40] = r[7] >> 4
"1b5f77:";  r[39] = r[40] | r[39]
"1b5f7b:";  output[104] = r[32]
"1b5f7e:";  output[105] = r[33]
"1b5f81:";  output[106] = r[34]
"1b5f84:";  # jmp 0xf3e07
" f3e07:";  output[107] = r[35]
" f3e0a:";  output[108] = r[36]
" f3e0d:";  output[109] = r[37]
" f3e10:";  output[110] = r[38]
" f3e13:";  output[111] = r[39]
" f3e16:";  r[32] = r[23] << 4
" f3e1a:";  r[40] = r[24] >> 4
" f3e1e:";  r[32] = r[40] | r[32]
" f3e22:";  r[33] = r[24] << 4
" f3e26:";  r[40] = r[25] >> 4
" f3e2a:";  r[33] = r[40] | r[33]
" f3e2e:";  r[34] = r[25] << 4
" f3e32:";  r[40] = r[26] >> 4
" f3e36:";  r[34] = r[40] | r[34]
" f3e3a:";  r[35] = r[26] << 4
" f3e3e:";  r[40] = r[27] >> 4
" f3e42:";  r[35] = r[40] | r[35]
" f3e46:";  r[36] = r[27] << 4
" f3e4a:";  r[40] = r[28] >> 4
" f3e4e:";  r[36] = r[40] | r[36]
" f3e52:";  r[37] = r[28] << 4
" f3e56:";  r[40] = r[29] >> 4
" f3e5a:";  # jmp 0x17550b
"17550b:";  r[37] = r[40] | r[37]
"17550f:";  r[38] = r[29] << 4
"175513:";  r[40] = r[30] >> 4
"175517:";  r[38] = r[40] | r[38]
"17551b:";  r[39] = r[30] << 4
"17551f:";  r[40] = r[31] >> 4
"175523:";  r[39] = r[40] | r[39]
"175527:";  output[112] = r[32]
"17552a:";  output[113] = r[33]
"17552d:";  output[114] = r[34]
"175530:";  output[115] = r[35]
"175533:";  output[116] = r[36]
"175536:";  output[117] = r[37]
"175539:";  output[118] = r[38]
"17553c:";  output[119] = r[39]
"17553f:";  r[32] = r[31] << 4
"175543:";  r[40] = r[16] >> 4
"175547:";  r[32] = r[40] | r[32]
"17554b:";  r[33] = r[16] << 4
"17554f:";  # jmp 0x37d511
"37d511:";  r[40] = r[17] >> 4
"37d515:";  r[33] = r[40] | r[33]
"37d519:";  r[34] = r[17] << 4
"37d51d:";  r[40] = r[18] >> 4
"37d521:";  r[34] = r[40] | r[34]
"37d525:";  r[35] = r[18] << 4
"37d529:";  r[40] = r[19] >> 4
"37d52d:";  r[35] = r[40] | r[35]
"37d531:";  r[36] = r[19] << 4
"37d535:";  r[40] = r[20] >> 4
"37d539:";  # jmp 0x36c8b8
"36c8b8:";  r[36] = r[40] | r[36]
"36c8bc:";  r[37] = r[20] << 4
"36c8c0:";  r[40] = r[21] >> 4
"36c8c4:";  r[37] = r[40] | r[37]
"36c8c8:";  r[38] = r[21] << 4
"36c8cc:";  r[40] = r[22] >> 4
"36c8d0:";  r[38] = r[40] | r[38]
"36c8d4:";  r[39] = r[22] << 4
"36c8d8:";  r[40] = r[23] >> 4
"36c8dc:";  r[39] = r[40] | r[39]
"36c8e0:";  output[120] = r[32]
"36c8e3:";  output[121] = r[33]
"36c8e6:";  # jmp 0x102c2
" 102c2:";  output[122] = r[34]
" 102c5:";  output[123] = r[35]
" 102c8:";  output[124] = r[36]
" 102cb:";  output[125] = r[37]
" 102ce:";  output[126] = r[38]
" 102d1:";  output[127] = r[39]
" 102d4:";  r[32] = r[9] << 5
" 102d8:";  r[40] = r[10] >> 3
" 102dc:";  r[32] = r[40] | r[32]
" 102e0:";  r[33] = r[10] << 5
" 102e4:";  r[40] = r[11] >> 3
" 102e8:";  r[33] = r[40] | r[33]
" 102ec:";  r[34] = r[11] << 5
" 102f0:";  r[40] = r[12] >> 3
" 102f4:";  r[34] = r[40] | r[34]
" 102f8:";  r[35] = r[12] << 5
" 102fc:";  r[40] = r[13] >> 3
" 10300:";  r[35] = r[40] | r[35]
" 10304:";  r[36] = r[13] << 5
" 10308:";  r[40] = r[14] >> 3
" 1030c:";  r[36] = r[40] | r[36]
" 10310:";  r[37] = r[14] << 5
" 10314:";  r[40] = r[15] >> 3
" 10318:";  r[37] = r[40] | r[37]
" 1031c:";  r[38] = r[15] << 5
" 10320:";  r[40] = r[0] >> 3
" 10324:";  r[38] = r[40] | r[38]
" 10328:";  r[39] = r[0] << 5
" 1032c:";  r[40] = r[1] >> 3
" 10330:";  r[39] = r[40] | r[39]
" 10334:";  output[128] = r[32]
" 10337:";  output[129] = r[33]
" 1033a:";  output[130] = r[34]
" 1033d:";  output[131] = r[35]
" 10340:";  output[132] = r[36]
" 10343:";  output[133] = r[37]
" 10346:";  output[134] = r[38]
" 10349:";  # jmp 0x134c95
"134c95:";  output[135] = r[39]
"134c98:";  r[32] = r[1] << 5
"134c9c:";  r[40] = r[2] >> 3
"134ca0:";  r[32] = r[40] | r[32]
"134ca4:";  r[33] = r[2] << 5
"134ca8:";  r[40] = r[3] >> 3
"134cac:";  r[33] = r[40] | r[33]
"134cb0:";  r[34] = r[3] << 5
"134cb4:";  r[40] = r[4] >> 3
"134cb8:";  r[34] = r[40] | r[34]
"134cbc:";  r[35] = r[4] << 5
"134cc0:";  r[40] = r[5] >> 3
"134cc4:";  r[35] = r[40] | r[35]
"134cc8:";  r[36] = r[5] << 5
"134ccc:";  r[40] = r[6] >> 3
"134cd0:";  r[36] = r[40] | r[36]
"134cd4:";  r[37] = r[6] << 5
"134cd8:";  r[40] = r[7] >> 3
"134cdc:";  r[37] = r[40] | r[37]
"134ce0:";  r[38] = r[7] << 5
"134ce4:";  # jmp 0x2d9591
"2d9591:";  r[40] = r[8] >> 3
"2d9595:";  r[38] = r[40] | r[38]
"2d9599:";  r[39] = r[8] << 5
"2d959d:";  r[40] = r[9] >> 3
"2d95a1:";  r[39] = r[40] | r[39]
"2d95a5:";  output[136] = r[32]
"2d95a8:";  output[137] = r[33]
"2d95ab:";  output[138] = r[34]
"2d95ae:";  output[139] = r[35]
"2d95b1:";  output[140] = r[36]
"2d95b4:";  output[141] = r[37]
"2d95b7:";  output[142] = r[38]
"2d95ba:";  output[143] = r[39]
"2d95bd:";  r[32] = r[11] << 6
"2d95c1:";  r[40] = r[12] >> 2
"2d95c5:";  r[32] = r[40] | r[32]
"2d95c9:";  r[33] = r[12] << 6
"2d95cd:";  r[40] = r[13] >> 2
"2d95d1:";  r[33] = r[40] | r[33]
"2d95d5:";  r[34] = r[13] << 6
"2d95d9:";  r[40] = r[14] >> 2
"2d95dd:";  r[34] = r[40] | r[34]
"2d95e1:";  r[35] = r[14] << 6
"2d95e5:";  r[40] = r[15] >> 2
"2d95e9:";  r[35] = r[40] | r[35]
"2d95ed:";  r[36] = r[15] << 6
"2d95f1:";  r[40] = r[0] >> 2
"2d95f5:";  r[36] = r[40] | r[36]
"2d95f9:";  r[37] = r[0] << 6
"2d95fd:";  r[40] = r[1] >> 2
"2d9601:";  r[37] = r[40] | r[37]
"2d9605:";  r[38] = r[1] << 6
"2d9609:";  r[40] = r[2] >> 2
"2d960d:";  r[38] = r[40] | r[38]
"2d9611:";  r[39] = r[2] << 6
"2d9615:";  r[40] = r[3] >> 2
"2d9619:";  r[39] = r[40] | r[39]
"2d961d:";  # jmp 0x134c40
"134c40:";  output[144] = r[32]
"134c43:";  output[145] = r[33]
"134c46:";  output[146] = r[34]
"134c49:";  output[147] = r[35]
"134c4c:";  output[148] = r[36]
"134c4f:";  output[149] = r[37]
"134c52:";  output[150] = r[38]
"134c55:";  output[151] = r[39]
"134c58:";  r[32] = r[3] << 6
"134c5c:";  r[40] = r[4] >> 2
"134c60:";  r[32] = r[40] | r[32]
"134c64:";  r[33] = r[4] << 6
"134c68:";  r[40] = r[5] >> 2
"134c6c:";  r[33] = r[40] | r[33]
"134c70:";  r[34] = r[5] << 6
"134c74:";  r[40] = r[6] >> 2
"134c78:";  r[34] = r[40] | r[34]
"134c7c:";  r[35] = r[6] << 6
"134c80:";  r[40] = r[7] >> 2
"134c84:";  r[35] = r[40] | r[35]
"134c88:";  r[36] = r[7] << 6
"134c8c:";  r[40] = r[8] >> 2
"134c90:";  # jmp 0xb2c9c
" b2c9c:";  r[36] = r[40] | r[36]
" b2ca0:";  r[37] = r[8] << 6
" b2ca4:";  r[40] = r[9] >> 2
" b2ca8:";  r[37] = r[40] | r[37]
" b2cac:";  r[38] = r[9] << 6
" b2cb0:";  r[40] = r[10] >> 2
" b2cb4:";  r[38] = r[40] | r[38]
" b2cb8:";  r[39] = r[10] << 6
" b2cbc:";  r[40] = r[11] >> 2
" b2cc0:";  r[39] = r[40] | r[39]
" b2cc4:";  # jmp 0x2b912f
"2b912f:";  output[152] = r[32]
"2b9132:";  output[153] = r[33]
"2b9135:";  output[154] = r[34]
"2b9138:";  output[155] = r[35]
"2b913b:";  output[156] = r[36]
"2b913e:";  output[157] = r[37]
"2b9141:";  output[158] = r[38]
"2b9144:";  output[159] = r[39]
"2b9147:";  r[32] = r[27] << 6
"2b914b:";  r[40] = r[28] >> 2
"2b914f:";  r[32] = r[40] | r[32]
"2b9153:";  r[33] = r[28] << 6
"2b9157:";  r[40] = r[29] >> 2
"2b915b:";  # jmp 0x298d00
"298d00:";  r[33] = r[40] | r[33]
"298d04:";  r[34] = r[29] << 6
"298d08:";  r[40] = r[30] >> 2
"298d0c:";  r[34] = r[40] | r[34]
"298d10:";  r[35] = r[30] << 6
"298d14:";  r[40] = r[31] >> 2
"298d18:";  r[35] = r[40] | r[35]
"298d1c:";  r[36] = r[31] << 6
"298d20:";  r[40] = r[16] >> 2
"298d24:";  r[36] = r[40] | r[36]
"298d28:";  r[37] = r[16] << 6
"298d2c:";  # jmp 0x20562
" 20562:";  r[40] = r[17] >> 2
" 20566:";  r[37] = r[40] | r[37]
" 2056a:";  r[38] = r[17] << 6
" 2056e:";  r[40] = r[18] >> 2
" 20572:";  r[38] = r[40] | r[38]
" 20576:";  r[39] = r[18] << 6
" 2057a:";  r[40] = r[19] >> 2
" 2057e:";  r[39] = r[40] | r[39]
" 20582:";  output[160] = r[32]
" 20585:";  output[161] = r[33]
" 20588:";  output[162] = r[34]
" 2058b:";  output[163] = r[35]
" 2058e:";  output[164] = r[36]
" 20591:";  output[165] = r[37]
" 20594:";  output[166] = r[38]
" 20597:";  output[167] = r[39]
" 2059a:";  r[32] = r[19] << 6
" 2059e:";  r[40] = r[20] >> 2
" 205a2:";  r[32] = r[40] | r[32]
" 205a6:";  r[33] = r[20] << 6
" 205aa:";  r[40] = r[21] >> 2
" 205ae:";  r[33] = r[40] | r[33]
" 205b2:";  r[34] = r[21] << 6
" 205b6:";  r[40] = r[22] >> 2
" 205ba:";  r[34] = r[40] | r[34]
" 205be:";  # jmp 0x7144c
" 7144c:";  r[35] = r[22] << 6
" 71450:";  r[40] = r[23] >> 2
" 71454:";  r[35] = r[40] | r[35]
" 71458:";  r[36] = r[23] << 6
" 7145c:";  r[40] = r[24] >> 2
" 71460:";  r[36] = r[40] | r[36]
" 71464:";  r[37] = r[24] << 6
" 71468:";  r[40] = r[25] >> 2
" 7146c:";  r[37] = r[40] | r[37]
" 71470:";  r[38] = r[25] << 6
" 71474:";  r[40] = r[26] >> 2
" 71478:";  r[38] = r[40] | r[38]
" 7147c:";  r[39] = r[26] << 6
" 71480:";  r[40] = r[27] >> 2
" 71484:";  r[39] = r[40] | r[39]
" 71488:";  output[168] = r[32]
" 7148b:";  output[169] = r[33]
" 7148e:";  output[170] = r[34]
" 71491:";  output[171] = r[35]
" 71494:";  output[172] = r[36]
" 71497:";  output[173] = r[37]
" 7149a:";  output[174] = r[38]
" 7149d:";  output[175] = r[39]
" 714a0:";  r[32] = r[13] << 7
" 714a4:";  r[40] = r[14] >> 1
" 714a8:";  r[32] = r[40] | r[32]
" 714ac:";  r[33] = r[14] << 7
" 714b0:";  r[40] = r[15] >> 1
" 714b4:";  r[33] = r[40] | r[33]
" 714b8:";  r[34] = r[15] << 7
" 714bc:";  r[40] = r[0] >> 1
" 714c0:";  # jmp 0x819c1
" 819c1:";  r[34] = r[40] | r[34]
" 819c5:";  r[35] = r[0] << 7
" 819c9:";  r[40] = r[1] >> 1
" 819cd:";  r[35] = r[40] | r[35]
" 819d1:";  r[36] = r[1] << 7
" 819d5:";  r[40] = r[2] >> 1
" 819d9:";  r[36] = r[40] | r[36]
" 819dd:";  r[37] = r[2] << 7
" 819e1:";  r[40] = r[3] >> 1
" 819e5:";  r[37] = r[40] | r[37]
" 819e9:";  r[38] = r[3] << 7
" 819ed:";  r[40] = r[4] >> 1
" 819f1:";  r[38] = r[40] | r[38]
" 819f5:";  r[39] = r[4] << 7
" 819f9:";  r[40] = r[5] >> 1
" 819fd:";  r[39] = r[40] | r[39]
" 81a01:";  output[176] = r[32]
" 81a04:";  output[177] = r[33]
" 81a07:";  output[178] = r[34]
" 81a0a:";  output[179] = r[35]
" 81a0d:";  output[180] = r[36]
" 81a10:";  output[181] = r[37]
" 81a13:";  output[182] = r[38]
" 81a16:";  output[183] = r[39]
" 81a19:";  r[32] = r[5] << 7
" 81a1d:";  r[40] = r[6] >> 1
" 81a21:";  r[32] = r[40] | r[32]
" 81a25:";  r[33] = r[6] << 7
" 81a29:";  r[40] = r[7] >> 1
" 81a2d:";  r[33] = r[40] | r[33]
" 81a31:";  r[34] = r[7] << 7
" 81a35:";  r[40] = r[8] >> 1
" 81a39:";  r[34] = r[40] | r[34]
" 81a3d:";  r[35] = r[8] << 7
" 81a41:";  r[40] = r[9] >> 1
" 81a45:";  r[35] = r[40] | r[35]
" 81a49:";  r[36] = r[9] << 7
" 81a4d:";  r[40] = r[10] >> 1
" 81a51:";  r[36] = r[40] | r[36]
" 81a55:";  r[37] = r[10] << 7
" 81a59:";  r[40] = r[11] >> 1
" 81a5d:";  r[37] = r[40] | r[37]
" 81a61:";  r[38] = r[11] << 7
" 81a65:";  r[40] = r[12] >> 1
" 81a69:";  r[38] = r[40] | r[38]
" 81a6d:";  r[39] = r[12] << 7
" 81a71:";  r[40] = r[13] >> 1
" 81a75:";  r[39] = r[40] | r[39]
" 81a79:";  # jmp 0x288b4d
"288b4d:";  output[184] = r[32]
"288b50:";  output[185] = r[33]
"288b53:";  output[186] = r[34]
"288b56:";  output[187] = r[35]
"288b59:";  output[188] = r[36]
"288b5c:";  output[189] = r[37]
"288b5f:";  output[190] = r[38]
"288b62:";  output[191] = r[39]
"288b65:";  r[32] = r[29] << 7
"288b69:";  r[40] = r[30] >> 1
"288b6d:";  r[32] = r[40] | r[32]
"288b71:";  r[33] = r[30] << 7
"288b75:";  r[40] = r[31] >> 1
"288b79:";  r[33] = r[40] | r[33]
"288b7d:";  r[34] = r[31] << 7
"288b81:";  r[40] = r[16] >> 1
"288b85:";  r[34] = r[40] | r[34]
"288b89:";  r[35] = r[16] << 7
"288b8d:";  r[40] = r[17] >> 1
"288b91:";  r[35] = r[40] | r[35]
"288b95:";  r[36] = r[17] << 7
"288b99:";  r[40] = r[18] >> 1
"288b9d:";  r[36] = r[40] | r[36]
"288ba1:";  r[37] = r[18] << 7
"288ba5:";  r[40] = r[19] >> 1
"288ba9:";  r[37] = r[40] | r[37]
"288bad:";  r[38] = r[19] << 7
"288bb1:";  r[40] = r[20] >> 1
"288bb5:";  r[38] = r[40] | r[38]
"288bb9:";  r[39] = r[20] << 7
"288bbd:";  r[40] = r[21] >> 1
"288bc1:";  r[39] = r[40] | r[39]
"288bc5:";  # jmp 0xe3da2
" e3da2:";  output[192] = r[32]
" e3da5:";  output[193] = r[33]
" e3da8:";  output[194] = r[34]
" e3dab:";  output[195] = r[35]
" e3dae:";  output[196] = r[36]
" e3db1:";  output[197] = r[37]
" e3db4:";  output[198] = r[38]
" e3db7:";  output[199] = r[39]
" e3dba:";  r[32] = r[21] << 7
" e3dbe:";  r[40] = r[22] >> 1
" e3dc2:";  r[32] = r[40] | r[32]
" e3dc6:";  r[33] = r[22] << 7
" e3dca:";  r[40] = r[23] >> 1
" e3dce:";  r[33] = r[40] | r[33]
" e3dd2:";  r[34] = r[23] << 7
" e3dd6:";  r[40] = r[24] >> 1
" e3dda:";  r[34] = r[40] | r[34]
" e3dde:";  r[35] = r[24] << 7
" e3de2:";  r[40] = r[25] >> 1
" e3de6:";  r[35] = r[40] | r[35]
" e3dea:";  r[36] = r[25] << 7
" e3dee:";  r[40] = r[26] >> 1
" e3df2:";  r[36] = r[40] | r[36]
" e3df6:";  r[37] = r[26] << 7
" e3dfa:";  r[40] = r[27] >> 1
" e3dfe:";  r[37] = r[40] | r[37]
" e3e02:";  # jmp 0x12479a
"12479a:";  r[38] = r[27] << 7
"12479e:";  r[40] = r[28] >> 1
"1247a2:";  r[38] = r[40] | r[38]
"1247a6:";  r[39] = r[28] << 7
"1247aa:";  r[40] = r[29] >> 1
"1247ae:";  r[39] = r[40] | r[39]
"1247b2:";  output[200] = r[32]
"1247b5:";  output[201] = r[33]
"1247b8:";  output[202] = r[34]
"1247bb:";  output[203] = r[35]
"1247be:";  output[204] = r[36]
"1247c1:";  output[205] = r[37]
"1247c4:";  output[206] = r[38]
"1247c7:";  output[207] = r[39]
"1247ca:";  ret(0)
" 91d0e:";  r[1] = 4
" 91d11:";  # jne r0, r1, 0x91d1d
" 91d18:";  # jmp 0x1241bf
"1241bf:";  r[0] = input[1]
"1241c2:";  r[16] = input[17]
"1241c5:";  r[0] = r[0] ^ r[16]
"1241c9:";  r[1] = input[2]
"1241cc:";  r[16] = input[18]
"1241cf:";  r[1] = r[1] ^ r[16]
"1241d3:";  r[2] = input[3]
"1241d6:";  r[16] = input[19]
"1241d9:";  r[2] = r[2] ^ r[16]
"1241dd:";  r[3] = input[4]
"1241e0:";  r[16] = input[20]
"1241e3:";  r[3] = r[3] ^ r[16]
"1241e7:";  r[4] = input[5]
"1241ea:";  r[16] = input[21]
"1241ed:";  r[4] = r[4] ^ r[16]
"1241f1:";  r[5] = input[6]
"1241f4:";  r[16] = input[22]
"1241f7:";  r[5] = r[5] ^ r[16]
"1241fb:";  r[6] = input[7]
"1241fe:";  r[16] = input[23]
"124201:";  r[6] = r[6] ^ r[16]
"124205:";  r[7] = input[8]
"124208:";  r[16] = input[24]
"12420b:";  r[7] = r[7] ^ r[16]
"12420f:";  r[8] = input[9]
"124212:";  r[16] = input[25]
"124215:";  r[8] = r[8] ^ r[16]
"124219:";  r[9] = input[10]
"12421c:";  r[16] = input[26]
"12421f:";  r[9] = r[9] ^ r[16]
"124223:";  r[10] = input[11]
"124226:";  r[16] = input[27]
"124229:";  r[10] = r[10] ^ r[16]
"12422d:";  r[11] = input[12]
"124230:";  r[16] = input[28]
"124233:";  r[11] = r[11] ^ r[16]
"124237:";  r[12] = input[13]
"12423a:";  r[16] = input[29]
"12423d:";  r[12] = r[12] ^ r[16]
"124241:";  r[13] = input[14]
"124244:";  # jmp 0x34c31f
"34c31f:";  r[16] = input[30]
"34c322:";  r[13] = r[13] ^ r[16]
"34c326:";  r[14] = input[15]
"34c329:";  r[16] = input[31]
"34c32c:";  r[14] = r[14] ^ r[16]
"34c330:";  r[15] = input[16]
"34c333:";  r[16] = input[32]
"34c336:";  r[15] = r[15] ^ r[16]
"34c33a:";  r[16] = input[33]
"34c33d:";  r[16] = r[0] ^ r[16]
"34c341:";  r[17] = input[34]
"34c344:";  r[17] = r[1] ^ r[17]
"34c348:";  r[18] = input[35]
"34c34b:";  r[18] = r[2] ^ r[18]
"34c34f:";  r[19] = input[36]
"34c352:";  r[19] = r[3] ^ r[19]
"34c356:";  r[20] = input[37]
"34c359:";  r[20] = r[4] ^ r[20]
"34c35d:";  r[21] = input[38]
"34c360:";  r[21] = r[5] ^ r[21]
"34c364:";  r[22] = input[39]
"34c367:";  r[22] = r[6] ^ r[22]
"34c36b:";  r[23] = input[40]
"34c36e:";  r[23] = r[7] ^ r[23]
"34c372:";  r[16] = prog[r[16] + 0x206c70]
"34c379:";  r[17] = prog[r[17] + 0x206c70]
"34c380:";  r[17] = rol(r[17], 1)
"34c384:";  r[18] = prog[r[18] + 0x206c70]
"34c38b:";  r[18] = rol(r[18], 7)
"34c38f:";  r[19] = rol(r[19], 1)
"34c393:";  r[19] = prog[r[19] + 0x206c70]
"34c39a:";  r[20] = prog[r[20] + 0x206c70]
"34c3a1:";  # jmp 0x2d9898
"2d9898:";  r[20] = rol(r[20], 1)
"2d989c:";  r[21] = prog[r[21] + 0x206c70]
"2d98a3:";  r[21] = rol(r[21], 7)
"2d98a7:";  r[22] = rol(r[22], 1)
"2d98ab:";  r[22] = prog[r[22] + 0x206c70]
"2d98b2:";  r[23] = prog[r[23] + 0x206c70]
"2d98b9:";  r[16] = r[16] ^ r[21]
"2d98bd:";  r[17] = r[17] ^ r[22]
"2d98c1:";  r[18] = r[18] ^ r[23]
"2d98c5:";  r[19] = r[19] ^ r[20]
"2d98c9:";  r[20] = r[20] ^ r[18]
"2d98cd:";  r[21] = r[21] ^ r[19]
"2d98d1:";  r[22] = r[22] ^ r[16]
"2d98d5:";  r[23] = r[23] ^ r[17]
"2d98d9:";  r[16] = r[16] ^ r[23]
"2d98dd:";  r[17] = r[17] ^ r[20]
"2d98e1:";  r[18] = r[18] ^ r[21]
"2d98e5:";  r[19] = r[19] ^ r[22]
"2d98e9:";  r[20] = r[20] ^ r[19]
"2d98ed:";  r[21] = r[21] ^ r[16]
"2d98f1:";  r[22] = r[22] ^ r[17]
"2d98f5:";  r[23] = r[23] ^ r[18]
"2d98f9:";  r[8] = r[20] ^ r[8]
"2d98fd:";  r[9] = r[21] ^ r[9]
"2d9901:";  r[10] = r[22] ^ r[10]
"2d9905:";  r[11] = r[23] ^ r[11]
"2d9909:";  r[12] = r[16] ^ r[12]
"2d990d:";  r[13] = r[17] ^ r[13]
"2d9911:";  r[14] = r[18] ^ r[14]
"2d9915:";  r[15] = r[19] ^ r[15]
"2d9919:";  r[16] = input[41]
"2d991c:";  r[16] = r[8] ^ r[16]
"2d9920:";  r[17] = input[42]
"2d9923:";  r[17] = r[9] ^ r[17]
"2d9927:";  r[18] = input[43]
"2d992a:";  r[18] = r[10] ^ r[18]
"2d992e:";  # jmp 0x31abaa
"31abaa:";  r[19] = input[44]
"31abad:";  r[19] = r[11] ^ r[19]
"31abb1:";  r[20] = input[45]
"31abb4:";  r[20] = r[12] ^ r[20]
"31abb8:";  r[21] = input[46]
"31abbb:";  r[21] = r[13] ^ r[21]
"31abbf:";  r[22] = input[47]
"31abc2:";  r[22] = r[14] ^ r[22]
"31abc6:";  r[23] = input[48]
"31abc9:";  r[23] = r[15] ^ r[23]
"31abcd:";  r[16] = prog[r[16] + 0x206c70]
"31abd4:";  r[17] = prog[r[17] + 0x206c70]
"31abdb:";  r[17] = rol(r[17], 1)
"31abdf:";  r[18] = prog[r[18] + 0x206c70]
"31abe6:";  r[18] = rol(r[18], 7)
"31abea:";  r[19] = rol(r[19], 1)
"31abee:";  r[19] = prog[r[19] + 0x206c70]
"31abf5:";  # jmp 0x37d2d8
"37d2d8:";  r[20] = prog[r[20] + 0x206c70]
"37d2df:";  r[20] = rol(r[20], 1)
"37d2e3:";  r[21] = prog[r[21] + 0x206c70]
"37d2ea:";  r[21] = rol(r[21], 7)
"37d2ee:";  r[22] = rol(r[22], 1)
"37d2f2:";  r[22] = prog[r[22] + 0x206c70]
"37d2f9:";  r[23] = prog[r[23] + 0x206c70]
"37d300:";  r[16] = r[16] ^ r[21]
"37d304:";  r[17] = r[17] ^ r[22]
"37d308:";  r[18] = r[18] ^ r[23]
"37d30c:";  # jmp 0x92697
" 92697:";  r[19] = r[19] ^ r[20]
" 9269b:";  r[20] = r[20] ^ r[18]
" 9269f:";  r[21] = r[21] ^ r[19]
" 926a3:";  r[22] = r[22] ^ r[16]
" 926a7:";  r[23] = r[23] ^ r[17]
" 926ab:";  r[16] = r[16] ^ r[23]
" 926af:";  r[17] = r[17] ^ r[20]
" 926b3:";  r[18] = r[18] ^ r[21]
" 926b7:";  r[19] = r[19] ^ r[22]
" 926bb:";  r[20] = r[20] ^ r[19]
" 926bf:";  r[21] = r[21] ^ r[16]
" 926c3:";  r[22] = r[22] ^ r[17]
" 926c7:";  r[23] = r[23] ^ r[18]
" 926cb:";  r[0] = r[20] ^ r[0]
" 926cf:";  r[1] = r[21] ^ r[1]
" 926d3:";  r[2] = r[22] ^ r[2]
" 926d7:";  r[3] = r[23] ^ r[3]
" 926db:";  r[4] = r[16] ^ r[4]
" 926df:";  r[5] = r[17] ^ r[5]
" 926e3:";  r[6] = r[18] ^ r[6]
" 926e7:";  r[7] = r[19] ^ r[7]
" 926eb:";  r[16] = input[49]
" 926ee:";  r[16] = r[0] ^ r[16]
" 926f2:";  r[17] = input[50]
" 926f5:";  r[17] = r[1] ^ r[17]
" 926f9:";  r[18] = input[51]
" 926fc:";  # jmp 0xd3d02
" d3d02:";  r[18] = r[2] ^ r[18]
" d3d06:";  r[19] = input[52]
" d3d09:";  r[19] = r[3] ^ r[19]
" d3d0d:";  r[20] = input[53]
" d3d10:";  r[20] = r[4] ^ r[20]
" d3d14:";  r[21] = input[54]
" d3d17:";  r[21] = r[5] ^ r[21]
" d3d1b:";  r[22] = input[55]
" d3d1e:";  r[22] = r[6] ^ r[22]
" d3d22:";  r[23] = input[56]
" d3d25:";  r[23] = r[7] ^ r[23]
" d3d29:";  r[16] = prog[r[16] + 0x206c70]
" d3d30:";  r[17] = prog[r[17] + 0x206c70]
" d3d37:";  r[17] = rol(r[17], 1)
" d3d3b:";  r[18] = prog[r[18] + 0x206c70]
" d3d42:";  r[18] = rol(r[18], 7)
" d3d46:";  r[19] = rol(r[19], 1)
" d3d4a:";  r[19] = prog[r[19] + 0x206c70]
" d3d51:";  r[20] = prog[r[20] + 0x206c70]
" d3d58:";  r[20] = rol(r[20], 1)
" d3d5c:";  r[21] = prog[r[21] + 0x206c70]
" d3d63:";  r[21] = rol(r[21], 7)
" d3d67:";  r[22] = rol(r[22], 1)
" d3d6b:";  r[22] = prog[r[22] + 0x206c70]
" d3d72:";  r[23] = prog[r[23] + 0x206c70]
" d3d79:";  r[16] = r[16] ^ r[21]
" d3d7d:";  r[17] = r[17] ^ r[22]
" d3d81:";  r[18] = r[18] ^ r[23]
" d3d85:";  r[19] = r[19] ^ r[20]
" d3d89:";  r[20] = r[20] ^ r[18]
" d3d8d:";  r[21] = r[21] ^ r[19]
" d3d91:";  r[22] = r[22] ^ r[16]
" d3d95:";  r[23] = r[23] ^ r[17]
" d3d99:";  r[16] = r[16] ^ r[23]
" d3d9d:";  # jmp 0x2c9260
"2c9260:";  r[17] = r[17] ^ r[20]
"2c9264:";  r[18] = r[18] ^ r[21]
"2c9268:";  r[19] = r[19] ^ r[22]
"2c926c:";  r[20] = r[20] ^ r[19]
"2c9270:";  r[21] = r[21] ^ r[16]
"2c9274:";  r[22] = r[22] ^ r[17]
"2c9278:";  r[23] = r[23] ^ r[18]
"2c927c:";  r[8] = r[20] ^ r[8]
"2c9280:";  r[9] = r[21] ^ r[9]
"2c9284:";  r[10] = r[22] ^ r[10]
"2c9288:";  r[11] = r[23] ^ r[11]
"2c928c:";  # jmp 0x36cbeb
"36cbeb:";  r[12] = r[16] ^ r[12]
"36cbef:";  r[13] = r[17] ^ r[13]
"36cbf3:";  r[14] = r[18] ^ r[14]
"36cbf7:";  r[15] = r[19] ^ r[15]
"36cbfb:";  r[16] = input[57]
"36cbfe:";  r[16] = r[8] ^ r[16]
"36cc02:";  r[17] = input[58]
"36cc05:";  r[17] = r[9] ^ r[17]
"36cc09:";  r[18] = input[59]
"36cc0c:";  r[18] = r[10] ^ r[18]
"36cc10:";  r[19] = input[60]
"36cc13:";  r[19] = r[11] ^ r[19]
"36cc17:";  r[20] = input[61]
"36cc1a:";  r[20] = r[12] ^ r[20]
"36cc1e:";  r[21] = input[62]
"36cc21:";  r[21] = r[13] ^ r[21]
"36cc25:";  r[22] = input[63]
"36cc28:";  r[22] = r[14] ^ r[22]
"36cc2c:";  r[23] = input[64]
"36cc2f:";  # jmp 0x30a46d
"30a46d:";  r[23] = r[15] ^ r[23]
"30a471:";  r[16] = prog[r[16] + 0x206c70]
"30a478:";  r[17] = prog[r[17] + 0x206c70]
"30a47f:";  r[17] = rol(r[17], 1)
"30a483:";  r[18] = prog[r[18] + 0x206c70]
"30a48a:";  r[18] = rol(r[18], 7)
"30a48e:";  r[19] = rol(r[19], 1)
"30a492:";  r[19] = prog[r[19] + 0x206c70]
"30a499:";  r[20] = prog[r[20] + 0x206c70]
"30a4a0:";  r[20] = rol(r[20], 1)
"30a4a4:";  r[21] = prog[r[21] + 0x206c70]
"30a4ab:";  r[21] = rol(r[21], 7)
"30a4af:";  r[22] = rol(r[22], 1)
"30a4b3:";  r[22] = prog[r[22] + 0x206c70]
"30a4ba:";  r[23] = prog[r[23] + 0x206c70]
"30a4c1:";  r[16] = r[16] ^ r[21]
"30a4c5:";  r[17] = r[17] ^ r[22]
"30a4c9:";  # jmp 0x31a82a
"31a82a:";  r[18] = r[18] ^ r[23]
"31a82e:";  r[19] = r[19] ^ r[20]
"31a832:";  r[20] = r[20] ^ r[18]
"31a836:";  r[21] = r[21] ^ r[19]
"31a83a:";  r[22] = r[22] ^ r[16]
"31a83e:";  r[23] = r[23] ^ r[17]
"31a842:";  r[16] = r[16] ^ r[23]
"31a846:";  r[17] = r[17] ^ r[20]
"31a84a:";  r[18] = r[18] ^ r[21]
"31a84e:";  r[19] = r[19] ^ r[22]
"31a852:";  r[20] = r[20] ^ r[19]
"31a856:";  r[21] = r[21] ^ r[16]
"31a85a:";  r[22] = r[22] ^ r[17]
"31a85e:";  r[23] = r[23] ^ r[18]
"31a862:";  r[0] = r[20] ^ r[0]
"31a866:";  r[1] = r[21] ^ r[1]
"31a86a:";  r[2] = r[22] ^ r[2]
"31a86e:";  r[3] = r[23] ^ r[3]
"31a872:";  r[4] = r[16] ^ r[4]
"31a876:";  r[5] = r[17] ^ r[5]
"31a87a:";  r[6] = r[18] ^ r[6]
"31a87e:";  r[7] = r[19] ^ r[7]
"31a882:";  r[16] = input[65]
"31a885:";  r[16] = r[0] ^ r[16]
"31a889:";  r[17] = input[66]
"31a88c:";  r[17] = r[1] ^ r[17]
"31a890:";  r[18] = input[67]
"31a893:";  r[18] = r[2] ^ r[18]
"31a897:";  r[19] = input[68]
"31a89a:";  r[19] = r[3] ^ r[19]
"31a89e:";  r[20] = input[69]
"31a8a1:";  r[20] = r[4] ^ r[20]
"31a8a5:";  # jmp 0xd3cc0
" d3cc0:";  r[21] = input[70]
" d3cc3:";  r[21] = r[5] ^ r[21]
" d3cc7:";  r[22] = input[71]
" d3cca:";  r[22] = r[6] ^ r[22]
" d3cce:";  r[23] = input[72]
" d3cd1:";  r[23] = r[7] ^ r[23]
" d3cd5:";  r[16] = prog[r[16] + 0x206c70]
" d3cdc:";  r[17] = prog[r[17] + 0x206c70]
" d3ce3:";  r[17] = rol(r[17], 1)
" d3ce7:";  r[18] = prog[r[18] + 0x206c70]
" d3cee:";  r[18] = rol(r[18], 7)
" d3cf2:";  r[19] = rol(r[19], 1)
" d3cf6:";  r[19] = prog[r[19] + 0x206c70]
" d3cfd:";  # jmp 0xc33f2
" c33f2:";  r[20] = prog[r[20] + 0x206c70]
" c33f9:";  r[20] = rol(r[20], 1)
" c33fd:";  r[21] = prog[r[21] + 0x206c70]
" c3404:";  r[21] = rol(r[21], 7)
" c3408:";  r[22] = rol(r[22], 1)
" c340c:";  r[22] = prog[r[22] + 0x206c70]
" c3413:";  r[23] = prog[r[23] + 0x206c70]
" c341a:";  r[16] = r[16] ^ r[21]
" c341e:";  r[17] = r[17] ^ r[22]
" c3422:";  r[18] = r[18] ^ r[23]
" c3426:";  r[19] = r[19] ^ r[20]
" c342a:";  r[20] = r[20] ^ r[18]
" c342e:";  r[21] = r[21] ^ r[19]
" c3432:";  r[22] = r[22] ^ r[16]
" c3436:";  r[23] = r[23] ^ r[17]
" c343a:";  r[16] = r[16] ^ r[23]
" c343e:";  r[17] = r[17] ^ r[20]
" c3442:";  r[18] = r[18] ^ r[21]
" c3446:";  r[19] = r[19] ^ r[22]
" c344a:";  r[20] = r[20] ^ r[19]
" c344e:";  r[21] = r[21] ^ r[16]
" c3452:";  r[22] = r[22] ^ r[17]
" c3456:";  r[23] = r[23] ^ r[18]
" c345a:";  r[8] = r[20] ^ r[8]
" c345e:";  r[9] = r[21] ^ r[9]
" c3462:";  r[10] = r[22] ^ r[10]
" c3466:";  r[11] = r[23] ^ r[11]
" c346a:";  r[12] = r[16] ^ r[12]
" c346e:";  r[13] = r[17] ^ r[13]
" c3472:";  r[14] = r[18] ^ r[14]
" c3476:";  r[15] = r[19] ^ r[15]
" c347a:";  r[16] = input[73]
" c347d:";  r[16] = r[8] ^ r[16]
" c3481:";  r[17] = input[74]
" c3484:";  r[17] = r[9] ^ r[17]
" c3488:";  r[18] = input[75]
" c348b:";  r[18] = r[10] ^ r[18]
" c348f:";  r[19] = input[76]
" c3492:";  r[19] = r[11] ^ r[19]
" c3496:";  # jmp 0x31a5ce
"31a5ce:";  r[20] = input[77]
"31a5d1:";  r[20] = r[12] ^ r[20]
"31a5d5:";  r[21] = input[78]
"31a5d8:";  r[21] = r[13] ^ r[21]
"31a5dc:";  r[22] = input[79]
"31a5df:";  r[22] = r[14] ^ r[22]
"31a5e3:";  r[23] = input[80]
"31a5e6:";  r[23] = r[15] ^ r[23]
"31a5ea:";  r[16] = prog[r[16] + 0x206c70]
"31a5f1:";  r[17] = prog[r[17] + 0x206c70]
"31a5f8:";  r[17] = rol(r[17], 1)
"31a5fc:";  r[18] = prog[r[18] + 0x206c70]
"31a603:";  r[18] = rol(r[18], 7)
"31a607:";  r[19] = rol(r[19], 1)
"31a60b:";  r[19] = prog[r[19] + 0x206c70]
"31a612:";  r[20] = prog[r[20] + 0x206c70]
"31a619:";  r[20] = rol(r[20], 1)
"31a61d:";  r[21] = prog[r[21] + 0x206c70]
"31a624:";  r[21] = rol(r[21], 7)
"31a628:";  r[22] = rol(r[22], 1)
"31a62c:";  r[22] = prog[r[22] + 0x206c70]
"31a633:";  r[23] = prog[r[23] + 0x206c70]
"31a63a:";  r[16] = r[16] ^ r[21]
"31a63e:";  r[17] = r[17] ^ r[22]
"31a642:";  r[18] = r[18] ^ r[23]
"31a646:";  r[19] = r[19] ^ r[20]
"31a64a:";  r[20] = r[20] ^ r[18]
"31a64e:";  r[21] = r[21] ^ r[19]
"31a652:";  r[22] = r[22] ^ r[16]
"31a656:";  # jmp 0x30968
" 30968:";  r[23] = r[23] ^ r[17]
" 3096c:";  r[16] = r[16] ^ r[23]
" 30970:";  r[17] = r[17] ^ r[20]
" 30974:";  r[18] = r[18] ^ r[21]
" 30978:";  r[19] = r[19] ^ r[22]
" 3097c:";  r[20] = r[20] ^ r[19]
" 30980:";  r[21] = r[21] ^ r[16]
" 30984:";  r[22] = r[22] ^ r[17]
" 30988:";  r[23] = r[23] ^ r[18]
" 3098c:";  r[0] = r[20] ^ r[0]
" 30990:";  r[1] = r[21] ^ r[1]
" 30994:";  r[2] = r[22] ^ r[2]
" 30998:";  r[3] = r[23] ^ r[3]
" 3099c:";  r[4] = r[16] ^ r[4]
" 309a0:";  r[5] = r[17] ^ r[5]
" 309a4:";  r[6] = r[18] ^ r[6]
" 309a8:";  r[7] = r[19] ^ r[7]
" 309ac:";  r[16] = input[81]
" 309af:";  r[16] = r[16] & r[0]
" 309b3:";  r[17] = input[82]
" 309b6:";  r[17] = r[17] & r[1]
" 309ba:";  r[18] = input[83]
" 309bd:";  r[18] = r[18] & r[2]
" 309c1:";  r[19] = input[84]
" 309c4:";  r[19] = r[19] & r[3]
" 309c8:";  r[20] = r[16] << 1
" 309cc:";  r[24] = r[17] >> 7
" 309d0:";  r[20] = r[24] | r[20]
" 309d4:";  r[21] = r[17] << 1
" 309d8:";  r[24] = r[18] >> 7
" 309dc:";  r[21] = r[24] | r[21]
" 309e0:";  r[22] = r[18] << 1
" 309e4:";  # jmp 0x33b77b
"33b77b:";  r[24] = r[19] >> 7
"33b77f:";  r[22] = r[24] | r[22]
"33b783:";  r[23] = r[19] << 1
"33b787:";  r[24] = r[16] >> 7
"33b78b:";  r[23] = r[24] | r[23]
"33b78f:";  r[4] = r[20] ^ r[4]
"33b793:";  r[16] = input[85]
"33b796:";  r[16] = r[16] | r[4]
"33b79a:";  r[0] = r[0] ^ r[16]
"33b79e:";  r[5] = r[21] ^ r[5]
"33b7a2:";  r[16] = input[86]
"33b7a5:";  r[16] = r[16] | r[5]
"33b7a9:";  r[1] = r[1] ^ r[16]
"33b7ad:";  r[6] = r[22] ^ r[6]
"33b7b1:";  r[16] = input[87]
"33b7b4:";  r[16] = r[16] | r[6]
"33b7b8:";  r[2] = r[2] ^ r[16]
"33b7bc:";  r[7] = r[23] ^ r[7]
"33b7c0:";  r[16] = input[88]
"33b7c3:";  r[16] = r[16] | r[7]
"33b7c7:";  r[3] = r[3] ^ r[16]
"33b7cb:";  r[16] = input[93]
"33b7ce:";  r[16] = r[16] | r[12]
"33b7d2:";  r[8] = r[8] ^ r[16]
"33b7d6:";  r[20] = input[89]
"33b7d9:";  r[20] = r[20] & r[8]
"33b7dd:";  r[16] = input[94]
"33b7e0:";  r[16] = r[16] | r[13]
"33b7e4:";  r[9] = r[9] ^ r[16]
"33b7e8:";  r[21] = input[90]
"33b7eb:";  r[21] = r[21] & r[9]
"33b7ef:";  r[16] = input[95]
"33b7f2:";  r[16] = r[16] | r[14]
"33b7f6:";  r[10] = r[10] ^ r[16]
"33b7fa:";  r[22] = input[91]
"33b7fd:";  r[22] = r[22] & r[10]
"33b801:";  r[16] = input[96]
"33b804:";  r[16] = r[16] | r[15]
"33b808:";  r[11] = r[11] ^ r[16]
"33b80c:";  r[23] = input[92]
"33b80f:";  r[23] = r[23] & r[11]
"33b813:";  r[16] = r[20] << 1
"33b817:";  r[24] = r[21] >> 7
"33b81b:";  r[16] = r[24] | r[16]
"33b81f:";  r[17] = r[21] << 1
"33b823:";  r[24] = r[22] >> 7
"33b827:";  # jmp 0x34c64b
"34c64b:";  r[17] = r[24] | r[17]
"34c64f:";  r[18] = r[22] << 1
"34c653:";  r[24] = r[23] >> 7
"34c657:";  r[18] = r[24] | r[18]
"34c65b:";  r[19] = r[23] << 1
"34c65f:";  r[24] = r[20] >> 7
"34c663:";  r[19] = r[24] | r[19]
"34c667:";  r[12] = r[16] ^ r[12]
"34c66b:";  r[13] = r[17] ^ r[13]
"34c66f:";  r[14] = r[18] ^ r[14]
"34c673:";  r[15] = r[19] ^ r[15]
"34c677:";  r[16] = input[97]
"34c67a:";  r[16] = r[0] ^ r[16]
"34c67e:";  r[17] = input[98]
"34c681:";  r[17] = r[1] ^ r[17]
"34c685:";  r[18] = input[99]
"34c688:";  r[18] = r[2] ^ r[18]
"34c68c:";  r[19] = input[100]
"34c68f:";  r[19] = r[3] ^ r[19]
"34c693:";  r[20] = input[101]
"34c696:";  r[20] = r[4] ^ r[20]
"34c69a:";  r[21] = input[102]
"34c69d:";  r[21] = r[5] ^ r[21]
"34c6a1:";  r[22] = input[103]
"34c6a4:";  r[22] = r[6] ^ r[22]
"34c6a8:";  r[23] = input[104]
"34c6ab:";  r[23] = r[7] ^ r[23]
"34c6af:";  r[16] = prog[r[16] + 0x206c70]
"34c6b6:";  r[17] = prog[r[17] + 0x206c70]
"34c6bd:";  r[17] = rol(r[17], 1)
"34c6c1:";  r[18] = prog[r[18] + 0x206c70]
"34c6c8:";  r[18] = rol(r[18], 7)
"34c6cc:";  r[19] = rol(r[19], 1)
"34c6d0:";  r[19] = prog[r[19] + 0x206c70]
"34c6d7:";  r[20] = prog[r[20] + 0x206c70]
"34c6de:";  r[20] = rol(r[20], 1)
"34c6e2:";  # jmp 0x2034e
" 2034e:";  r[21] = prog[r[21] + 0x206c70]
" 20355:";  r[21] = rol(r[21], 7)
" 20359:";  r[22] = rol(r[22], 1)
" 2035d:";  r[22] = prog[r[22] + 0x206c70]
" 20364:";  r[23] = prog[r[23] + 0x206c70]
" 2036b:";  r[16] = r[16] ^ r[21]
" 2036f:";  r[17] = r[17] ^ r[22]
" 20373:";  r[18] = r[18] ^ r[23]
" 20377:";  r[19] = r[19] ^ r[20]
" 2037b:";  r[20] = r[20] ^ r[18]
" 2037f:";  r[21] = r[21] ^ r[19]
" 20383:";  r[22] = r[22] ^ r[16]
" 20387:";  r[23] = r[23] ^ r[17]
" 2038b:";  r[16] = r[16] ^ r[23]
" 2038f:";  r[17] = r[17] ^ r[20]
" 20393:";  r[18] = r[18] ^ r[21]
" 20397:";  r[19] = r[19] ^ r[22]
" 2039b:";  r[20] = r[20] ^ r[19]
" 2039f:";  r[21] = r[21] ^ r[16]
" 203a3:";  r[22] = r[22] ^ r[17]
" 203a7:";  r[23] = r[23] ^ r[18]
" 203ab:";  r[8] = r[20] ^ r[8]
" 203af:";  r[9] = r[21] ^ r[9]
" 203b3:";  r[10] = r[22] ^ r[10]
" 203b7:";  r[11] = r[23] ^ r[11]
" 203bb:";  r[12] = r[16] ^ r[12]
" 203bf:";  r[13] = r[17] ^ r[13]
" 203c3:";  r[14] = r[18] ^ r[14]
" 203c7:";  r[15] = r[19] ^ r[15]
" 203cb:";  r[16] = input[105]
" 203ce:";  r[16] = r[8] ^ r[16]
" 203d2:";  r[17] = input[106]
" 203d5:";  r[17] = r[9] ^ r[17]
" 203d9:";  r[18] = input[107]
" 203dc:";  r[18] = r[10] ^ r[18]
" 203e0:";  r[19] = input[108]
" 203e3:";  r[19] = r[11] ^ r[19]
" 203e7:";  r[20] = input[109]
" 203ea:";  r[20] = r[12] ^ r[20]
" 203ee:";  # jmp 0x30bb7
" 30bb7:";  r[21] = input[110]
" 30bba:";  r[21] = r[13] ^ r[21]
" 30bbe:";  r[22] = input[111]
" 30bc1:";  r[22] = r[14] ^ r[22]
" 30bc5:";  r[23] = input[112]
" 30bc8:";  r[23] = r[15] ^ r[23]
" 30bcc:";  r[16] = prog[r[16] + 0x206c70]
" 30bd3:";  r[17] = prog[r[17] + 0x206c70]
" 30bda:";  r[17] = rol(r[17], 1)
" 30bde:";  r[18] = prog[r[18] + 0x206c70]
" 30be5:";  r[18] = rol(r[18], 7)
" 30be9:";  r[19] = rol(r[19], 1)
" 30bed:";  r[19] = prog[r[19] + 0x206c70]
" 30bf4:";  r[20] = prog[r[20] + 0x206c70]
" 30bfb:";  r[20] = rol(r[20], 1)
" 30bff:";  r[21] = prog[r[21] + 0x206c70]
" 30c06:";  r[21] = rol(r[21], 7)
" 30c0a:";  # jmp 0x33ba2c
"33ba2c:";  r[22] = rol(r[22], 1)
"33ba30:";  r[22] = prog[r[22] + 0x206c70]
"33ba37:";  r[23] = prog[r[23] + 0x206c70]
"33ba3e:";  r[16] = r[16] ^ r[21]
"33ba42:";  r[17] = r[17] ^ r[22]
"33ba46:";  r[18] = r[18] ^ r[23]
"33ba4a:";  r[19] = r[19] ^ r[20]
"33ba4e:";  r[20] = r[20] ^ r[18]
"33ba52:";  r[21] = r[21] ^ r[19]
"33ba56:";  r[22] = r[22] ^ r[16]
"33ba5a:";  r[23] = r[23] ^ r[17]
"33ba5e:";  r[16] = r[16] ^ r[23]
"33ba62:";  # jmp 0x925ce
" 925ce:";  r[17] = r[17] ^ r[20]
" 925d2:";  r[18] = r[18] ^ r[21]
" 925d6:";  r[19] = r[19] ^ r[22]
" 925da:";  r[20] = r[20] ^ r[19]
" 925de:";  r[21] = r[21] ^ r[16]
" 925e2:";  r[22] = r[22] ^ r[17]
" 925e6:";  r[23] = r[23] ^ r[18]
" 925ea:";  r[0] = r[20] ^ r[0]
" 925ee:";  r[1] = r[21] ^ r[1]
" 925f2:";  r[2] = r[22] ^ r[2]
" 925f6:";  r[3] = r[23] ^ r[3]
" 925fa:";  r[4] = r[16] ^ r[4]
" 925fe:";  r[5] = r[17] ^ r[5]
" 92602:";  r[6] = r[18] ^ r[6]
" 92606:";  r[7] = r[19] ^ r[7]
" 9260a:";  r[16] = input[113]
" 9260d:";  r[16] = r[0] ^ r[16]
" 92611:";  r[17] = input[114]
" 92614:";  r[17] = r[1] ^ r[17]
" 92618:";  r[18] = input[115]
" 9261b:";  r[18] = r[2] ^ r[18]
" 9261f:";  r[19] = input[116]
" 92622:";  r[19] = r[3] ^ r[19]
" 92626:";  r[20] = input[117]
" 92629:";  r[20] = r[4] ^ r[20]
" 9262d:";  r[21] = input[118]
" 92630:";  r[21] = r[5] ^ r[21]
" 92634:";  r[22] = input[119]
" 92637:";  r[22] = r[6] ^ r[22]
" 9263b:";  r[23] = input[120]
" 9263e:";  r[23] = r[7] ^ r[23]
" 92642:";  r[16] = prog[r[16] + 0x206c70]
" 92649:";  r[17] = prog[r[17] + 0x206c70]
" 92650:";  r[17] = rol(r[17], 1)
" 92654:";  r[18] = prog[r[18] + 0x206c70]
" 9265b:";  r[18] = rol(r[18], 7)
" 9265f:";  r[19] = rol(r[19], 1)
" 92663:";  r[19] = prog[r[19] + 0x206c70]
" 9266a:";  r[20] = prog[r[20] + 0x206c70]
" 92671:";  r[20] = rol(r[20], 1)
" 92675:";  r[21] = prog[r[21] + 0x206c70]
" 9267c:";  r[21] = rol(r[21], 7)
" 92680:";  r[22] = rol(r[22], 1)
" 92684:";  r[22] = prog[r[22] + 0x206c70]
" 9268b:";  r[23] = prog[r[23] + 0x206c70]
" 92692:";  # jmp 0x237187
"237187:";  r[16] = r[16] ^ r[21]
"23718b:";  r[17] = r[17] ^ r[22]
"23718f:";  r[18] = r[18] ^ r[23]
"237193:";  r[19] = r[19] ^ r[20]
"237197:";  r[20] = r[20] ^ r[18]
"23719b:";  r[21] = r[21] ^ r[19]
"23719f:";  r[22] = r[22] ^ r[16]
"2371a3:";  r[23] = r[23] ^ r[17]
"2371a7:";  r[16] = r[16] ^ r[23]
"2371ab:";  r[17] = r[17] ^ r[20]
"2371af:";  r[18] = r[18] ^ r[21]
"2371b3:";  r[19] = r[19] ^ r[22]
"2371b7:";  r[20] = r[20] ^ r[19]
"2371bb:";  r[21] = r[21] ^ r[16]
"2371bf:";  r[22] = r[22] ^ r[17]
"2371c3:";  r[23] = r[23] ^ r[18]
"2371c7:";  r[8] = r[20] ^ r[8]
"2371cb:";  r[9] = r[21] ^ r[9]
"2371cf:";  r[10] = r[22] ^ r[10]
"2371d3:";  r[11] = r[23] ^ r[11]
"2371d7:";  r[12] = r[16] ^ r[12]
"2371db:";  r[13] = r[17] ^ r[13]
"2371df:";  r[14] = r[18] ^ r[14]
"2371e3:";  r[15] = r[19] ^ r[15]
"2371e7:";  r[16] = input[121]
"2371ea:";  r[16] = r[8] ^ r[16]
"2371ee:";  r[17] = input[122]
"2371f1:";  r[17] = r[9] ^ r[17]
"2371f5:";  r[18] = input[123]
"2371f8:";  r[18] = r[10] ^ r[18]
"2371fc:";  r[19] = input[124]
"2371ff:";  r[19] = r[11] ^ r[19]
"237203:";  r[20] = input[125]
"237206:";  r[20] = r[12] ^ r[20]
"23720a:";  r[21] = input[126]
"23720d:";  r[21] = r[13] ^ r[21]
"237211:";  r[22] = input[127]
"237214:";  r[22] = r[14] ^ r[22]
"237218:";  r[23] = input[128]
"23721b:";  r[23] = r[15] ^ r[23]
"23721f:";  r[16] = prog[r[16] + 0x206c70]
"237226:";  r[17] = prog[r[17] + 0x206c70]
"23722d:";  r[17] = rol(r[17], 1)
"237231:";  r[18] = prog[r[18] + 0x206c70]
"237238:";  # jmp 0x37ccb2
"37ccb2:";  r[18] = rol(r[18], 7)
"37ccb6:";  r[19] = rol(r[19], 1)
"37ccba:";  r[19] = prog[r[19] + 0x206c70]
"37ccc1:";  r[20] = prog[r[20] + 0x206c70]
"37ccc8:";  r[20] = rol(r[20], 1)
"37cccc:";  r[21] = prog[r[21] + 0x206c70]
"37ccd3:";  r[21] = rol(r[21], 7)
"37ccd7:";  r[22] = rol(r[22], 1)
"37ccdb:";  r[22] = prog[r[22] + 0x206c70]
"37cce2:";  r[23] = prog[r[23] + 0x206c70]
"37cce9:";  r[16] = r[16] ^ r[21]
"37cced:";  r[17] = r[17] ^ r[22]
"37ccf1:";  r[18] = r[18] ^ r[23]
"37ccf5:";  r[19] = r[19] ^ r[20]
"37ccf9:";  r[20] = r[20] ^ r[18]
"37ccfd:";  r[21] = r[21] ^ r[19]
"37cd01:";  r[22] = r[22] ^ r[16]
"37cd05:";  r[23] = r[23] ^ r[17]
"37cd09:";  r[16] = r[16] ^ r[23]
"37cd0d:";  r[17] = r[17] ^ r[20]
"37cd11:";  r[18] = r[18] ^ r[21]
"37cd15:";  r[19] = r[19] ^ r[22]
"37cd19:";  r[20] = r[20] ^ r[19]
"37cd1d:";  r[21] = r[21] ^ r[16]
"37cd21:";  r[22] = r[22] ^ r[17]
"37cd25:";  r[23] = r[23] ^ r[18]
"37cd29:";  r[0] = r[20] ^ r[0]
"37cd2d:";  r[1] = r[21] ^ r[1]
"37cd31:";  r[2] = r[22] ^ r[2]
"37cd35:";  r[3] = r[23] ^ r[3]
"37cd39:";  r[4] = r[16] ^ r[4]
"37cd3d:";  r[5] = r[17] ^ r[5]
"37cd41:";  r[6] = r[18] ^ r[6]
"37cd45:";  r[7] = r[19] ^ r[7]
"37cd49:";  r[16] = input[129]
"37cd4c:";  r[16] = r[0] ^ r[16]
"37cd50:";  r[17] = input[130]
"37cd53:";  # jmp 0x31a767
"31a767:";  r[17] = r[1] ^ r[17]
"31a76b:";  r[18] = input[131]
"31a76e:";  r[18] = r[2] ^ r[18]
"31a772:";  r[19] = input[132]
"31a775:";  r[19] = r[3] ^ r[19]
"31a779:";  r[20] = input[133]
"31a77c:";  r[20] = r[4] ^ r[20]
"31a780:";  r[21] = input[134]
"31a783:";  r[21] = r[5] ^ r[21]
"31a787:";  r[22] = input[135]
"31a78a:";  r[22] = r[6] ^ r[22]
"31a78e:";  r[23] = input[136]
"31a791:";  r[23] = r[7] ^ r[23]
"31a795:";  r[16] = prog[r[16] + 0x206c70]
"31a79c:";  r[17] = prog[r[17] + 0x206c70]
"31a7a3:";  r[17] = rol(r[17], 1)
"31a7a7:";  r[18] = prog[r[18] + 0x206c70]
"31a7ae:";  r[18] = rol(r[18], 7)
"31a7b2:";  r[19] = rol(r[19], 1)
"31a7b6:";  r[19] = prog[r[19] + 0x206c70]
"31a7bd:";  r[20] = prog[r[20] + 0x206c70]
"31a7c4:";  r[20] = rol(r[20], 1)
"31a7c8:";  r[21] = prog[r[21] + 0x206c70]
"31a7cf:";  r[21] = rol(r[21], 7)
"31a7d3:";  r[22] = rol(r[22], 1)
"31a7d7:";  r[22] = prog[r[22] + 0x206c70]
"31a7de:";  r[23] = prog[r[23] + 0x206c70]
"31a7e5:";  r[16] = r[16] ^ r[21]
"31a7e9:";  r[17] = r[17] ^ r[22]
"31a7ed:";  r[18] = r[18] ^ r[23]
"31a7f1:";  r[19] = r[19] ^ r[20]
"31a7f5:";  r[20] = r[20] ^ r[18]
"31a7f9:";  r[21] = r[21] ^ r[19]
"31a7fd:";  r[22] = r[22] ^ r[16]
"31a801:";  r[23] = r[23] ^ r[17]
"31a805:";  r[16] = r[16] ^ r[23]
"31a809:";  r[17] = r[17] ^ r[20]
"31a80d:";  r[18] = r[18] ^ r[21]
"31a811:";  r[19] = r[19] ^ r[22]
"31a815:";  r[20] = r[20] ^ r[19]
"31a819:";  r[21] = r[21] ^ r[16]
"31a81d:";  r[22] = r[22] ^ r[17]
"31a821:";  r[23] = r[23] ^ r[18]
"31a825:";  # jmp 0x203f3
" 203f3:";  r[8] = r[20] ^ r[8]
" 203f7:";  r[9] = r[21] ^ r[9]
" 203fb:";  r[10] = r[22] ^ r[10]
" 203ff:";  r[11] = r[23] ^ r[11]
" 20403:";  r[12] = r[16] ^ r[12]
" 20407:";  r[13] = r[17] ^ r[13]
" 2040b:";  r[14] = r[18] ^ r[14]
" 2040f:";  r[15] = r[19] ^ r[15]
" 20413:";  r[16] = input[137]
" 20416:";  r[16] = r[8] ^ r[16]
" 2041a:";  r[17] = input[138]
" 2041d:";  r[17] = r[9] ^ r[17]
" 20421:";  r[18] = input[139]
" 20424:";  r[18] = r[10] ^ r[18]
" 20428:";  r[19] = input[140]
" 2042b:";  r[19] = r[11] ^ r[19]
" 2042f:";  r[20] = input[141]
" 20432:";  r[20] = r[12] ^ r[20]
" 20436:";  r[21] = input[142]
" 20439:";  r[21] = r[13] ^ r[21]
" 2043d:";  r[22] = input[143]
" 20440:";  r[22] = r[14] ^ r[22]
" 20444:";  r[23] = input[144]
" 20447:";  r[23] = r[15] ^ r[23]
" 2044b:";  r[16] = prog[r[16] + 0x206c70]
" 20452:";  r[17] = prog[r[17] + 0x206c70]
" 20459:";  r[17] = rol(r[17], 1)
" 2045d:";  # jmp 0x37d93a
"37d93a:";  r[18] = prog[r[18] + 0x206c70]
"37d941:";  r[18] = rol(r[18], 7)
"37d945:";  r[19] = rol(r[19], 1)
"37d949:";  r[19] = prog[r[19] + 0x206c70]
"37d950:";  r[20] = prog[r[20] + 0x206c70]
"37d957:";  r[20] = rol(r[20], 1)
"37d95b:";  r[21] = prog[r[21] + 0x206c70]
"37d962:";  r[21] = rol(r[21], 7)
"37d966:";  r[22] = rol(r[22], 1)
"37d96a:";  r[22] = prog[r[22] + 0x206c70]
"37d971:";  r[23] = prog[r[23] + 0x206c70]
"37d978:";  r[16] = r[16] ^ r[21]
"37d97c:";  r[17] = r[17] ^ r[22]
"37d980:";  r[18] = r[18] ^ r[23]
"37d984:";  r[19] = r[19] ^ r[20]
"37d988:";  # jmp 0xd3a7f
" d3a7f:";  r[20] = r[20] ^ r[18]
" d3a83:";  r[21] = r[21] ^ r[19]
" d3a87:";  r[22] = r[22] ^ r[16]
" d3a8b:";  r[23] = r[23] ^ r[17]
" d3a8f:";  r[16] = r[16] ^ r[23]
" d3a93:";  r[17] = r[17] ^ r[20]
" d3a97:";  r[18] = r[18] ^ r[21]
" d3a9b:";  r[19] = r[19] ^ r[22]
" d3a9f:";  r[20] = r[20] ^ r[19]
" d3aa3:";  r[21] = r[21] ^ r[16]
" d3aa7:";  # jmp 0x33b52c
"33b52c:";  r[22] = r[22] ^ r[17]
"33b530:";  r[23] = r[23] ^ r[18]
"33b534:";  r[0] = r[20] ^ r[0]
"33b538:";  r[1] = r[21] ^ r[1]
"33b53c:";  r[2] = r[22] ^ r[2]
"33b540:";  r[3] = r[23] ^ r[3]
"33b544:";  r[4] = r[16] ^ r[4]
"33b548:";  r[5] = r[17] ^ r[5]
"33b54c:";  r[6] = r[18] ^ r[6]
"33b550:";  r[7] = r[19] ^ r[7]
"33b554:";  r[16] = input[145]
"33b557:";  r[16] = r[16] & r[0]
"33b55b:";  r[17] = input[146]
"33b55e:";  r[17] = r[17] & r[1]
"33b562:";  r[18] = input[147]
"33b565:";  r[18] = r[18] & r[2]
"33b569:";  r[19] = input[148]
"33b56c:";  r[19] = r[19] & r[3]
"33b570:";  r[20] = r[16] << 1
"33b574:";  r[24] = r[17] >> 7
"33b578:";  r[20] = r[24] | r[20]
"33b57c:";  r[21] = r[17] << 1
"33b580:";  r[24] = r[18] >> 7
"33b584:";  r[21] = r[24] | r[21]
"33b588:";  r[22] = r[18] << 1
"33b58c:";  r[24] = r[19] >> 7
"33b590:";  r[22] = r[24] | r[22]
"33b594:";  r[23] = r[19] << 1
"33b598:";  r[24] = r[16] >> 7
"33b59c:";  r[23] = r[24] | r[23]
"33b5a0:";  r[4] = r[20] ^ r[4]
"33b5a4:";  r[16] = input[149]
"33b5a7:";  r[16] = r[16] | r[4]
"33b5ab:";  r[0] = r[0] ^ r[16]
"33b5af:";  r[5] = r[21] ^ r[5]
"33b5b3:";  r[16] = input[150]
"33b5b6:";  r[16] = r[16] | r[5]
"33b5ba:";  r[1] = r[1] ^ r[16]
"33b5be:";  r[6] = r[22] ^ r[6]
"33b5c2:";  r[16] = input[151]
"33b5c5:";  r[16] = r[16] | r[6]
"33b5c9:";  r[2] = r[2] ^ r[16]
"33b5cd:";  r[7] = r[23] ^ r[7]
"33b5d1:";  r[16] = input[152]
"33b5d4:";  r[16] = r[16] | r[7]
"33b5d8:";  r[3] = r[3] ^ r[16]
"33b5dc:";  r[16] = input[157]
"33b5df:";  # jmp 0x37d8e8
"37d8e8:";  r[16] = r[16] | r[12]
"37d8ec:";  r[8] = r[8] ^ r[16]
"37d8f0:";  r[20] = input[153]
"37d8f3:";  r[20] = r[20] & r[8]
"37d8f7:";  r[16] = input[158]
"37d8fa:";  r[16] = r[16] | r[13]
"37d8fe:";  r[9] = r[9] ^ r[16]
"37d902:";  r[21] = input[154]
"37d905:";  r[21] = r[21] & r[9]
"37d909:";  r[16] = input[159]
"37d90c:";  r[16] = r[16] | r[14]
"37d910:";  r[10] = r[10] ^ r[16]
"37d914:";  r[22] = input[155]
"37d917:";  r[22] = r[22] & r[10]
"37d91b:";  r[16] = input[160]
"37d91e:";  r[16] = r[16] | r[15]
"37d922:";  r[11] = r[11] ^ r[16]
"37d926:";  r[23] = input[156]
"37d929:";  r[23] = r[23] & r[11]
"37d92d:";  r[16] = r[20] << 1
"37d931:";  r[24] = r[21] >> 7
"37d935:";  # jmp 0x92701
" 92701:";  r[16] = r[24] | r[16]
" 92705:";  r[17] = r[21] << 1
" 92709:";  r[24] = r[22] >> 7
" 9270d:";  r[17] = r[24] | r[17]
" 92711:";  r[18] = r[22] << 1
" 92715:";  r[24] = r[23] >> 7
" 92719:";  r[18] = r[24] | r[18]
" 9271d:";  r[19] = r[23] << 1
" 92721:";  r[24] = r[20] >> 7
" 92725:";  r[19] = r[24] | r[19]
" 92729:";  r[12] = r[16] ^ r[12]
" 9272d:";  r[13] = r[17] ^ r[13]
" 92731:";  r[14] = r[18] ^ r[14]
" 92735:";  r[15] = r[19] ^ r[15]
" 92739:";  r[16] = input[161]
" 9273c:";  r[16] = r[0] ^ r[16]
" 92740:";  r[17] = input[162]
" 92743:";  r[17] = r[1] ^ r[17]
" 92747:";  r[18] = input[163]
" 9274a:";  r[18] = r[2] ^ r[18]
" 9274e:";  r[19] = input[164]
" 92751:";  r[19] = r[3] ^ r[19]
" 92755:";  r[20] = input[165]
" 92758:";  r[20] = r[4] ^ r[20]
" 9275c:";  r[21] = input[166]
" 9275f:";  r[21] = r[5] ^ r[21]
" 92763:";  r[22] = input[167]
" 92766:";  r[22] = r[6] ^ r[22]
" 9276a:";  r[23] = input[168]
" 9276d:";  r[23] = r[7] ^ r[23]
" 92771:";  r[16] = prog[r[16] + 0x206c70]
" 92778:";  r[17] = prog[r[17] + 0x206c70]
" 9277f:";  r[17] = rol(r[17], 1)
" 92783:";  r[18] = prog[r[18] + 0x206c70]
" 9278a:";  # jmp 0x92089
" 92089:";  r[18] = rol(r[18], 7)
" 9208d:";  r[19] = rol(r[19], 1)
" 92091:";  r[19] = prog[r[19] + 0x206c70]
" 92098:";  r[20] = prog[r[20] + 0x206c70]
" 9209f:";  r[20] = rol(r[20], 1)
" 920a3:";  r[21] = prog[r[21] + 0x206c70]
" 920aa:";  r[21] = rol(r[21], 7)
" 920ae:";  r[22] = rol(r[22], 1)
" 920b2:";  r[22] = prog[r[22] + 0x206c70]
" 920b9:";  r[23] = prog[r[23] + 0x206c70]
" 920c0:";  r[16] = r[16] ^ r[21]
" 920c4:";  r[17] = r[17] ^ r[22]
" 920c8:";  r[18] = r[18] ^ r[23]
" 920cc:";  r[19] = r[19] ^ r[20]
" 920d0:";  r[20] = r[20] ^ r[18]
" 920d4:";  r[21] = r[21] ^ r[19]
" 920d8:";  r[22] = r[22] ^ r[16]
" 920dc:";  r[23] = r[23] ^ r[17]
" 920e0:";  r[16] = r[16] ^ r[23]
" 920e4:";  r[17] = r[17] ^ r[20]
" 920e8:";  r[18] = r[18] ^ r[21]
" 920ec:";  r[19] = r[19] ^ r[22]
" 920f0:";  r[20] = r[20] ^ r[19]
" 920f4:";  r[21] = r[21] ^ r[16]
" 920f8:";  r[22] = r[22] ^ r[17]
" 920fc:";  r[23] = r[23] ^ r[18]
" 92100:";  r[8] = r[20] ^ r[8]
" 92104:";  r[9] = r[21] ^ r[9]
" 92108:";  r[10] = r[22] ^ r[10]
" 9210c:";  r[11] = r[23] ^ r[11]
" 92110:";  r[12] = r[16] ^ r[12]
" 92114:";  # jmp 0x34bc61
"34bc61:";  r[13] = r[17] ^ r[13]
"34bc65:";  r[14] = r[18] ^ r[14]
"34bc69:";  r[15] = r[19] ^ r[15]
"34bc6d:";  r[16] = input[169]
"34bc70:";  r[16] = r[8] ^ r[16]
"34bc74:";  r[17] = input[170]
"34bc77:";  r[17] = r[9] ^ r[17]
"34bc7b:";  r[18] = input[171]
"34bc7e:";  r[18] = r[10] ^ r[18]
"34bc82:";  r[19] = input[172]
"34bc85:";  r[19] = r[11] ^ r[19]
"34bc89:";  r[20] = input[173]
"34bc8c:";  r[20] = r[12] ^ r[20]
"34bc90:";  r[21] = input[174]
"34bc93:";  r[21] = r[13] ^ r[21]
"34bc97:";  r[22] = input[175]
"34bc9a:";  # jmp 0x288bca
"288bca:";  r[22] = r[14] ^ r[22]
"288bce:";  r[23] = input[176]
"288bd1:";  r[23] = r[15] ^ r[23]
"288bd5:";  r[16] = prog[r[16] + 0x206c70]
"288bdc:";  r[17] = prog[r[17] + 0x206c70]
"288be3:";  r[17] = rol(r[17], 1)
"288be7:";  r[18] = prog[r[18] + 0x206c70]
"288bee:";  r[18] = rol(r[18], 7)
"288bf2:";  r[19] = rol(r[19], 1)
"288bf6:";  r[19] = prog[r[19] + 0x206c70]
"288bfd:";  r[20] = prog[r[20] + 0x206c70]
"288c04:";  r[20] = rol(r[20], 1)
"288c08:";  r[21] = prog[r[21] + 0x206c70]
"288c0f:";  r[21] = rol(r[21], 7)
"288c13:";  r[22] = rol(r[22], 1)
"288c17:";  r[22] = prog[r[22] + 0x206c70]
"288c1e:";  r[23] = prog[r[23] + 0x206c70]
"288c25:";  r[16] = r[16] ^ r[21]
"288c29:";  r[17] = r[17] ^ r[22]
"288c2d:";  r[18] = r[18] ^ r[23]
"288c31:";  r[19] = r[19] ^ r[20]
"288c35:";  r[20] = r[20] ^ r[18]
"288c39:";  r[21] = r[21] ^ r[19]
"288c3d:";  r[22] = r[22] ^ r[16]
"288c41:";  r[23] = r[23] ^ r[17]
"288c45:";  r[16] = r[16] ^ r[23]
"288c49:";  r[17] = r[17] ^ r[20]
"288c4d:";  r[18] = r[18] ^ r[21]
"288c51:";  r[19] = r[19] ^ r[22]
"288c55:";  r[20] = r[20] ^ r[19]
"288c59:";  r[21] = r[21] ^ r[16]
"288c5d:";  r[22] = r[22] ^ r[17]
"288c61:";  r[23] = r[23] ^ r[18]
"288c65:";  r[0] = r[20] ^ r[0]
"288c69:";  r[1] = r[21] ^ r[1]
"288c6d:";  r[2] = r[22] ^ r[2]
"288c71:";  r[3] = r[23] ^ r[3]
"288c75:";  r[4] = r[16] ^ r[4]
"288c79:";  r[5] = r[17] ^ r[5]
"288c7d:";  r[6] = r[18] ^ r[6]
"288c81:";  r[7] = r[19] ^ r[7]
"288c85:";  r[16] = input[177]
"288c88:";  r[16] = r[0] ^ r[16]
"288c8c:";  # jmp 0x814c5
" 814c5:";  r[17] = input[178]
" 814c8:";  r[17] = r[1] ^ r[17]
" 814cc:";  r[18] = input[179]
" 814cf:";  r[18] = r[2] ^ r[18]
" 814d3:";  r[19] = input[180]
" 814d6:";  r[19] = r[3] ^ r[19]
" 814da:";  r[20] = input[181]
" 814dd:";  r[20] = r[4] ^ r[20]
" 814e1:";  r[21] = input[182]
" 814e4:";  r[21] = r[5] ^ r[21]
" 814e8:";  r[22] = input[183]
" 814eb:";  r[22] = r[6] ^ r[22]
" 814ef:";  r[23] = input[184]
" 814f2:";  r[23] = r[7] ^ r[23]
" 814f6:";  r[16] = prog[r[16] + 0x206c70]
" 814fd:";  r[17] = prog[r[17] + 0x206c70]
" 81504:";  r[17] = rol(r[17], 1)
" 81508:";  r[18] = prog[r[18] + 0x206c70]
" 8150f:";  r[18] = rol(r[18], 7)
" 81513:";  r[19] = rol(r[19], 1)
" 81517:";  r[19] = prog[r[19] + 0x206c70]
" 8151e:";  r[20] = prog[r[20] + 0x206c70]
" 81525:";  r[20] = rol(r[20], 1)
" 81529:";  r[21] = prog[r[21] + 0x206c70]
" 81530:";  # jmp 0x298c91
"298c91:";  r[21] = rol(r[21], 7)
"298c95:";  r[22] = rol(r[22], 1)
"298c99:";  r[22] = prog[r[22] + 0x206c70]
"298ca0:";  r[23] = prog[r[23] + 0x206c70]
"298ca7:";  r[16] = r[16] ^ r[21]
"298cab:";  r[17] = r[17] ^ r[22]
"298caf:";  r[18] = r[18] ^ r[23]
"298cb3:";  r[19] = r[19] ^ r[20]
"298cb7:";  r[20] = r[20] ^ r[18]
"298cbb:";  r[21] = r[21] ^ r[19]
"298cbf:";  r[22] = r[22] ^ r[16]
"298cc3:";  r[23] = r[23] ^ r[17]
"298cc7:";  r[16] = r[16] ^ r[23]
"298ccb:";  r[17] = r[17] ^ r[20]
"298ccf:";  r[18] = r[18] ^ r[21]
"298cd3:";  r[19] = r[19] ^ r[22]
"298cd7:";  r[20] = r[20] ^ r[19]
"298cdb:";  r[21] = r[21] ^ r[16]
"298cdf:";  r[22] = r[22] ^ r[17]
"298ce3:";  r[23] = r[23] ^ r[18]
"298ce7:";  r[8] = r[20] ^ r[8]
"298ceb:";  r[9] = r[21] ^ r[9]
"298cef:";  r[10] = r[22] ^ r[10]
"298cf3:";  r[11] = r[23] ^ r[11]
"298cf7:";  r[12] = r[16] ^ r[12]
"298cfb:";  # jmp 0x34c0cf
"34c0cf:";  r[13] = r[17] ^ r[13]
"34c0d3:";  r[14] = r[18] ^ r[14]
"34c0d7:";  r[15] = r[19] ^ r[15]
"34c0db:";  r[16] = input[185]
"34c0de:";  r[16] = r[8] ^ r[16]
"34c0e2:";  r[17] = input[186]
"34c0e5:";  r[17] = r[9] ^ r[17]
"34c0e9:";  r[18] = input[187]
"34c0ec:";  r[18] = r[10] ^ r[18]
"34c0f0:";  r[19] = input[188]
"34c0f3:";  r[19] = r[11] ^ r[19]
"34c0f7:";  r[20] = input[189]
"34c0fa:";  r[20] = r[12] ^ r[20]
"34c0fe:";  r[21] = input[190]
"34c101:";  r[21] = r[13] ^ r[21]
"34c105:";  r[22] = input[191]
"34c108:";  r[22] = r[14] ^ r[22]
"34c10c:";  r[23] = input[192]
"34c10f:";  r[23] = r[15] ^ r[23]
"34c113:";  r[16] = prog[r[16] + 0x206c70]
"34c11a:";  # jmp 0x30a2eb
"30a2eb:";  r[17] = prog[r[17] + 0x206c70]
"30a2f2:";  r[17] = rol(r[17], 1)
"30a2f6:";  r[18] = prog[r[18] + 0x206c70]
"30a2fd:";  r[18] = rol(r[18], 7)
"30a301:";  r[19] = rol(r[19], 1)
"30a305:";  r[19] = prog[r[19] + 0x206c70]
"30a30c:";  r[20] = prog[r[20] + 0x206c70]
"30a313:";  r[20] = rol(r[20], 1)
"30a317:";  r[21] = prog[r[21] + 0x206c70]
"30a31e:";  r[21] = rol(r[21], 7)
"30a322:";  r[22] = rol(r[22], 1)
"30a326:";  r[22] = prog[r[22] + 0x206c70]
"30a32d:";  r[23] = prog[r[23] + 0x206c70]
"30a334:";  r[16] = r[16] ^ r[21]
"30a338:";  r[17] = r[17] ^ r[22]
"30a33c:";  r[18] = r[18] ^ r[23]
"30a340:";  r[19] = r[19] ^ r[20]
"30a344:";  r[20] = r[20] ^ r[18]
"30a348:";  r[21] = r[21] ^ r[19]
"30a34c:";  r[22] = r[22] ^ r[16]
"30a350:";  r[23] = r[23] ^ r[17]
"30a354:";  r[16] = r[16] ^ r[23]
"30a358:";  r[17] = r[17] ^ r[20]
"30a35c:";  r[18] = r[18] ^ r[21]
"30a360:";  r[19] = r[19] ^ r[22]
"30a364:";  r[20] = r[20] ^ r[19]
"30a368:";  # jmp 0x206d70
"206d70:";  r[21] = r[21] ^ r[16]
"206d74:";  r[22] = r[22] ^ r[17]
"206d78:";  r[23] = r[23] ^ r[18]
"206d7c:";  r[0] = r[20] ^ r[0]
"206d80:";  r[1] = r[21] ^ r[1]
"206d84:";  r[2] = r[22] ^ r[2]
"206d88:";  r[3] = r[23] ^ r[3]
"206d8c:";  r[4] = r[16] ^ r[4]
"206d90:";  r[5] = r[17] ^ r[5]
"206d94:";  r[6] = r[18] ^ r[6]
"206d98:";  r[7] = r[19] ^ r[7]
"206d9c:";  r[16] = input[193]
"206d9f:";  r[16] = r[0] ^ r[16]
"206da3:";  r[17] = input[194]
"206da6:";  r[17] = r[1] ^ r[17]
"206daa:";  r[18] = input[195]
"206dad:";  r[18] = r[2] ^ r[18]
"206db1:";  r[19] = input[196]
"206db4:";  r[19] = r[3] ^ r[19]
"206db8:";  r[20] = input[197]
"206dbb:";  r[20] = r[4] ^ r[20]
"206dbf:";  r[21] = input[198]
"206dc2:";  r[21] = r[5] ^ r[21]
"206dc6:";  r[22] = input[199]
"206dc9:";  r[22] = r[6] ^ r[22]
"206dcd:";  r[23] = input[200]
"206dd0:";  r[23] = r[7] ^ r[23]
"206dd4:";  r[16] = prog[r[16] + 0x206c70]
"206ddb:";  r[17] = prog[r[17] + 0x206c70]
"206de2:";  r[17] = rol(r[17], 1)
"206de6:";  r[18] = prog[r[18] + 0x206c70]
"206ded:";  # jmp 0x23723d
"23723d:";  r[18] = rol(r[18], 7)
"237241:";  r[19] = rol(r[19], 1)
"237245:";  r[19] = prog[r[19] + 0x206c70]
"23724c:";  r[20] = prog[r[20] + 0x206c70]
"237253:";  r[20] = rol(r[20], 1)
"237257:";  r[21] = prog[r[21] + 0x206c70]
"23725e:";  r[21] = rol(r[21], 7)
"237262:";  r[22] = rol(r[22], 1)
"237266:";  r[22] = prog[r[22] + 0x206c70]
"23726d:";  r[23] = prog[r[23] + 0x206c70]
"237274:";  r[16] = r[16] ^ r[21]
"237278:";  r[17] = r[17] ^ r[22]
"23727c:";  r[18] = r[18] ^ r[23]
"237280:";  r[19] = r[19] ^ r[20]
"237284:";  r[20] = r[20] ^ r[18]
"237288:";  r[21] = r[21] ^ r[19]
"23728c:";  r[22] = r[22] ^ r[16]
"237290:";  r[23] = r[23] ^ r[17]
"237294:";  r[16] = r[16] ^ r[23]
"237298:";  r[17] = r[17] ^ r[20]
"23729c:";  r[18] = r[18] ^ r[21]
"2372a0:";  r[19] = r[19] ^ r[22]
"2372a4:";  r[20] = r[20] ^ r[19]
"2372a8:";  r[21] = r[21] ^ r[16]
"2372ac:";  r[22] = r[22] ^ r[17]
"2372b0:";  r[23] = r[23] ^ r[18]
"2372b4:";  r[8] = r[20] ^ r[8]
"2372b8:";  r[9] = r[21] ^ r[9]
"2372bc:";  r[10] = r[22] ^ r[10]
"2372c0:";  r[11] = r[23] ^ r[11]
"2372c4:";  r[12] = r[16] ^ r[12]
"2372c8:";  r[13] = r[17] ^ r[13]
"2372cc:";  # jmp 0x92419
" 92419:";  r[14] = r[18] ^ r[14]
" 9241d:";  r[15] = r[19] ^ r[15]
" 92421:";  r[16] = input[201]
" 92424:";  r[16] = r[8] ^ r[16]
" 92428:";  r[17] = input[202]
" 9242b:";  r[17] = r[9] ^ r[17]
" 9242f:";  r[18] = input[203]
" 92432:";  r[18] = r[10] ^ r[18]
" 92436:";  r[19] = input[204]
" 92439:";  r[19] = r[11] ^ r[19]
" 9243d:";  r[20] = input[205]
" 92440:";  r[20] = r[12] ^ r[20]
" 92444:";  r[21] = input[206]
" 92447:";  r[21] = r[13] ^ r[21]
" 9244b:";  r[22] = input[207]
" 9244e:";  r[22] = r[14] ^ r[22]
" 92452:";  r[23] = input[208]
" 92455:";  r[23] = r[15] ^ r[23]
" 92459:";  r[16] = prog[r[16] + 0x206c70]
" 92460:";  r[17] = prog[r[17] + 0x206c70]
" 92467:";  r[17] = rol(r[17], 1)
" 9246b:";  r[18] = prog[r[18] + 0x206c70]
" 92472:";  r[18] = rol(r[18], 7)
" 92476:";  r[19] = rol(r[19], 1)
" 9247a:";  r[19] = prog[r[19] + 0x206c70]
" 92481:";  r[20] = prog[r[20] + 0x206c70]
" 92488:";  r[20] = rol(r[20], 1)
" 9248c:";  r[21] = prog[r[21] + 0x206c70]
" 92493:";  r[21] = rol(r[21], 7)
" 92497:";  r[22] = rol(r[22], 1)
" 9249b:";  r[22] = prog[r[22] + 0x206c70]
" 924a2:";  r[23] = prog[r[23] + 0x206c70]
" 924a9:";  r[16] = r[16] ^ r[21]
" 924ad:";  r[17] = r[17] ^ r[22]
" 924b1:";  r[18] = r[18] ^ r[23]
" 924b5:";  r[19] = r[19] ^ r[20]
" 924b9:";  r[20] = r[20] ^ r[18]
" 924bd:";  r[21] = r[21] ^ r[19]
" 924c1:";  r[22] = r[22] ^ r[16]
" 924c5:";  r[23] = r[23] ^ r[17]
" 924c9:";  # jmp 0x817ff
" 817ff:";  r[16] = r[16] ^ r[23]
" 81803:";  r[17] = r[17] ^ r[20]
" 81807:";  r[18] = r[18] ^ r[21]
" 8180b:";  r[19] = r[19] ^ r[22]
" 8180f:";  r[20] = r[20] ^ r[19]
" 81813:";  r[21] = r[21] ^ r[16]
" 81817:";  r[22] = r[22] ^ r[17]
" 8181b:";  r[23] = r[23] ^ r[18]
" 8181f:";  r[0] = r[20] ^ r[0]
" 81823:";  # jmp 0x27804e
"27804e:";  r[1] = r[21] ^ r[1]
"278052:";  r[2] = r[22] ^ r[2]
"278056:";  r[3] = r[23] ^ r[3]
"27805a:";  r[4] = r[16] ^ r[4]
"27805e:";  r[5] = r[17] ^ r[5]
"278062:";  r[6] = r[18] ^ r[6]
"278066:";  r[7] = r[19] ^ r[7]
"27806a:";  r[16] = input[209]
"27806d:";  r[8] = r[8] ^ r[16]
"278071:";  # jmp 0x1248cc
"1248cc:";  output[0] = r[8]
"1248cf:";  r[16] = input[210]
"1248d2:";  r[9] = r[9] ^ r[16]
"1248d6:";  output[1] = r[9]
"1248d9:";  r[16] = input[211]
"1248dc:";  r[10] = r[10] ^ r[16]
"1248e0:";  output[2] = r[10]
"1248e3:";  r[16] = input[212]
"1248e6:";  r[11] = r[11] ^ r[16]
"1248ea:";  output[3] = r[11]
"1248ed:";  r[16] = input[213]
"1248f0:";  r[12] = r[12] ^ r[16]
"1248f4:";  output[4] = r[12]
"1248f7:";  r[16] = input[214]
"1248fa:";  r[13] = r[13] ^ r[16]
"1248fe:";  output[5] = r[13]
"124901:";  r[16] = input[215]
"124904:";  r[14] = r[14] ^ r[16]
"124908:";  output[6] = r[14]
"12490b:";  r[16] = input[216]
"12490e:";  # jmp 0x1b6439
"1b6439:";  r[15] = r[15] ^ r[16]
"1b643d:";  output[7] = r[15]
"1b6440:";  r[16] = input[217]
"1b6443:";  r[0] = r[0] ^ r[16]
"1b6447:";  output[8] = r[0]
"1b644a:";  r[16] = input[218]
"1b644d:";  r[1] = r[1] ^ r[16]
"1b6451:";  output[9] = r[1]
"1b6454:";  r[16] = input[219]
"1b6457:";  r[2] = r[2] ^ r[16]
"1b645b:";  output[10] = r[2]
"1b645e:";  r[16] = input[220]
"1b6461:";  r[3] = r[3] ^ r[16]
"1b6465:";  output[11] = r[3]
"1b6468:";  r[16] = input[221]
"1b646b:";  r[4] = r[4] ^ r[16]
"1b646f:";  output[12] = r[4]
"1b6472:";  r[16] = input[222]
"1b6475:";  r[5] = r[5] ^ r[16]
"1b6479:";  output[13] = r[5]
"1b647c:";  r[16] = input[223]
"1b647f:";  r[6] = r[6] ^ r[16]
"1b6483:";  output[14] = r[6]
"1b6486:";  r[16] = input[224]
"1b6489:";  r[7] = r[7] ^ r[16]
"1b648d:";  output[15] = r[7]
"1b6490:";  ret(0)
" 91d1d:";  r[1] = 5
" 91d20:";  # jne r0, r1, 0xd3bbe
" 91d27:";  # jmp 0x34bc9f
"34bc9f:";  r[0] = input[1]
"34bca2:";  r[16] = input[209]
"34bca5:";  r[0] = r[0] ^ r[16]
"34bca9:";  r[1] = input[2]
"34bcac:";  r[16] = input[210]
"34bcaf:";  r[1] = r[1] ^ r[16]
"34bcb3:";  r[2] = input[3]
"34bcb6:";  r[16] = input[211]
"34bcb9:";  r[2] = r[2] ^ r[16]
"34bcbd:";  r[3] = input[4]
"34bcc0:";  r[16] = input[212]
"34bcc3:";  r[3] = r[3] ^ r[16]
"34bcc7:";  r[4] = input[5]
"34bcca:";  # jmp 0x23714d
"23714d:";  r[16] = input[213]
"237150:";  r[4] = r[4] ^ r[16]
"237154:";  r[5] = input[6]
"237157:";  r[16] = input[214]
"23715a:";  r[5] = r[5] ^ r[16]
"23715e:";  r[6] = input[7]
"237161:";  r[16] = input[215]
"237164:";  r[6] = r[6] ^ r[16]
"237168:";  r[7] = input[8]
"23716b:";  r[16] = input[216]
"23716e:";  r[7] = r[7] ^ r[16]
"237172:";  r[8] = input[9]
"237175:";  r[16] = input[217]
"237178:";  r[8] = r[8] ^ r[16]
"23717c:";  r[9] = input[10]
"23717f:";  r[16] = input[218]
"237182:";  # jmp 0x226f7f
"226f7f:";  r[9] = r[9] ^ r[16]
"226f83:";  r[10] = input[11]
"226f86:";  r[16] = input[219]
"226f89:";  r[10] = r[10] ^ r[16]
"226f8d:";  r[11] = input[12]
"226f90:";  r[16] = input[220]
"226f93:";  r[11] = r[11] ^ r[16]
"226f97:";  r[12] = input[13]
"226f9a:";  r[16] = input[221]
"226f9d:";  r[12] = r[12] ^ r[16]
"226fa1:";  r[13] = input[14]
"226fa4:";  r[16] = input[222]
"226fa7:";  r[13] = r[13] ^ r[16]
"226fab:";  r[14] = input[15]
"226fae:";  r[16] = input[223]
"226fb1:";  r[14] = r[14] ^ r[16]
"226fb5:";  r[15] = input[16]
"226fb8:";  r[16] = input[224]
"226fbb:";  r[15] = r[15] ^ r[16]
"226fbf:";  r[16] = input[201]
"226fc2:";  r[16] = r[0] ^ r[16]
"226fc6:";  r[17] = input[202]
"226fc9:";  r[17] = r[1] ^ r[17]
"226fcd:";  r[18] = input[203]
"226fd0:";  r[18] = r[2] ^ r[18]
"226fd4:";  r[19] = input[204]
"226fd7:";  r[19] = r[3] ^ r[19]
"226fdb:";  r[20] = input[205]
"226fde:";  r[20] = r[4] ^ r[20]
"226fe2:";  r[21] = input[206]
"226fe5:";  r[21] = r[5] ^ r[21]
"226fe9:";  r[22] = input[207]
"226fec:";  r[22] = r[6] ^ r[22]
"226ff0:";  r[23] = input[208]
"226ff3:";  r[23] = r[7] ^ r[23]
"226ff7:";  r[16] = prog[r[16] + 0x206c70]
"226ffe:";  r[17] = prog[r[17] + 0x206c70]
"227005:";  r[17] = rol(r[17], 1)
"227009:";  r[18] = prog[r[18] + 0x206c70]
"227010:";  r[18] = rol(r[18], 7)
"227014:";  r[19] = rol(r[19], 1)
"227018:";  r[19] = prog[r[19] + 0x206c70]
"22701f:";  r[20] = prog[r[20] + 0x206c70]
"227026:";  r[20] = rol(r[20], 1)
"22702a:";  r[21] = prog[r[21] + 0x206c70]
"227031:";  # jmp 0x24775e
"24775e:";  r[21] = rol(r[21], 7)
"247762:";  r[22] = rol(r[22], 1)
"247766:";  r[22] = prog[r[22] + 0x206c70]
"24776d:";  r[23] = prog[r[23] + 0x206c70]
"247774:";  r[16] = r[16] ^ r[21]
"247778:";  r[17] = r[17] ^ r[22]
"24777c:";  r[18] = r[18] ^ r[23]
"247780:";  r[19] = r[19] ^ r[20]
"247784:";  r[20] = r[20] ^ r[18]
"247788:";  r[21] = r[21] ^ r[19]
"24778c:";  r[22] = r[22] ^ r[16]
"247790:";  r[23] = r[23] ^ r[17]
"247794:";  r[16] = r[16] ^ r[23]
"247798:";  r[17] = r[17] ^ r[20]
"24779c:";  r[18] = r[18] ^ r[21]
"2477a0:";  r[19] = r[19] ^ r[22]
"2477a4:";  r[20] = r[20] ^ r[19]
"2477a8:";  r[21] = r[21] ^ r[16]
"2477ac:";  r[22] = r[22] ^ r[17]
"2477b0:";  r[23] = r[23] ^ r[18]
"2477b4:";  r[8] = r[20] ^ r[8]
"2477b8:";  r[9] = r[21] ^ r[9]
"2477bc:";  r[10] = r[22] ^ r[10]
"2477c0:";  r[11] = r[23] ^ r[11]
"2477c4:";  r[12] = r[16] ^ r[12]
"2477c8:";  r[13] = r[17] ^ r[13]
"2477cc:";  r[14] = r[18] ^ r[14]
"2477d0:";  r[15] = r[19] ^ r[15]
"2477d4:";  r[16] = input[193]
"2477d7:";  r[16] = r[8] ^ r[16]
"2477db:";  r[17] = input[194]
"2477de:";  r[17] = r[9] ^ r[17]
"2477e2:";  r[18] = input[195]
"2477e5:";  r[18] = r[10] ^ r[18]
"2477e9:";  r[19] = input[196]
"2477ec:";  r[19] = r[11] ^ r[19]
"2477f0:";  r[20] = input[197]
"2477f3:";  r[20] = r[12] ^ r[20]
"2477f7:";  r[21] = input[198]
"2477fa:";  r[21] = r[13] ^ r[21]
"2477fe:";  # jmp 0xc39c8
" c39c8:";  r[22] = input[199]
" c39cb:";  r[22] = r[14] ^ r[22]
" c39cf:";  r[23] = input[200]
" c39d2:";  r[23] = r[15] ^ r[23]
" c39d6:";  r[16] = prog[r[16] + 0x206c70]
" c39dd:";  r[17] = prog[r[17] + 0x206c70]
" c39e4:";  r[17] = rol(r[17], 1)
" c39e8:";  r[18] = prog[r[18] + 0x206c70]
" c39ef:";  r[18] = rol(r[18], 7)
" c39f3:";  r[19] = rol(r[19], 1)
" c39f7:";  r[19] = prog[r[19] + 0x206c70]
" c39fe:";  r[20] = prog[r[20] + 0x206c70]
" c3a05:";  r[20] = rol(r[20], 1)
" c3a09:";  r[21] = prog[r[21] + 0x206c70]
" c3a10:";  r[21] = rol(r[21], 7)
" c3a14:";  r[22] = rol(r[22], 1)
" c3a18:";  r[22] = prog[r[22] + 0x206c70]
" c3a1f:";  r[23] = prog[r[23] + 0x206c70]
" c3a26:";  r[16] = r[16] ^ r[21]
" c3a2a:";  r[17] = r[17] ^ r[22]
" c3a2e:";  r[18] = r[18] ^ r[23]
" c3a32:";  r[19] = r[19] ^ r[20]
" c3a36:";  r[20] = r[20] ^ r[18]
" c3a3a:";  r[21] = r[21] ^ r[19]
" c3a3e:";  r[22] = r[22] ^ r[16]
" c3a42:";  r[23] = r[23] ^ r[17]
" c3a46:";  r[16] = r[16] ^ r[23]
" c3a4a:";  r[17] = r[17] ^ r[20]
" c3a4e:";  r[18] = r[18] ^ r[21]
" c3a52:";  r[19] = r[19] ^ r[22]
" c3a56:";  r[20] = r[20] ^ r[19]
" c3a5a:";  r[21] = r[21] ^ r[16]
" c3a5e:";  r[22] = r[22] ^ r[17]
" c3a62:";  r[23] = r[23] ^ r[18]
" c3a66:";  r[0] = r[20] ^ r[0]
" c3a6a:";  r[1] = r[21] ^ r[1]
" c3a6e:";  r[2] = r[22] ^ r[2]
" c3a72:";  r[3] = r[23] ^ r[3]
" c3a76:";  r[4] = r[16] ^ r[4]
" c3a7a:";  # jmp 0xc369b
" c369b:";  r[5] = r[17] ^ r[5]
" c369f:";  r[6] = r[18] ^ r[6]
" c36a3:";  r[7] = r[19] ^ r[7]
" c36a7:";  r[16] = input[185]
" c36aa:";  r[16] = r[0] ^ r[16]
" c36ae:";  r[17] = input[186]
" c36b1:";  r[17] = r[1] ^ r[17]
" c36b5:";  r[18] = input[187]
" c36b8:";  r[18] = r[2] ^ r[18]
" c36bc:";  r[19] = input[188]
" c36bf:";  r[19] = r[3] ^ r[19]
" c36c3:";  # jmp 0x226ef2
"226ef2:";  r[20] = input[189]
"226ef5:";  r[20] = r[4] ^ r[20]
"226ef9:";  r[21] = input[190]
"226efc:";  r[21] = r[5] ^ r[21]
"226f00:";  r[22] = input[191]
"226f03:";  r[22] = r[6] ^ r[22]
"226f07:";  r[23] = input[192]
"226f0a:";  r[23] = r[7] ^ r[23]
"226f0e:";  r[16] = prog[r[16] + 0x206c70]
"226f15:";  r[17] = prog[r[17] + 0x206c70]
"226f1c:";  r[17] = rol(r[17], 1)
"226f20:";  r[18] = prog[r[18] + 0x206c70]
"226f27:";  r[18] = rol(r[18], 7)
"226f2b:";  r[19] = rol(r[19], 1)
"226f2f:";  r[19] = prog[r[19] + 0x206c70]
"226f36:";  r[20] = prog[r[20] + 0x206c70]
"226f3d:";  r[20] = rol(r[20], 1)
"226f41:";  r[21] = prog[r[21] + 0x206c70]
"226f48:";  r[21] = rol(r[21], 7)
"226f4c:";  r[22] = rol(r[22], 1)
"226f50:";  r[22] = prog[r[22] + 0x206c70]
"226f57:";  r[23] = prog[r[23] + 0x206c70]
"226f5e:";  r[16] = r[16] ^ r[21]
"226f62:";  r[17] = r[17] ^ r[22]
"226f66:";  r[18] = r[18] ^ r[23]
"226f6a:";  r[19] = r[19] ^ r[20]
"226f6e:";  r[20] = r[20] ^ r[18]
"226f72:";  r[21] = r[21] ^ r[19]
"226f76:";  r[22] = r[22] ^ r[16]
"226f7a:";  # jmp 0x267cd0
"267cd0:";  r[23] = r[23] ^ r[17]
"267cd4:";  r[16] = r[16] ^ r[23]
"267cd8:";  r[17] = r[17] ^ r[20]
"267cdc:";  r[18] = r[18] ^ r[21]
"267ce0:";  r[19] = r[19] ^ r[22]
"267ce4:";  r[20] = r[20] ^ r[19]
"267ce8:";  r[21] = r[21] ^ r[16]
"267cec:";  r[22] = r[22] ^ r[17]
"267cf0:";  r[23] = r[23] ^ r[18]
"267cf4:";  r[8] = r[20] ^ r[8]
"267cf8:";  r[9] = r[21] ^ r[9]
"267cfc:";  r[10] = r[22] ^ r[10]
"267d00:";  r[11] = r[23] ^ r[11]
"267d04:";  r[12] = r[16] ^ r[12]
"267d08:";  r[13] = r[17] ^ r[13]
"267d0c:";  r[14] = r[18] ^ r[14]
"267d10:";  r[15] = r[19] ^ r[15]
"267d14:";  r[16] = input[177]
"267d17:";  r[16] = r[8] ^ r[16]
"267d1b:";  r[17] = input[178]
"267d1e:";  r[17] = r[9] ^ r[17]
"267d22:";  r[18] = input[179]
"267d25:";  r[18] = r[10] ^ r[18]
"267d29:";  r[19] = input[180]
"267d2c:";  r[19] = r[11] ^ r[19]
"267d30:";  # jmp 0x237087
"237087:";  r[20] = input[181]
"23708a:";  r[20] = r[12] ^ r[20]
"23708e:";  r[21] = input[182]
"237091:";  r[21] = r[13] ^ r[21]
"237095:";  r[22] = input[183]
"237098:";  r[22] = r[14] ^ r[22]
"23709c:";  r[23] = input[184]
"23709f:";  r[23] = r[15] ^ r[23]
"2370a3:";  r[16] = prog[r[16] + 0x206c70]
"2370aa:";  r[17] = prog[r[17] + 0x206c70]
"2370b1:";  r[17] = rol(r[17], 1)
"2370b5:";  r[18] = prog[r[18] + 0x206c70]
"2370bc:";  r[18] = rol(r[18], 7)
"2370c0:";  r[19] = rol(r[19], 1)
"2370c4:";  r[19] = prog[r[19] + 0x206c70]
"2370cb:";  r[20] = prog[r[20] + 0x206c70]
"2370d2:";  r[20] = rol(r[20], 1)
"2370d6:";  r[21] = prog[r[21] + 0x206c70]
"2370dd:";  r[21] = rol(r[21], 7)
"2370e1:";  r[22] = rol(r[22], 1)
"2370e5:";  # jmp 0x2370ea
"2370ea:";  r[22] = prog[r[22] + 0x206c70]
"2370f1:";  r[23] = prog[r[23] + 0x206c70]
"2370f8:";  r[16] = r[16] ^ r[21]
"2370fc:";  r[17] = r[17] ^ r[22]
"237100:";  r[18] = r[18] ^ r[23]
"237104:";  r[19] = r[19] ^ r[20]
"237108:";  r[20] = r[20] ^ r[18]
"23710c:";  r[21] = r[21] ^ r[19]
"237110:";  r[22] = r[22] ^ r[16]
"237114:";  r[23] = r[23] ^ r[17]
"237118:";  r[16] = r[16] ^ r[23]
"23711c:";  r[17] = r[17] ^ r[20]
"237120:";  r[18] = r[18] ^ r[21]
"237124:";  r[19] = r[19] ^ r[22]
"237128:";  r[20] = r[20] ^ r[19]
"23712c:";  r[21] = r[21] ^ r[16]
"237130:";  r[22] = r[22] ^ r[17]
"237134:";  r[23] = r[23] ^ r[18]
"237138:";  r[0] = r[20] ^ r[0]
"23713c:";  r[1] = r[21] ^ r[1]
"237140:";  r[2] = r[22] ^ r[2]
"237144:";  r[3] = r[23] ^ r[3]
"237148:";  # jmp 0x12471a
"12471a:";  r[4] = r[16] ^ r[4]
"12471e:";  r[5] = r[17] ^ r[5]
"124722:";  r[6] = r[18] ^ r[6]
"124726:";  r[7] = r[19] ^ r[7]
"12472a:";  r[16] = input[169]
"12472d:";  r[16] = r[0] ^ r[16]
"124731:";  r[17] = input[170]
"124734:";  r[17] = r[1] ^ r[17]
"124738:";  r[18] = input[171]
"12473b:";  r[18] = r[2] ^ r[18]
"12473f:";  r[19] = input[172]
"124742:";  r[19] = r[3] ^ r[19]
"124746:";  r[20] = input[173]
"124749:";  r[20] = r[4] ^ r[20]
"12474d:";  r[21] = input[174]
"124750:";  r[21] = r[5] ^ r[21]
"124754:";  r[22] = input[175]
"124757:";  r[22] = r[6] ^ r[22]
"12475b:";  r[23] = input[176]
"12475e:";  r[23] = r[7] ^ r[23]
"124762:";  r[16] = prog[r[16] + 0x206c70]
"124769:";  r[17] = prog[r[17] + 0x206c70]
"124770:";  r[17] = rol(r[17], 1)
"124774:";  r[18] = prog[r[18] + 0x206c70]
"12477b:";  r[18] = rol(r[18], 7)
"12477f:";  r[19] = rol(r[19], 1)
"124783:";  r[19] = prog[r[19] + 0x206c70]
"12478a:";  r[20] = prog[r[20] + 0x206c70]
"124791:";  r[20] = rol(r[20], 1)
"124795:";  # jmp 0x2fa033
"2fa033:";  r[21] = prog[r[21] + 0x206c70]
"2fa03a:";  r[21] = rol(r[21], 7)
"2fa03e:";  r[22] = rol(r[22], 1)
"2fa042:";  r[22] = prog[r[22] + 0x206c70]
"2fa049:";  r[23] = prog[r[23] + 0x206c70]
"2fa050:";  r[16] = r[16] ^ r[21]
"2fa054:";  r[17] = r[17] ^ r[22]
"2fa058:";  r[18] = r[18] ^ r[23]
"2fa05c:";  r[19] = r[19] ^ r[20]
"2fa060:";  r[20] = r[20] ^ r[18]
"2fa064:";  r[21] = r[21] ^ r[19]
"2fa068:";  r[22] = r[22] ^ r[16]
"2fa06c:";  r[23] = r[23] ^ r[17]
"2fa070:";  r[16] = r[16] ^ r[23]
"2fa074:";  r[17] = r[17] ^ r[20]
"2fa078:";  r[18] = r[18] ^ r[21]
"2fa07c:";  r[19] = r[19] ^ r[22]
"2fa080:";  r[20] = r[20] ^ r[19]
"2fa084:";  r[21] = r[21] ^ r[16]
"2fa088:";  r[22] = r[22] ^ r[17]
"2fa08c:";  r[23] = r[23] ^ r[18]
"2fa090:";  r[8] = r[20] ^ r[8]
"2fa094:";  r[9] = r[21] ^ r[9]
"2fa098:";  r[10] = r[22] ^ r[10]
"2fa09c:";  # jmp 0x154d43
"154d43:";  r[11] = r[23] ^ r[11]
"154d47:";  r[12] = r[16] ^ r[12]
"154d4b:";  r[13] = r[17] ^ r[13]
"154d4f:";  r[14] = r[18] ^ r[14]
"154d53:";  r[15] = r[19] ^ r[15]
"154d57:";  r[16] = input[161]
"154d5a:";  r[16] = r[8] ^ r[16]
"154d5e:";  r[17] = input[162]
"154d61:";  r[17] = r[9] ^ r[17]
"154d65:";  r[18] = input[163]
"154d68:";  r[18] = r[10] ^ r[18]
"154d6c:";  r[19] = input[164]
"154d6f:";  r[19] = r[11] ^ r[19]
"154d73:";  r[20] = input[165]
"154d76:";  r[20] = r[12] ^ r[20]
"154d7a:";  r[21] = input[166]
"154d7d:";  r[21] = r[13] ^ r[21]
"154d81:";  r[22] = input[167]
"154d84:";  r[22] = r[14] ^ r[22]
"154d88:";  r[23] = input[168]
"154d8b:";  r[23] = r[15] ^ r[23]
"154d8f:";  r[16] = prog[r[16] + 0x206c70]
"154d96:";  r[17] = prog[r[17] + 0x206c70]
"154d9d:";  r[17] = rol(r[17], 1)
"154da1:";  r[18] = prog[r[18] + 0x206c70]
"154da8:";  r[18] = rol(r[18], 7)
"154dac:";  r[19] = rol(r[19], 1)
"154db0:";  r[19] = prog[r[19] + 0x206c70]
"154db7:";  r[20] = prog[r[20] + 0x206c70]
"154dbe:";  r[20] = rol(r[20], 1)
"154dc2:";  r[21] = prog[r[21] + 0x206c70]
"154dc9:";  r[21] = rol(r[21], 7)
"154dcd:";  r[22] = rol(r[22], 1)
"154dd1:";  r[22] = prog[r[22] + 0x206c70]
"154dd8:";  r[23] = prog[r[23] + 0x206c70]
"154ddf:";  r[16] = r[16] ^ r[21]
"154de3:";  r[17] = r[17] ^ r[22]
"154de7:";  # jmp 0x164eec
"164eec:";  r[18] = r[18] ^ r[23]
"164ef0:";  r[19] = r[19] ^ r[20]
"164ef4:";  r[20] = r[20] ^ r[18]
"164ef8:";  r[21] = r[21] ^ r[19]
"164efc:";  r[22] = r[22] ^ r[16]
"164f00:";  r[23] = r[23] ^ r[17]
"164f04:";  r[16] = r[16] ^ r[23]
"164f08:";  r[17] = r[17] ^ r[20]
"164f0c:";  r[18] = r[18] ^ r[21]
"164f10:";  r[19] = r[19] ^ r[22]
"164f14:";  r[20] = r[20] ^ r[19]
"164f18:";  r[21] = r[21] ^ r[16]
"164f1c:";  r[22] = r[22] ^ r[17]
"164f20:";  r[23] = r[23] ^ r[18]
"164f24:";  r[0] = r[20] ^ r[0]
"164f28:";  r[1] = r[21] ^ r[1]
"164f2c:";  r[2] = r[22] ^ r[2]
"164f30:";  r[3] = r[23] ^ r[3]
"164f34:";  r[4] = r[16] ^ r[4]
"164f38:";  r[5] = r[17] ^ r[5]
"164f3c:";  r[6] = r[18] ^ r[6]
"164f40:";  r[7] = r[19] ^ r[7]
"164f44:";  r[16] = input[153]
"164f47:";  r[16] = r[16] & r[0]
"164f4b:";  r[17] = input[154]
"164f4e:";  r[17] = r[17] & r[1]
"164f52:";  r[18] = input[155]
"164f55:";  r[18] = r[18] & r[2]
"164f59:";  r[19] = input[156]
"164f5c:";  r[19] = r[19] & r[3]
"164f60:";  r[20] = r[16] << 1
"164f64:";  r[24] = r[17] >> 7
"164f68:";  r[20] = r[24] | r[20]
"164f6c:";  r[21] = r[17] << 1
"164f70:";  r[24] = r[18] >> 7
"164f74:";  r[21] = r[24] | r[21]
"164f78:";  r[22] = r[18] << 1
"164f7c:";  r[24] = r[19] >> 7
"164f80:";  r[22] = r[24] | r[22]
"164f84:";  r[23] = r[19] << 1
"164f88:";  r[24] = r[16] >> 7
"164f8c:";  r[23] = r[24] | r[23]
"164f90:";  r[4] = r[20] ^ r[4]
"164f94:";  r[16] = input[157]
"164f97:";  r[16] = r[16] | r[4]
"164f9b:";  r[0] = r[0] ^ r[16]
"164f9f:";  r[5] = r[21] ^ r[5]
"164fa3:";  r[16] = input[158]
"164fa6:";  r[16] = r[16] | r[5]
"164faa:";  # jmp 0x103f5b
"103f5b:";  r[1] = r[1] ^ r[16]
"103f5f:";  r[6] = r[22] ^ r[6]
"103f63:";  r[16] = input[159]
"103f66:";  r[16] = r[16] | r[6]
"103f6a:";  r[2] = r[2] ^ r[16]
"103f6e:";  r[7] = r[23] ^ r[7]
"103f72:";  r[16] = input[160]
"103f75:";  r[16] = r[16] | r[7]
"103f79:";  r[3] = r[3] ^ r[16]
"103f7d:";  r[16] = input[149]
"103f80:";  r[16] = r[16] | r[12]
"103f84:";  r[8] = r[8] ^ r[16]
"103f88:";  r[20] = input[145]
"103f8b:";  r[20] = r[20] & r[8]
"103f8f:";  r[16] = input[150]
"103f92:";  r[16] = r[16] | r[13]
"103f96:";  r[9] = r[9] ^ r[16]
"103f9a:";  r[21] = input[146]
"103f9d:";  r[21] = r[21] & r[9]
"103fa1:";  r[16] = input[151]
"103fa4:";  r[16] = r[16] | r[14]
"103fa8:";  r[10] = r[10] ^ r[16]
"103fac:";  r[22] = input[147]
"103faf:";  r[22] = r[22] & r[10]
"103fb3:";  r[16] = input[152]
"103fb6:";  r[16] = r[16] | r[15]
"103fba:";  # jmp 0x257a03
"257a03:";  r[11] = r[11] ^ r[16]
"257a07:";  r[23] = input[148]
"257a0a:";  r[23] = r[23] & r[11]
"257a0e:";  r[16] = r[20] << 1
"257a12:";  r[24] = r[21] >> 7
"257a16:";  r[16] = r[24] | r[16]
"257a1a:";  r[17] = r[21] << 1
"257a1e:";  r[24] = r[22] >> 7
"257a22:";  r[17] = r[24] | r[17]
"257a26:";  r[18] = r[22] << 1
"257a2a:";  r[24] = r[23] >> 7
"257a2e:";  r[18] = r[24] | r[18]
"257a32:";  r[19] = r[23] << 1
"257a36:";  r[24] = r[20] >> 7
"257a3a:";  r[19] = r[24] | r[19]
"257a3e:";  r[12] = r[16] ^ r[12]
"257a42:";  r[13] = r[17] ^ r[13]
"257a46:";  r[14] = r[18] ^ r[14]
"257a4a:";  r[15] = r[19] ^ r[15]
"257a4e:";  r[16] = input[137]
"257a51:";  r[16] = r[0] ^ r[16]
"257a55:";  r[17] = input[138]
"257a58:";  r[17] = r[1] ^ r[17]
"257a5c:";  # jmp 0x33b6b5
"33b6b5:";  r[18] = input[139]
"33b6b8:";  r[18] = r[2] ^ r[18]
"33b6bc:";  r[19] = input[140]
"33b6bf:";  r[19] = r[3] ^ r[19]
"33b6c3:";  r[20] = input[141]
"33b6c6:";  r[20] = r[4] ^ r[20]
"33b6ca:";  r[21] = input[142]
"33b6cd:";  r[21] = r[5] ^ r[21]
"33b6d1:";  r[22] = input[143]
"33b6d4:";  r[22] = r[6] ^ r[22]
"33b6d8:";  r[23] = input[144]
"33b6db:";  r[23] = r[7] ^ r[23]
"33b6df:";  # jmp 0xb3128
" b3128:";  r[16] = prog[r[16] + 0x206c70]
" b312f:";  r[17] = prog[r[17] + 0x206c70]
" b3136:";  r[17] = rol(r[17], 1)
" b313a:";  r[18] = prog[r[18] + 0x206c70]
" b3141:";  r[18] = rol(r[18], 7)
" b3145:";  r[19] = rol(r[19], 1)
" b3149:";  r[19] = prog[r[19] + 0x206c70]
" b3150:";  r[20] = prog[r[20] + 0x206c70]
" b3157:";  r[20] = rol(r[20], 1)
" b315b:";  r[21] = prog[r[21] + 0x206c70]
" b3162:";  r[21] = rol(r[21], 7)
" b3166:";  r[22] = rol(r[22], 1)
" b316a:";  r[22] = prog[r[22] + 0x206c70]
" b3171:";  r[23] = prog[r[23] + 0x206c70]
" b3178:";  r[16] = r[16] ^ r[21]
" b317c:";  r[17] = r[17] ^ r[22]
" b3180:";  r[18] = r[18] ^ r[23]
" b3184:";  r[19] = r[19] ^ r[20]
" b3188:";  r[20] = r[20] ^ r[18]
" b318c:";  r[21] = r[21] ^ r[19]
" b3190:";  r[22] = r[22] ^ r[16]
" b3194:";  r[23] = r[23] ^ r[17]
" b3198:";  r[16] = r[16] ^ r[23]
" b319c:";  r[17] = r[17] ^ r[20]
" b31a0:";  r[18] = r[18] ^ r[21]
" b31a4:";  r[19] = r[19] ^ r[22]
" b31a8:";  r[20] = r[20] ^ r[19]
" b31ac:";  r[21] = r[21] ^ r[16]
" b31b0:";  r[22] = r[22] ^ r[17]
" b31b4:";  r[23] = r[23] ^ r[18]
" b31b8:";  r[8] = r[20] ^ r[8]
" b31bc:";  r[9] = r[21] ^ r[9]
" b31c0:";  r[10] = r[22] ^ r[10]
" b31c4:";  r[11] = r[23] ^ r[11]
" b31c8:";  r[12] = r[16] ^ r[12]
" b31cc:";  r[13] = r[17] ^ r[13]
" b31d0:";  r[14] = r[18] ^ r[14]
" b31d4:";  r[15] = r[19] ^ r[15]
" b31d8:";  r[16] = input[129]
" b31db:";  r[16] = r[8] ^ r[16]
" b31df:";  r[17] = input[130]
" b31e2:";  r[17] = r[9] ^ r[17]
" b31e6:";  r[18] = input[131]
" b31e9:";  r[18] = r[10] ^ r[18]
" b31ed:";  # jmp 0x33bbbb
"33bbbb:";  r[19] = input[132]
"33bbbe:";  r[19] = r[11] ^ r[19]
"33bbc2:";  r[20] = input[133]
"33bbc5:";  r[20] = r[12] ^ r[20]
"33bbc9:";  r[21] = input[134]
"33bbcc:";  r[21] = r[13] ^ r[21]
"33bbd0:";  r[22] = input[135]
"33bbd3:";  r[22] = r[14] ^ r[22]
"33bbd7:";  r[23] = input[136]
"33bbda:";  r[23] = r[15] ^ r[23]
"33bbde:";  r[16] = prog[r[16] + 0x206c70]
"33bbe5:";  # jmp 0xb3065
" b3065:";  r[17] = prog[r[17] + 0x206c70]
" b306c:";  r[17] = rol(r[17], 1)
" b3070:";  r[18] = prog[r[18] + 0x206c70]
" b3077:";  r[18] = rol(r[18], 7)
" b307b:";  r[19] = rol(r[19], 1)
" b307f:";  r[19] = prog[r[19] + 0x206c70]
" b3086:";  r[20] = prog[r[20] + 0x206c70]
" b308d:";  r[20] = rol(r[20], 1)
" b3091:";  r[21] = prog[r[21] + 0x206c70]
" b3098:";  r[21] = rol(r[21], 7)
" b309c:";  r[22] = rol(r[22], 1)
" b30a0:";  r[22] = prog[r[22] + 0x206c70]
" b30a7:";  r[23] = prog[r[23] + 0x206c70]
" b30ae:";  r[16] = r[16] ^ r[21]
" b30b2:";  r[17] = r[17] ^ r[22]
" b30b6:";  r[18] = r[18] ^ r[23]
" b30ba:";  r[19] = r[19] ^ r[20]
" b30be:";  r[20] = r[20] ^ r[18]
" b30c2:";  r[21] = r[21] ^ r[19]
" b30c6:";  r[22] = r[22] ^ r[16]
" b30ca:";  r[23] = r[23] ^ r[17]
" b30ce:";  r[16] = r[16] ^ r[23]
" b30d2:";  r[17] = r[17] ^ r[20]
" b30d6:";  r[18] = r[18] ^ r[21]
" b30da:";  r[19] = r[19] ^ r[22]
" b30de:";  r[20] = r[20] ^ r[19]
" b30e2:";  r[21] = r[21] ^ r[16]
" b30e6:";  r[22] = r[22] ^ r[17]
" b30ea:";  r[23] = r[23] ^ r[18]
" b30ee:";  r[0] = r[20] ^ r[0]
" b30f2:";  r[1] = r[21] ^ r[1]
" b30f6:";  r[2] = r[22] ^ r[2]
" b30fa:";  r[3] = r[23] ^ r[3]
" b30fe:";  r[4] = r[16] ^ r[4]
" b3102:";  r[5] = r[17] ^ r[5]
" b3106:";  r[6] = r[18] ^ r[6]
" b310a:";  r[7] = r[19] ^ r[7]
" b310e:";  r[16] = input[121]
" b3111:";  r[16] = r[0] ^ r[16]
" b3115:";  r[17] = input[122]
" b3118:";  r[17] = r[1] ^ r[17]
" b311c:";  r[18] = input[123]
" b311f:";  r[18] = r[2] ^ r[18]
" b3123:";  # jmp 0x37d058
"37d058:";  r[19] = input[124]
"37d05b:";  r[19] = r[3] ^ r[19]
"37d05f:";  r[20] = input[125]
"37d062:";  r[20] = r[4] ^ r[20]
"37d066:";  r[21] = input[126]
"37d069:";  r[21] = r[5] ^ r[21]
"37d06d:";  r[22] = input[127]
"37d070:";  r[22] = r[6] ^ r[22]
"37d074:";  r[23] = input[128]
"37d077:";  r[23] = r[7] ^ r[23]
"37d07b:";  r[16] = prog[r[16] + 0x206c70]
"37d082:";  r[17] = prog[r[17] + 0x206c70]
"37d089:";  r[17] = rol(r[17], 1)
"37d08d:";  r[18] = prog[r[18] + 0x206c70]
"37d094:";  r[18] = rol(r[18], 7)
"37d098:";  r[19] = rol(r[19], 1)
"37d09c:";  r[19] = prog[r[19] + 0x206c70]
"37d0a3:";  r[20] = prog[r[20] + 0x206c70]
"37d0aa:";  r[20] = rol(r[20], 1)
"37d0ae:";  r[21] = prog[r[21] + 0x206c70]
"37d0b5:";  r[21] = rol(r[21], 7)
"37d0b9:";  r[22] = rol(r[22], 1)
"37d0bd:";  r[22] = prog[r[22] + 0x206c70]
"37d0c4:";  r[23] = prog[r[23] + 0x206c70]
"37d0cb:";  r[16] = r[16] ^ r[21]
"37d0cf:";  r[17] = r[17] ^ r[22]
"37d0d3:";  # jmp 0xb2fb3
" b2fb3:";  r[18] = r[18] ^ r[23]
" b2fb7:";  r[19] = r[19] ^ r[20]
" b2fbb:";  r[20] = r[20] ^ r[18]
" b2fbf:";  r[21] = r[21] ^ r[19]
" b2fc3:";  r[22] = r[22] ^ r[16]
" b2fc7:";  r[23] = r[23] ^ r[17]
" b2fcb:";  r[16] = r[16] ^ r[23]
" b2fcf:";  r[17] = r[17] ^ r[20]
" b2fd3:";  r[18] = r[18] ^ r[21]
" b2fd7:";  r[19] = r[19] ^ r[22]
" b2fdb:";  r[20] = r[20] ^ r[19]
" b2fdf:";  r[21] = r[21] ^ r[16]
" b2fe3:";  r[22] = r[22] ^ r[17]
" b2fe7:";  r[23] = r[23] ^ r[18]
" b2feb:";  r[8] = r[20] ^ r[8]
" b2fef:";  r[9] = r[21] ^ r[9]
" b2ff3:";  # jmp 0x237036
"237036:";  r[10] = r[22] ^ r[10]
"23703a:";  r[11] = r[23] ^ r[11]
"23703e:";  r[12] = r[16] ^ r[12]
"237042:";  r[13] = r[17] ^ r[13]
"237046:";  r[14] = r[18] ^ r[14]
"23704a:";  r[15] = r[19] ^ r[15]
"23704e:";  r[16] = input[113]
"237051:";  r[16] = r[8] ^ r[16]
"237055:";  r[17] = input[114]
"237058:";  r[17] = r[9] ^ r[17]
"23705c:";  r[18] = input[115]
"23705f:";  r[18] = r[10] ^ r[18]
"237063:";  r[19] = input[116]
"237066:";  r[19] = r[11] ^ r[19]
"23706a:";  r[20] = input[117]
"23706d:";  r[20] = r[12] ^ r[20]
"237071:";  r[21] = input[118]
"237074:";  r[21] = r[13] ^ r[21]
"237078:";  r[22] = input[119]
"23707b:";  r[22] = r[14] ^ r[22]
"23707f:";  r[23] = input[120]
"237082:";  # jmp 0x298d31
"298d31:";  r[23] = r[15] ^ r[23]
"298d35:";  r[16] = prog[r[16] + 0x206c70]
"298d3c:";  r[17] = prog[r[17] + 0x206c70]
"298d43:";  r[17] = rol(r[17], 1)
"298d47:";  r[18] = prog[r[18] + 0x206c70]
"298d4e:";  r[18] = rol(r[18], 7)
"298d52:";  r[19] = rol(r[19], 1)
"298d56:";  r[19] = prog[r[19] + 0x206c70]
"298d5d:";  r[20] = prog[r[20] + 0x206c70]
"298d64:";  r[20] = rol(r[20], 1)
"298d68:";  r[21] = prog[r[21] + 0x206c70]
"298d6f:";  r[21] = rol(r[21], 7)
"298d73:";  r[22] = rol(r[22], 1)
"298d77:";  r[22] = prog[r[22] + 0x206c70]
"298d7e:";  r[23] = prog[r[23] + 0x206c70]
"298d85:";  r[16] = r[16] ^ r[21]
"298d89:";  r[17] = r[17] ^ r[22]
"298d8d:";  r[18] = r[18] ^ r[23]
"298d91:";  r[19] = r[19] ^ r[20]
"298d95:";  r[20] = r[20] ^ r[18]
"298d99:";  r[21] = r[21] ^ r[19]
"298d9d:";  r[22] = r[22] ^ r[16]
"298da1:";  r[23] = r[23] ^ r[17]
"298da5:";  r[16] = r[16] ^ r[23]
"298da9:";  r[17] = r[17] ^ r[20]
"298dad:";  r[18] = r[18] ^ r[21]
"298db1:";  r[19] = r[19] ^ r[22]
"298db5:";  # jmp 0x1b6089
"1b6089:";  r[20] = r[20] ^ r[19]
"1b608d:";  r[21] = r[21] ^ r[16]
"1b6091:";  r[22] = r[22] ^ r[17]
"1b6095:";  r[23] = r[23] ^ r[18]
"1b6099:";  r[0] = r[20] ^ r[0]
"1b609d:";  r[1] = r[21] ^ r[1]
"1b60a1:";  r[2] = r[22] ^ r[2]
"1b60a5:";  r[3] = r[23] ^ r[3]
"1b60a9:";  r[4] = r[16] ^ r[4]
"1b60ad:";  r[5] = r[17] ^ r[5]
"1b60b1:";  r[6] = r[18] ^ r[6]
"1b60b5:";  r[7] = r[19] ^ r[7]
"1b60b9:";  r[16] = input[105]
"1b60bc:";  r[16] = r[0] ^ r[16]
"1b60c0:";  r[17] = input[106]
"1b60c3:";  r[17] = r[1] ^ r[17]
"1b60c7:";  # jmp 0x278076
"278076:";  r[18] = input[107]
"278079:";  r[18] = r[2] ^ r[18]
"27807d:";  r[19] = input[108]
"278080:";  r[19] = r[3] ^ r[19]
"278084:";  r[20] = input[109]
"278087:";  r[20] = r[4] ^ r[20]
"27808b:";  r[21] = input[110]
"27808e:";  r[21] = r[5] ^ r[21]
"278092:";  r[22] = input[111]
"278095:";  r[22] = r[6] ^ r[22]
"278099:";  r[23] = input[112]
"27809c:";  r[23] = r[7] ^ r[23]
"2780a0:";  r[16] = prog[r[16] + 0x206c70]
"2780a7:";  r[17] = prog[r[17] + 0x206c70]
"2780ae:";  r[17] = rol(r[17], 1)
"2780b2:";  r[18] = prog[r[18] + 0x206c70]
"2780b9:";  r[18] = rol(r[18], 7)
"2780bd:";  r[19] = rol(r[19], 1)
"2780c1:";  r[19] = prog[r[19] + 0x206c70]
"2780c8:";  r[20] = prog[r[20] + 0x206c70]
"2780cf:";  r[20] = rol(r[20], 1)
"2780d3:";  r[21] = prog[r[21] + 0x206c70]
"2780da:";  r[21] = rol(r[21], 7)
"2780de:";  r[22] = rol(r[22], 1)
"2780e2:";  r[22] = prog[r[22] + 0x206c70]
"2780e9:";  r[23] = prog[r[23] + 0x206c70]
"2780f0:";  r[16] = r[16] ^ r[21]
"2780f4:";  r[17] = r[17] ^ r[22]
"2780f8:";  r[18] = r[18] ^ r[23]
"2780fc:";  r[19] = r[19] ^ r[20]
"278100:";  r[20] = r[20] ^ r[18]
"278104:";  r[21] = r[21] ^ r[19]
"278108:";  r[22] = r[22] ^ r[16]
"27810c:";  r[23] = r[23] ^ r[17]
"278110:";  r[16] = r[16] ^ r[23]
"278114:";  r[17] = r[17] ^ r[20]
"278118:";  r[18] = r[18] ^ r[21]
"27811c:";  r[19] = r[19] ^ r[22]
"278120:";  # jmp 0x1652af
"1652af:";  r[20] = r[20] ^ r[19]
"1652b3:";  r[21] = r[21] ^ r[16]
"1652b7:";  r[22] = r[22] ^ r[17]
"1652bb:";  r[23] = r[23] ^ r[18]
"1652bf:";  r[8] = r[20] ^ r[8]
"1652c3:";  r[9] = r[21] ^ r[9]
"1652c7:";  r[10] = r[22] ^ r[10]
"1652cb:";  r[11] = r[23] ^ r[11]
"1652cf:";  r[12] = r[16] ^ r[12]
"1652d3:";  r[13] = r[17] ^ r[13]
"1652d7:";  r[14] = r[18] ^ r[14]
"1652db:";  r[15] = r[19] ^ r[15]
"1652df:";  r[16] = input[97]
"1652e2:";  r[16] = r[8] ^ r[16]
"1652e6:";  r[17] = input[98]
"1652e9:";  r[17] = r[9] ^ r[17]
"1652ed:";  r[18] = input[99]
"1652f0:";  r[18] = r[10] ^ r[18]
"1652f4:";  r[19] = input[100]
"1652f7:";  r[19] = r[11] ^ r[19]
"1652fb:";  r[20] = input[101]
"1652fe:";  r[20] = r[12] ^ r[20]
"165302:";  r[21] = input[102]
"165305:";  r[21] = r[13] ^ r[21]
"165309:";  r[22] = input[103]
"16530c:";  # jmp 0x30b47
" 30b47:";  r[22] = r[14] ^ r[22]
" 30b4b:";  r[23] = input[104]
" 30b4e:";  r[23] = r[15] ^ r[23]
" 30b52:";  r[16] = prog[r[16] + 0x206c70]
" 30b59:";  r[17] = prog[r[17] + 0x206c70]
" 30b60:";  r[17] = rol(r[17], 1)
" 30b64:";  r[18] = prog[r[18] + 0x206c70]
" 30b6b:";  r[18] = rol(r[18], 7)
" 30b6f:";  r[19] = rol(r[19], 1)
" 30b73:";  r[19] = prog[r[19] + 0x206c70]
" 30b7a:";  r[20] = prog[r[20] + 0x206c70]
" 30b81:";  r[20] = rol(r[20], 1)
" 30b85:";  r[21] = prog[r[21] + 0x206c70]
" 30b8c:";  r[21] = rol(r[21], 7)
" 30b90:";  r[22] = rol(r[22], 1)
" 30b94:";  r[22] = prog[r[22] + 0x206c70]
" 30b9b:";  r[23] = prog[r[23] + 0x206c70]
" 30ba2:";  r[16] = r[16] ^ r[21]
" 30ba6:";  r[17] = r[17] ^ r[22]
" 30baa:";  r[18] = r[18] ^ r[23]
" 30bae:";  r[19] = r[19] ^ r[20]
" 30bb2:";  # jmp 0x1e6792
"1e6792:";  r[20] = r[20] ^ r[18]
"1e6796:";  r[21] = r[21] ^ r[19]
"1e679a:";  r[22] = r[22] ^ r[16]
"1e679e:";  r[23] = r[23] ^ r[17]
"1e67a2:";  r[16] = r[16] ^ r[23]
"1e67a6:";  r[17] = r[17] ^ r[20]
"1e67aa:";  r[18] = r[18] ^ r[21]
"1e67ae:";  r[19] = r[19] ^ r[22]
"1e67b2:";  r[20] = r[20] ^ r[19]
"1e67b6:";  r[21] = r[21] ^ r[16]
"1e67ba:";  r[22] = r[22] ^ r[17]
"1e67be:";  r[23] = r[23] ^ r[18]
"1e67c2:";  r[0] = r[20] ^ r[0]
"1e67c6:";  r[1] = r[21] ^ r[1]
"1e67ca:";  r[2] = r[22] ^ r[2]
"1e67ce:";  r[3] = r[23] ^ r[3]
"1e67d2:";  r[4] = r[16] ^ r[4]
"1e67d6:";  r[5] = r[17] ^ r[5]
"1e67da:";  r[6] = r[18] ^ r[6]
"1e67de:";  r[7] = r[19] ^ r[7]
"1e67e2:";  r[16] = input[89]
"1e67e5:";  r[16] = r[16] & r[0]
"1e67e9:";  r[17] = input[90]
"1e67ec:";  r[17] = r[17] & r[1]
"1e67f0:";  r[18] = input[91]
"1e67f3:";  r[18] = r[18] & r[2]
"1e67f7:";  r[19] = input[92]
"1e67fa:";  r[19] = r[19] & r[3]
"1e67fe:";  r[20] = r[16] << 1
"1e6802:";  r[24] = r[17] >> 7
"1e6806:";  r[20] = r[24] | r[20]
"1e680a:";  r[21] = r[17] << 1
"1e680e:";  # jmp 0x27801e
"27801e:";  r[24] = r[18] >> 7
"278022:";  r[21] = r[24] | r[21]
"278026:";  r[22] = r[18] << 1
"27802a:";  r[24] = r[19] >> 7
"27802e:";  r[22] = r[24] | r[22]
"278032:";  r[23] = r[19] << 1
"278036:";  r[24] = r[16] >> 7
"27803a:";  r[23] = r[24] | r[23]
"27803e:";  r[4] = r[20] ^ r[4]
"278042:";  r[16] = input[93]
"278045:";  r[16] = r[16] | r[4]
"278049:";  # jmp 0x36cc34
"36cc34:";  r[0] = r[0] ^ r[16]
"36cc38:";  r[5] = r[21] ^ r[5]
"36cc3c:";  r[16] = input[94]
"36cc3f:";  r[16] = r[16] | r[5]
"36cc43:";  r[1] = r[1] ^ r[16]
"36cc47:";  r[6] = r[22] ^ r[6]
"36cc4b:";  r[16] = input[95]
"36cc4e:";  r[16] = r[16] | r[6]
"36cc52:";  r[2] = r[2] ^ r[16]
"36cc56:";  r[7] = r[23] ^ r[7]
"36cc5a:";  r[16] = input[96]
"36cc5d:";  r[16] = r[16] | r[7]
"36cc61:";  r[3] = r[3] ^ r[16]
"36cc65:";  r[16] = input[85]
"36cc68:";  r[16] = r[16] | r[12]
"36cc6c:";  r[8] = r[8] ^ r[16]
"36cc70:";  r[20] = input[81]
"36cc73:";  r[20] = r[20] & r[8]
"36cc77:";  r[16] = input[86]
"36cc7a:";  r[16] = r[16] | r[13]
"36cc7e:";  r[9] = r[9] ^ r[16]
"36cc82:";  r[21] = input[82]
"36cc85:";  r[21] = r[21] & r[9]
"36cc89:";  r[16] = input[87]
"36cc8c:";  r[16] = r[16] | r[14]
"36cc90:";  r[10] = r[10] ^ r[16]
"36cc94:";  r[22] = input[83]
"36cc97:";  r[22] = r[22] & r[10]
"36cc9b:";  r[16] = input[88]
"36cc9e:";  r[16] = r[16] | r[15]
"36cca2:";  r[11] = r[11] ^ r[16]
"36cca6:";  r[23] = input[84]
"36cca9:";  r[23] = r[23] & r[11]
"36ccad:";  # jmp 0x1753b5
"1753b5:";  r[16] = r[20] << 1
"1753b9:";  r[24] = r[21] >> 7
"1753bd:";  r[16] = r[24] | r[16]
"1753c1:";  r[17] = r[21] << 1
"1753c5:";  r[24] = r[22] >> 7
"1753c9:";  r[17] = r[24] | r[17]
"1753cd:";  r[18] = r[22] << 1
"1753d1:";  r[24] = r[23] >> 7
"1753d5:";  r[18] = r[24] | r[18]
"1753d9:";  r[19] = r[23] << 1
"1753dd:";  r[24] = r[20] >> 7
"1753e1:";  r[19] = r[24] | r[19]
"1753e5:";  r[12] = r[16] ^ r[12]
"1753e9:";  r[13] = r[17] ^ r[13]
"1753ed:";  r[14] = r[18] ^ r[14]
"1753f1:";  r[15] = r[19] ^ r[15]
"1753f5:";  r[16] = input[73]
"1753f8:";  r[16] = r[0] ^ r[16]
"1753fc:";  r[17] = input[74]
"1753ff:";  r[17] = r[1] ^ r[17]
"175403:";  r[18] = input[75]
"175406:";  # jmp 0xb2cc9
" b2cc9:";  r[18] = r[2] ^ r[18]
" b2ccd:";  r[19] = input[76]
" b2cd0:";  r[19] = r[3] ^ r[19]
" b2cd4:";  r[20] = input[77]
" b2cd7:";  r[20] = r[4] ^ r[20]
" b2cdb:";  r[21] = input[78]
" b2cde:";  r[21] = r[5] ^ r[21]
" b2ce2:";  r[22] = input[79]
" b2ce5:";  r[22] = r[6] ^ r[22]
" b2ce9:";  r[23] = input[80]
" b2cec:";  r[23] = r[7] ^ r[23]
" b2cf0:";  r[16] = prog[r[16] + 0x206c70]
" b2cf7:";  r[17] = prog[r[17] + 0x206c70]
" b2cfe:";  r[17] = rol(r[17], 1)
" b2d02:";  r[18] = prog[r[18] + 0x206c70]
" b2d09:";  r[18] = rol(r[18], 7)
" b2d0d:";  r[19] = rol(r[19], 1)
" b2d11:";  r[19] = prog[r[19] + 0x206c70]
" b2d18:";  r[20] = prog[r[20] + 0x206c70]
" b2d1f:";  r[20] = rol(r[20], 1)
" b2d23:";  r[21] = prog[r[21] + 0x206c70]
" b2d2a:";  r[21] = rol(r[21], 7)
" b2d2e:";  r[22] = rol(r[22], 1)
" b2d32:";  r[22] = prog[r[22] + 0x206c70]
" b2d39:";  r[23] = prog[r[23] + 0x206c70]
" b2d40:";  r[16] = r[16] ^ r[21]
" b2d44:";  r[17] = r[17] ^ r[22]
" b2d48:";  r[18] = r[18] ^ r[23]
" b2d4c:";  r[19] = r[19] ^ r[20]
" b2d50:";  r[20] = r[20] ^ r[18]
" b2d54:";  r[21] = r[21] ^ r[19]
" b2d58:";  r[22] = r[22] ^ r[16]
" b2d5c:";  r[23] = r[23] ^ r[17]
" b2d60:";  r[16] = r[16] ^ r[23]
" b2d64:";  r[17] = r[17] ^ r[20]
" b2d68:";  r[18] = r[18] ^ r[21]
" b2d6c:";  r[19] = r[19] ^ r[22]
" b2d70:";  r[20] = r[20] ^ r[19]
" b2d74:";  r[21] = r[21] ^ r[16]
" b2d78:";  r[22] = r[22] ^ r[17]
" b2d7c:";  # jmp 0x134ce9
"134ce9:";  r[23] = r[23] ^ r[18]
"134ced:";  r[8] = r[20] ^ r[8]
"134cf1:";  r[9] = r[21] ^ r[9]
"134cf5:";  r[10] = r[22] ^ r[10]
"134cf9:";  r[11] = r[23] ^ r[11]
"134cfd:";  r[12] = r[16] ^ r[12]
"134d01:";  r[13] = r[17] ^ r[13]
"134d05:";  r[14] = r[18] ^ r[14]
"134d09:";  r[15] = r[19] ^ r[15]
"134d0d:";  r[16] = input[65]
"134d10:";  r[16] = r[8] ^ r[16]
"134d14:";  r[17] = input[66]
"134d17:";  r[17] = r[9] ^ r[17]
"134d1b:";  r[18] = input[67]
"134d1e:";  r[18] = r[10] ^ r[18]
"134d22:";  r[19] = input[68]
"134d25:";  r[19] = r[11] ^ r[19]
"134d29:";  r[20] = input[69]
"134d2c:";  r[20] = r[12] ^ r[20]
"134d30:";  r[21] = input[70]
"134d33:";  r[21] = r[13] ^ r[21]
"134d37:";  r[22] = input[71]
"134d3a:";  r[22] = r[14] ^ r[22]
"134d3e:";  # jmp 0x175311
"175311:";  r[23] = input[72]
"175314:";  r[23] = r[15] ^ r[23]
"175318:";  r[16] = prog[r[16] + 0x206c70]
"17531f:";  r[17] = prog[r[17] + 0x206c70]
"175326:";  r[17] = rol(r[17], 1)
"17532a:";  r[18] = prog[r[18] + 0x206c70]
"175331:";  r[18] = rol(r[18], 7)
"175335:";  r[19] = rol(r[19], 1)
"175339:";  r[19] = prog[r[19] + 0x206c70]
"175340:";  r[20] = prog[r[20] + 0x206c70]
"175347:";  r[20] = rol(r[20], 1)
"17534b:";  r[21] = prog[r[21] + 0x206c70]
"175352:";  r[21] = rol(r[21], 7)
"175356:";  r[22] = rol(r[22], 1)
"17535a:";  r[22] = prog[r[22] + 0x206c70]
"175361:";  r[23] = prog[r[23] + 0x206c70]
"175368:";  r[16] = r[16] ^ r[21]
"17536c:";  r[17] = r[17] ^ r[22]
"175370:";  r[18] = r[18] ^ r[23]
"175374:";  r[19] = r[19] ^ r[20]
"175378:";  r[20] = r[20] ^ r[18]
"17537c:";  r[21] = r[21] ^ r[19]
"175380:";  r[22] = r[22] ^ r[16]
"175384:";  r[23] = r[23] ^ r[17]
"175388:";  r[16] = r[16] ^ r[23]
"17538c:";  r[17] = r[17] ^ r[20]
"175390:";  r[18] = r[18] ^ r[21]
"175394:";  r[19] = r[19] ^ r[22]
"175398:";  r[20] = r[20] ^ r[19]
"17539c:";  r[21] = r[21] ^ r[16]
"1753a0:";  r[22] = r[22] ^ r[17]
"1753a4:";  r[23] = r[23] ^ r[18]
"1753a8:";  r[0] = r[20] ^ r[0]
"1753ac:";  r[1] = r[21] ^ r[1]
"1753b0:";  # jmp 0x34c3a6
"34c3a6:";  r[2] = r[22] ^ r[2]
"34c3aa:";  r[3] = r[23] ^ r[3]
"34c3ae:";  r[4] = r[16] ^ r[4]
"34c3b2:";  r[5] = r[17] ^ r[5]
"34c3b6:";  r[6] = r[18] ^ r[6]
"34c3ba:";  r[7] = r[19] ^ r[7]
"34c3be:";  r[16] = input[57]
"34c3c1:";  r[16] = r[0] ^ r[16]
"34c3c5:";  r[17] = input[58]
"34c3c8:";  r[17] = r[1] ^ r[17]
"34c3cc:";  r[18] = input[59]
"34c3cf:";  r[18] = r[2] ^ r[18]
"34c3d3:";  r[19] = input[60]
"34c3d6:";  r[19] = r[3] ^ r[19]
"34c3da:";  r[20] = input[61]
"34c3dd:";  r[20] = r[4] ^ r[20]
"34c3e1:";  r[21] = input[62]
"34c3e4:";  r[21] = r[5] ^ r[21]
"34c3e8:";  r[22] = input[63]
"34c3eb:";  r[22] = r[6] ^ r[22]
"34c3ef:";  r[23] = input[64]
"34c3f2:";  r[23] = r[7] ^ r[23]
"34c3f6:";  r[16] = prog[r[16] + 0x206c70]
"34c3fd:";  r[17] = prog[r[17] + 0x206c70]
"34c404:";  r[17] = rol(r[17], 1)
"34c408:";  r[18] = prog[r[18] + 0x206c70]
"34c40f:";  r[18] = rol(r[18], 7)
"34c413:";  r[19] = rol(r[19], 1)
"34c417:";  r[19] = prog[r[19] + 0x206c70]
"34c41e:";  r[20] = prog[r[20] + 0x206c70]
"34c425:";  r[20] = rol(r[20], 1)
"34c429:";  r[21] = prog[r[21] + 0x206c70]
"34c430:";  r[21] = rol(r[21], 7)
"34c434:";  r[22] = rol(r[22], 1)
"34c438:";  r[22] = prog[r[22] + 0x206c70]
"34c43f:";  r[23] = prog[r[23] + 0x206c70]
"34c446:";  # jmp 0x124a13
"124a13:";  r[16] = r[16] ^ r[21]
"124a17:";  r[17] = r[17] ^ r[22]
"124a1b:";  r[18] = r[18] ^ r[23]
"124a1f:";  r[19] = r[19] ^ r[20]
"124a23:";  r[20] = r[20] ^ r[18]
"124a27:";  r[21] = r[21] ^ r[19]
"124a2b:";  r[22] = r[22] ^ r[16]
"124a2f:";  r[23] = r[23] ^ r[17]
"124a33:";  r[16] = r[16] ^ r[23]
"124a37:";  r[17] = r[17] ^ r[20]
"124a3b:";  # jmp 0x38da47
"38da47:";  r[18] = r[18] ^ r[21]
"38da4b:";  r[19] = r[19] ^ r[22]
"38da4f:";  r[20] = r[20] ^ r[19]
"38da53:";  r[21] = r[21] ^ r[16]
"38da57:";  r[22] = r[22] ^ r[17]
"38da5b:";  r[23] = r[23] ^ r[18]
"38da5f:";  r[8] = r[20] ^ r[8]
"38da63:";  r[9] = r[21] ^ r[9]
"38da67:";  r[10] = r[22] ^ r[10]
"38da6b:";  r[11] = r[23] ^ r[11]
"38da6f:";  r[12] = r[16] ^ r[12]
"38da73:";  r[13] = r[17] ^ r[13]
"38da77:";  r[14] = r[18] ^ r[14]
"38da7b:";  r[15] = r[19] ^ r[15]
"38da7f:";  r[16] = input[49]
"38da82:";  r[16] = r[8] ^ r[16]
"38da86:";  r[17] = input[50]
"38da89:";  r[17] = r[9] ^ r[17]
"38da8d:";  r[18] = input[51]
"38da90:";  r[18] = r[10] ^ r[18]
"38da94:";  r[19] = input[52]
"38da97:";  r[19] = r[11] ^ r[19]
"38da9b:";  r[20] = input[53]
"38da9e:";  r[20] = r[12] ^ r[20]
"38daa2:";  r[21] = input[54]
"38daa5:";  r[21] = r[13] ^ r[21]
"38daa9:";  r[22] = input[55]
"38daac:";  r[22] = r[14] ^ r[22]
"38dab0:";  r[23] = input[56]
"38dab3:";  r[23] = r[15] ^ r[23]
"38dab7:";  r[16] = prog[r[16] + 0x206c70]
"38dabe:";  # jmp 0x30ae9
" 30ae9:";  r[17] = prog[r[17] + 0x206c70]
" 30af0:";  r[17] = rol(r[17], 1)
" 30af4:";  r[18] = prog[r[18] + 0x206c70]
" 30afb:";  r[18] = rol(r[18], 7)
" 30aff:";  r[19] = rol(r[19], 1)
" 30b03:";  r[19] = prog[r[19] + 0x206c70]
" 30b0a:";  r[20] = prog[r[20] + 0x206c70]
" 30b11:";  r[20] = rol(r[20], 1)
" 30b15:";  r[21] = prog[r[21] + 0x206c70]
" 30b1c:";  r[21] = rol(r[21], 7)
" 30b20:";  r[22] = rol(r[22], 1)
" 30b24:";  r[22] = prog[r[22] + 0x206c70]
" 30b2b:";  r[23] = prog[r[23] + 0x206c70]
" 30b32:";  r[16] = r[16] ^ r[21]
" 30b36:";  r[17] = r[17] ^ r[22]
" 30b3a:";  r[18] = r[18] ^ r[23]
" 30b3e:";  r[19] = r[19] ^ r[20]
" 30b42:";  # jmp 0x37d53e
"37d53e:";  r[20] = r[20] ^ r[18]
"37d542:";  r[21] = r[21] ^ r[19]
"37d546:";  r[22] = r[22] ^ r[16]
"37d54a:";  r[23] = r[23] ^ r[17]
"37d54e:";  r[16] = r[16] ^ r[23]
"37d552:";  r[17] = r[17] ^ r[20]
"37d556:";  r[18] = r[18] ^ r[21]
"37d55a:";  r[19] = r[19] ^ r[22]
"37d55e:";  r[20] = r[20] ^ r[19]
"37d562:";  r[21] = r[21] ^ r[16]
"37d566:";  r[22] = r[22] ^ r[17]
"37d56a:";  r[23] = r[23] ^ r[18]
"37d56e:";  r[0] = r[20] ^ r[0]
"37d572:";  r[1] = r[21] ^ r[1]
"37d576:";  r[2] = r[22] ^ r[2]
"37d57a:";  r[3] = r[23] ^ r[3]
"37d57e:";  r[4] = r[16] ^ r[4]
"37d582:";  r[5] = r[17] ^ r[5]
"37d586:";  r[6] = r[18] ^ r[6]
"37d58a:";  r[7] = r[19] ^ r[7]
"37d58e:";  r[16] = input[41]
"37d591:";  r[16] = r[0] ^ r[16]
"37d595:";  r[17] = input[42]
"37d598:";  r[17] = r[1] ^ r[17]
"37d59c:";  r[18] = input[43]
"37d59f:";  r[18] = r[2] ^ r[18]
"37d5a3:";  r[19] = input[44]
"37d5a6:";  r[19] = r[3] ^ r[19]
"37d5aa:";  r[20] = input[45]
"37d5ad:";  r[20] = r[4] ^ r[20]
"37d5b1:";  r[21] = input[46]
"37d5b4:";  r[21] = r[5] ^ r[21]
"37d5b8:";  r[22] = input[47]
"37d5bb:";  r[22] = r[6] ^ r[22]
"37d5bf:";  r[23] = input[48]
"37d5c2:";  r[23] = r[7] ^ r[23]
"37d5c6:";  r[16] = prog[r[16] + 0x206c70]
"37d5cd:";  r[17] = prog[r[17] + 0x206c70]
"37d5d4:";  r[17] = rol(r[17], 1)
"37d5d8:";  r[18] = prog[r[18] + 0x206c70]
"37d5df:";  r[18] = rol(r[18], 7)
"37d5e3:";  # jmp 0x124682
"124682:";  r[19] = rol(r[19], 1)
"124686:";  r[19] = prog[r[19] + 0x206c70]
"12468d:";  r[20] = prog[r[20] + 0x206c70]
"124694:";  r[20] = rol(r[20], 1)
"124698:";  r[21] = prog[r[21] + 0x206c70]
"12469f:";  r[21] = rol(r[21], 7)
"1246a3:";  r[22] = rol(r[22], 1)
"1246a7:";  r[22] = prog[r[22] + 0x206c70]
"1246ae:";  r[23] = prog[r[23] + 0x206c70]
"1246b5:";  r[16] = r[16] ^ r[21]
"1246b9:";  r[17] = r[17] ^ r[22]
"1246bd:";  r[18] = r[18] ^ r[23]
"1246c1:";  r[19] = r[19] ^ r[20]
"1246c5:";  r[20] = r[20] ^ r[18]
"1246c9:";  r[21] = r[21] ^ r[19]
"1246cd:";  r[22] = r[22] ^ r[16]
"1246d1:";  r[23] = r[23] ^ r[17]
"1246d5:";  r[16] = r[16] ^ r[23]
"1246d9:";  r[17] = r[17] ^ r[20]
"1246dd:";  r[18] = r[18] ^ r[21]
"1246e1:";  r[19] = r[19] ^ r[22]
"1246e5:";  r[20] = r[20] ^ r[19]
"1246e9:";  r[21] = r[21] ^ r[16]
"1246ed:";  r[22] = r[22] ^ r[17]
"1246f1:";  r[23] = r[23] ^ r[18]
"1246f5:";  r[8] = r[20] ^ r[8]
"1246f9:";  r[9] = r[21] ^ r[9]
"1246fd:";  r[10] = r[22] ^ r[10]
"124701:";  r[11] = r[23] ^ r[11]
"124705:";  r[12] = r[16] ^ r[12]
"124709:";  r[13] = r[17] ^ r[13]
"12470d:";  r[14] = r[18] ^ r[14]
"124711:";  r[15] = r[19] ^ r[15]
"124715:";  # jmp 0x1b61cc
"1b61cc:";  r[16] = input[33]
"1b61cf:";  r[16] = r[8] ^ r[16]
"1b61d3:";  r[17] = input[34]
"1b61d6:";  r[17] = r[9] ^ r[17]
"1b61da:";  r[18] = input[35]
"1b61dd:";  r[18] = r[10] ^ r[18]
"1b61e1:";  r[19] = input[36]
"1b61e4:";  r[19] = r[11] ^ r[19]
"1b61e8:";  r[20] = input[37]
"1b61eb:";  r[20] = r[12] ^ r[20]
"1b61ef:";  r[21] = input[38]
"1b61f2:";  r[21] = r[13] ^ r[21]
"1b61f6:";  # jmp 0xf3e5f
" f3e5f:";  r[22] = input[39]
" f3e62:";  r[22] = r[14] ^ r[22]
" f3e66:";  r[23] = input[40]
" f3e69:";  r[23] = r[15] ^ r[23]
" f3e6d:";  r[16] = prog[r[16] + 0x206c70]
" f3e74:";  r[17] = prog[r[17] + 0x206c70]
" f3e7b:";  r[17] = rol(r[17], 1)
" f3e7f:";  r[18] = prog[r[18] + 0x206c70]
" f3e86:";  r[18] = rol(r[18], 7)
" f3e8a:";  r[19] = rol(r[19], 1)
" f3e8e:";  r[19] = prog[r[19] + 0x206c70]
" f3e95:";  r[20] = prog[r[20] + 0x206c70]
" f3e9c:";  r[20] = rol(r[20], 1)
" f3ea0:";  r[21] = prog[r[21] + 0x206c70]
" f3ea7:";  r[21] = rol(r[21], 7)
" f3eab:";  r[22] = rol(r[22], 1)
" f3eaf:";  r[22] = prog[r[22] + 0x206c70]
" f3eb6:";  r[23] = prog[r[23] + 0x206c70]
" f3ebd:";  r[16] = r[16] ^ r[21]
" f3ec1:";  r[17] = r[17] ^ r[22]
" f3ec5:";  r[18] = r[18] ^ r[23]
" f3ec9:";  r[19] = r[19] ^ r[20]
" f3ecd:";  r[20] = r[20] ^ r[18]
" f3ed1:";  r[21] = r[21] ^ r[19]
" f3ed5:";  r[22] = r[22] ^ r[16]
" f3ed9:";  r[23] = r[23] ^ r[17]
" f3edd:";  r[16] = r[16] ^ r[23]
" f3ee1:";  r[17] = r[17] ^ r[20]
" f3ee5:";  r[18] = r[18] ^ r[21]
" f3ee9:";  r[19] = r[19] ^ r[22]
" f3eed:";  r[20] = r[20] ^ r[19]
" f3ef1:";  r[21] = r[21] ^ r[16]
" f3ef5:";  r[22] = r[22] ^ r[17]
" f3ef9:";  r[23] = r[23] ^ r[18]
" f3efd:";  r[0] = r[20] ^ r[0]
" f3f01:";  r[1] = r[21] ^ r[1]
" f3f05:";  r[2] = r[22] ^ r[2]
" f3f09:";  r[3] = r[23] ^ r[3]
" f3f0d:";  r[4] = r[16] ^ r[4]
" f3f11:";  # jmp 0x2476ce
"2476ce:";  r[5] = r[17] ^ r[5]
"2476d2:";  r[6] = r[18] ^ r[6]
"2476d6:";  r[7] = r[19] ^ r[7]
"2476da:";  r[16] = input[17]
"2476dd:";  r[8] = r[8] ^ r[16]
"2476e1:";  output[0] = r[8]
"2476e4:";  r[16] = input[18]
"2476e7:";  r[9] = r[9] ^ r[16]
"2476eb:";  output[1] = r[9]
"2476ee:";  r[16] = input[19]
"2476f1:";  r[10] = r[10] ^ r[16]
"2476f5:";  output[2] = r[10]
"2476f8:";  r[16] = input[20]
"2476fb:";  r[11] = r[11] ^ r[16]
"2476ff:";  output[3] = r[11]
"247702:";  r[16] = input[21]
"247705:";  r[12] = r[12] ^ r[16]
"247709:";  output[4] = r[12]
"24770c:";  r[16] = input[22]
"24770f:";  r[13] = r[13] ^ r[16]
"247713:";  output[5] = r[13]
"247716:";  r[16] = input[23]
"247719:";  r[14] = r[14] ^ r[16]
"24771d:";  output[6] = r[14]
"247720:";  r[16] = input[24]
"247723:";  r[15] = r[15] ^ r[16]
"247727:";  output[7] = r[15]
"24772a:";  r[16] = input[25]
"24772d:";  r[0] = r[0] ^ r[16]
"247731:";  output[8] = r[0]
"247734:";  r[16] = input[26]
"247737:";  r[1] = r[1] ^ r[16]
"24773b:";  output[9] = r[1]
"24773e:";  r[16] = input[27]
"247741:";  r[2] = r[2] ^ r[16]
"247745:";  output[10] = r[2]
"247748:";  r[16] = input[28]
"24774b:";  r[3] = r[3] ^ r[16]
"24774f:";  output[11] = r[3]
"247752:";  r[16] = input[29]
"247755:";  r[4] = r[4] ^ r[16]
"247759:";  # jmp 0x185854
"185854:";  output[12] = r[4]
"185857:";  r[16] = input[30]
"18585a:";  r[5] = r[5] ^ r[16]
"18585e:";  output[13] = r[5]
"185861:";  r[16] = input[31]
"185864:";  r[6] = r[6] ^ r[16]
"185868:";  output[14] = r[6]
"18586b:";  r[16] = input[32]
"18586e:";  r[7] = r[7] ^ r[16]
"185872:";  output[15] = r[7]
"185875:";  ret(0)
